(* Generated by pcode2coq.py + ixb's own hands
arch: armv8
file: wcstok.lo
function: wcstok
*)

Require Import Picinae_armv8_pcode.
Require Import NArith.
Open Scope N.

Definition wcstok_lo_wcstok_armv8 : program := fun _ a => match a with

(* 0x00100000: stp x29,x30,[sp, #-0x30]! *)
| 1048576 => Some (4,
	Move (V_TEMP 238080) (Var R_X29) $;
	Move (V_TEMP 238208) (Var R_X30) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 18446744073709551568 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_SP) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var R_SP) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00100004: mov x29,sp *)
| 1048580 => Some (4,
	Move R_X29 (Var R_SP)
)

(* 0x00100008: stp x19,x20,[sp, #0x10] *)
| 1048584 => Some (4,
	Move (V_TEMP 238080) (Var R_X19) $;
	Move (V_TEMP 238208) (Var R_X20) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x0010000c: stp x21,x22,[sp, #0x20] *)
| 1048588 => Some (4,
	Move (V_TEMP 238080) (Var R_X21) $;
	Move (V_TEMP 238208) (Var R_X22) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00100010: mov x22,x1 *)
| 1048592 => Some (4,
	Move R_X22 (Var R_X1)
)

(* 0x00100014: mov x21,x2 *)
| 1048596 => Some (4,
	Move R_X21 (Var R_X2)
)

(* 0x00100018: cbnz x0,0x00100058 *)
| 1048600 => Some (4,
	Move (V_TEMP 102016) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Var R_X0) (Word 0 64))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102016))) (
		Jmp (Word 1048664 64)
	) (* else *) (
		Nop
	)
)

(* 0x0010001c: ldr x19,[x2] *)
| 1048604 => Some (4,
	Move (V_TEMP 26624) (Var R_X2) $;
	Move R_X19 (Load (Var V_MEM64) (Var (V_TEMP 26624)) LittleE 8)
)

(* 0x00100020: cbz x19,0x00100040 *)
| 1048608 => Some (4,
	Move (V_TEMP 102272) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var R_X19) (Word 0 64))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102272))) (
		Jmp (Word 1048640 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100024: mov x1,x22 *)
| 1048612 => Some (4,
	Move R_X1 (Var R_X22)
)

(* 0x00100028: mov x0,x19 *)
| 1048616 => Some (4,
	Move R_X0 (Var R_X19)
)

(* 0x0010002c: bl 0x00200000 *)
| 1048620 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048620 64) (Word 4 64)) $;
	Jmp (Word 2097152 64)
)

(* 0x00100030: add x20,x19,x0, LSL #0x2 *)
| 1048624 => Some (4,
	Move (V_TEMP 17408) (BinOp OP_LSHIFT (Var R_X0) (Cast CAST_UNSIGNED 64 (Word 2 32))) $;
	Move (V_TEMP 74624) (Var (V_TEMP 17408)) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 74624))) (Var R_X19))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X20 (Var (V_TEMP 74880))
)

(* 0x00100034: ldr w0,[x19, x0, LSL #0x2] *)
| 1048628 => Some (4,
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 2 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 151168) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 151168)))
)

(* 0x00100038: cbnz w0,0x00100060 *)
| 1048632 => Some (4,
	Move (V_TEMP 101888) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Extract 31 0 (Var R_X0)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 101888))) (
		Jmp (Word 1048672 64)
	) (* else *) (
		Nop
	)
)

(* 0x0010003c: str xzr,[x21] *)
| 1048636 => Some (4,
	Move (V_TEMP 26624) (Var R_X21) $;
	Move (V_TEMP 1536) (Word 0 64) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 26624)) (Cast CAST_LOW 64 (Var (V_TEMP 1536))) LittleE 8)
)

(* 0x00100040: mov x20,#0x0 *)
| 1048640 => Some (4,
	Move R_X20 (Word 0 64)
)

(* 0x00100044: ldp x21,x22,[sp, #0x20] *)
| 1048644 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X21 (Var (V_TEMP 148352)) $;
	Move R_X22 (Var (V_TEMP 148736))
)

(* 0x00100048: mov x0,x20 *)
| 1048648 => Some (4,
	Move R_X0 (Var R_X20)
)

(* 0x0010004c: ldp x19,x20,[sp, #0x10] *)
| 1048652 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X19 (Var (V_TEMP 148352)) $;
	Move R_X20 (Var (V_TEMP 148736))
)

(* 0x00100050: ldp x29,x30,[sp], #0x30 *)
| 1048656 => Some (4,
	Move (V_TEMP 31872) (Var R_SP) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 48 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31872)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31872)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X29 (Var (V_TEMP 148352)) $;
	Move R_X30 (Var (V_TEMP 148736))
)

(* 0x00100054: ret *)
| 1048660 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

(* 0x00100058: mov x19,x0 *)
| 1048664 => Some (4,
	Move R_X19 (Var R_X0)
)

(* 0x0010005c: b 0x00100024 *)
| 1048668 => Some (4,
	Jmp (Word 1048612 64)
)

(* 0x00100060: mov x1,x22 *)
| 1048672 => Some (4,
	Move R_X1 (Var R_X22)
)

(* 0x00100064: mov x0,x20 *)
| 1048676 => Some (4,
	Move R_X0 (Var R_X20)
)

(* 0x00100068: bl 0x00600000 *)
| 1048680 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048680 64) (Word 4 64)) $;
	Jmp (Word 6291456 64)
)

(* 0x0010006c: lsl x1,x0,#0x2 *)
| 1048684 => Some (4,
	Move R_X1 (BinOp OP_LSHIFT (Var R_X0) (Word 2 64))
)

(* 0x00100070: add x0,x20,x0, LSL #0x2 *)
| 1048688 => Some (4,
	Move (V_TEMP 17408) (BinOp OP_LSHIFT (Var R_X0) (Cast CAST_UNSIGNED 64 (Word 2 32))) $;
	Move (V_TEMP 74624) (Var (V_TEMP 17408)) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X20) (Var (V_TEMP 74624))) (Var R_X20))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X20) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X20) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X20) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X20) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 74880))
)

(* 0x00100074: ldr w2,[x20, x1, LSL #0x0] *)
| 1048692 => Some (4,
	Move (V_TEMP 23040) (Var R_X1) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X20) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 151168) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 4) $;
	Move R_X2 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 151168)))
)

(* 0x00100078: cbz w2,0x0010008c *)
| 1048696 => Some (4,
	Move (V_TEMP 102144) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Extract 31 0 (Var R_X2)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102144))) (
		Jmp (Word 1048716 64)
	) (* else *) (
		Nop
	)
)

(* 0x0010007c: add x0,x0,#0x4 *)
| 1048700 => Some (4,
	Move (V_TEMP 73344) (Word 4 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 73600))
)

(* 0x00100080: str wzr,[x20, x1, LSL #0x0] *)
| 1048704 => Some (4,
	Move (V_TEMP 768) (Word 0 32) $;
	Move (V_TEMP 238848) (Var (V_TEMP 768)) $;
	Move (V_TEMP 23040) (Var R_X1) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X20) (Var (V_TEMP 28928))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 32 (Var (V_TEMP 238848))) LittleE 4)
)

(* 0x00100084: str x0,[x21] *)
| 1048708 => Some (4,
	Move (V_TEMP 26624) (Var R_X21) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 26624)) (Cast CAST_LOW 64 (Var R_X0)) LittleE 8)
)

(* 0x00100088: b 0x00100044 *)
| 1048712 => Some (4,
	Jmp (Word 1048644 64)
)

(* 0x0010008c: str xzr,[x21] *)
| 1048716 => Some (4,
	Move (V_TEMP 26624) (Var R_X21) $;
	Move (V_TEMP 1536) (Word 0 64) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 26624)) (Cast CAST_LOW 64 (Var (V_TEMP 1536))) LittleE 8)
)

(* 0x00100090: b 0x00100044 *)
| 1048720 => Some (4,
	Jmp (Word 1048644 64)
)

(* Begin wcsspn *)
(* 0x00200000: stp x29,x30,[sp, #-0x30]! *)
| 2097152 => Some (4,
	Move (V_TEMP 238080) (Var R_X29) $;
	Move (V_TEMP 238208) (Var R_X30) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 18446744073709551568 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_SP) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var R_SP) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00200004: mov x29,sp *)
| 2097156 => Some (4,
	Move R_X29 (Var R_SP)
)

(* 0x00200008: stp x19,x20,[sp, #0x10] *)
| 2097160 => Some (4,
	Move (V_TEMP 238080) (Var R_X19) $;
	Move (V_TEMP 238208) (Var R_X20) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x0020000c: mov x20,x0 *)
| 2097164 => Some (4,
	Move R_X20 (Var R_X0)
)

(* 0x00200010: mov x19,x0 *)
| 2097168 => Some (4,
	Move R_X19 (Var R_X0)
)

(* 0x00200014: str x21,[sp, #0x20] *)
| 2097172 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 25856)) (Cast CAST_LOW 64 (Var R_X21)) LittleE 8)
)

(* 0x00200018: mov x21,x1 *)
| 2097176 => Some (4,
	Move R_X21 (Var R_X1)
)

(* 0x0020001c: ldr w1,[x19] *)
| 2097180 => Some (4,
	Move (V_TEMP 26496) (Var R_X19) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 26496)) LittleE 4) $;
	Move R_X1 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x00200020: cbz w1,0x00200030 *)
| 2097184 => Some (4,
	Move (V_TEMP 102144) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Extract 31 0 (Var R_X1)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102144))) (
		Jmp (Word 2097200 64)
	) (* else *) (
		Nop
	)
)

(* 0x00200024: mov x0,x21 *)
| 2097188 => Some (4,
	Move R_X0 (Var R_X21)
)

(* 0x00200028: bl 0x00300000 *)
| 2097192 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 2097192 64) (Word 4 64)) $;
	Jmp (Word 3145728 64)
)

(* 0x0020002c: cbnz x0,0x00200048 *)
| 2097196 => Some (4,
	Move (V_TEMP 102016) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Var R_X0) (Word 0 64))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102016))) (
		Jmp (Word 2097224 64)
	) (* else *) (
		Nop
	)
)

(* 0x00200030: sub x0,x19,x20 *)
| 2097200 => Some (4,
	Move R_X0 (BinOp OP_MINUS (Var R_X19) (Var R_X20))
)

(* 0x00200034: ldp x19,x20,[sp, #0x10] *)
| 2097204 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X19 (Var (V_TEMP 148352)) $;
	Move R_X20 (Var (V_TEMP 148736))
)

(* 0x00200038: asr x0,x0,#0x2 *)
| 2097208 => Some (4,
	Move R_X0 (BinOp OP_ARSHIFT (Var R_X0) (Word 2 64))
)

(* 0x0020003c: ldr x21,[sp, #0x20] *)
| 2097212 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move R_X21 (Load (Var V_MEM64) (Var (V_TEMP 25856)) LittleE 8)
)

(* 0x00200040: ldp x29,x30,[sp], #0x30 *)
| 2097216 => Some (4,
	Move (V_TEMP 31872) (Var R_SP) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 48 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31872)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31872)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X29 (Var (V_TEMP 148352)) $;
	Move R_X30 (Var (V_TEMP 148736))
)

(* 0x00200044: ret *)
| 2097220 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

(* 0x00200048: add x19,x19,#0x4 *)
| 2097224 => Some (4,
	Move (V_TEMP 73344) (Word 4 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) (Var R_X19))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X19 (Var (V_TEMP 73600))
)

(* 0x0020004c: b 0x0020001c *)
| 2097228 => Some (4,
	Jmp (Word 2097180 64)
)

(* Begin wcschr *)
(* 0x00300000: stp x29,x30,[sp, #-0x20]! *)
| 3145728 => Some (4,
	Move (V_TEMP 238080) (Var R_X29) $;
	Move (V_TEMP 238208) (Var R_X30) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 18446744073709551584 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_SP) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var R_SP) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00300004: mov x29,sp *)
| 3145732 => Some (4,
	Move R_X29 (Var R_SP)
)

(* 0x00300008: str x19,[sp, #0x10] *)
| 3145736 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 25856)) (Cast CAST_LOW 64 (Var R_X19)) LittleE 8)
)

(* 0x0030000c: mov x19,x0 *)
| 3145740 => Some (4,
	Move R_X19 (Var R_X0)
)

(* 0x00300010: cbnz w1,0x00300030 *)
| 3145744 => Some (4,
	Move (V_TEMP 101888) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Extract 31 0 (Var R_X1)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 101888))) (
		Jmp (Word 3145776 64)
	) (* else *) (
		Nop
	)
)

(* 0x00300014: bl 0x00500000 *)
| 3145748 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 3145748 64) (Word 4 64)) $;
	Jmp (Word 5242880 64)
)

(* 0x00300018: add x19,x19,x0, LSL #0x2 *)
| 3145752 => Some (4,
	Move (V_TEMP 17408) (BinOp OP_LSHIFT (Var R_X0) (Cast CAST_UNSIGNED 64 (Word 2 32))) $;
	Move (V_TEMP 74624) (Var (V_TEMP 17408)) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 74624))) (Var R_X19))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X19 (Var (V_TEMP 74880))
)

(* 0x0030001c: mov x0,x19 *)
| 3145756 => Some (4,
	Move R_X0 (Var R_X19)
)

(* 0x00300020: ldr x19,[sp, #0x10] *)
| 3145760 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move R_X19 (Load (Var V_MEM64) (Var (V_TEMP 25856)) LittleE 8)
)

(* 0x00300024: ldp x29,x30,[sp], #0x20 *)
| 3145764 => Some (4,
	Move (V_TEMP 31872) (Var R_SP) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31872)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31872)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X29 (Var (V_TEMP 148352)) $;
	Move R_X30 (Var (V_TEMP 148736))
)

(* 0x00300028: ret *)
| 3145768 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

(* 0x0030002c: add x19,x19,#0x4 *)
| 3145772 => Some (4,
	Move (V_TEMP 73344) (Word 4 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) (Var R_X19))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X19 (Var (V_TEMP 73600))
)

(* 0x00300030: ldr w0,[x19] *)
| 3145776 => Some (4,
	Move (V_TEMP 26496) (Var R_X19) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 26496)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x00300034: cbz w0,0x00300044 *)
| 3145780 => Some (4,
	Move (V_TEMP 102144) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Extract 31 0 (Var R_X0)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102144))) (
		Jmp (Word 3145796 64)
	) (* else *) (
		Nop
	)
)

(* 0x00300038: cmp w0,w1 *)
| 3145784 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Extract 31 0 (Var R_X1)) (Extract 31 0 (Var R_X0)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X0)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Extract 31 0 (Var R_X1))) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Extract 31 0 (Var R_X1))) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X1)) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 118784) (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Extract 31 0 (Var R_X1))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 118784)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 118784)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x0030003c: b.ne 0x0030002c *)
| 3145788 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 3145772 64)
	) (* else *) (
		Nop
	)
)

(* 0x00300040: b 0x0030001c *)
| 3145792 => Some (4,
	Jmp (Word 3145756 64)
)

(* 0x00300044: mov x19,#0x0 *)
| 3145796 => Some (4,
	Move R_X19 (Word 0 64)
)

(* 0x00300048: b 0x0030001c *)
| 3145800 => Some (4,
	Jmp (Word 3145756 64)
)

(* Begin wcslen *)
(* 0x00500000: mov x1,x0 *)
| 5242880 => Some (4,
	Move R_X1 (Var R_X0)
)

(* 0x00500004: ldr w2,[x1] *)
| 5242884 => Some (4,
	Move (V_TEMP 26496) (Var R_X1) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 26496)) LittleE 4) $;
	Move R_X2 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x00500008: cbnz w2,0x00500018 *)
| 5242888 => Some (4,
	Move (V_TEMP 101888) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Extract 31 0 (Var R_X2)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 101888))) (
		Jmp (Word 5242904 64)
	) (* else *) (
		Nop
	)
)

(* 0x0050000c: sub x0,x1,x0 *)
| 5242892 => Some (4,
	Move R_X0 (BinOp OP_MINUS (Var R_X1) (Var R_X0))
)

(* 0x00500010: asr x0,x0,#0x2 *)
| 5242896 => Some (4,
	Move R_X0 (BinOp OP_ARSHIFT (Var R_X0) (Word 2 64))
)

(* 0x00500014: ret *)
| 5242900 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

(* 0x00500018: add x1,x1,#0x4 *)
| 5242904 => Some (4,
	Move (V_TEMP 73344) (Word 4 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 73344))) (Var R_X1))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X1 (Var (V_TEMP 73600))
)

(* 0x0050001c: b 0x00500004 *)
| 5242908 => Some (4,
	Jmp (Word 5242884 64)
)

(* Begin wcscspn *)
(* 0x00600000: stp x29,x30,[sp, #-0x30]! *)
| 6291456 => Some (4,
	Move (V_TEMP 238080) (Var R_X29) $;
	Move (V_TEMP 238208) (Var R_X30) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 18446744073709551568 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_SP) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var R_SP) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00600004: mov x29,sp *)
| 6291460 => Some (4,
	Move R_X29 (Var R_SP)
)

(* 0x00600008: str x21,[sp, #0x20] *)
| 6291464 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 25856)) (Cast CAST_LOW 64 (Var R_X21)) LittleE 8)
)

(* 0x0060000c: mov x21,x1 *)
| 6291468 => Some (4,
	Move R_X21 (Var R_X1)
)

(* 0x00600010: ldr w1,[x1] *)
| 6291472 => Some (4,
	Move (V_TEMP 26496) (Var R_X1) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 26496)) LittleE 4) $;
	Move R_X1 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x00600014: stp x19,x20,[sp, #0x10] *)
| 6291476 => Some (4,
	Move (V_TEMP 238080) (Var R_X19) $;
	Move (V_TEMP 238208) (Var R_X20) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00600018: cbnz w1,0x0060002c *)
| 6291480 => Some (4,
	Move (V_TEMP 101888) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Extract 31 0 (Var R_X1)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 101888))) (
		Jmp (Word 6291500 64)
	) (* else *) (
		Nop
	)
)

(* 0x0060001c: ldp x19,x20,[sp, #0x10] *)
| 6291484 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X19 (Var (V_TEMP 148352)) $;
	Move R_X20 (Var (V_TEMP 148736))
)

(* 0x00600020: ldr x21,[sp, #0x20] *)
| 6291488 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move R_X21 (Load (Var V_MEM64) (Var (V_TEMP 25856)) LittleE 8)
)

(* 0x00600024: ldp x29,x30,[sp], #0x30 *)
| 6291492 => Some (4,
	Move (V_TEMP 31872) (Var R_SP) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 48 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31872)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31872)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X29 (Var (V_TEMP 148352)) $;
	Move R_X30 (Var (V_TEMP 148736))
)

(* 0x00600028: b 0x00500000 *)
| 6291496 => Some (4,
	Jmp (Word 5242880 64)
)

(* 0x0060002c: ldr w2,[x21, #0x4] *)
| 6291500 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_X21) (Word 4 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X2 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x00600030: mov x20,x0 *)
| 6291504 => Some (4,
	Move R_X20 (Var R_X0)
)

(* 0x00600034: cbnz w2,0x00600060 *)
| 6291508 => Some (4,
	Move (V_TEMP 101888) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Extract 31 0 (Var R_X2)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 101888))) (
		Jmp (Word 6291552 64)
	) (* else *) (
		Nop
	)
)

(* 0x00600038: bl 0x00300000 *)
| 6291512 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 6291512 64) (Word 4 64)) $;
	Jmp (Word 3145728 64)
)

(* 0x0060003c: cbz x0,0x00600058 *)
| 6291516 => Some (4,
	Move (V_TEMP 102272) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var R_X0) (Word 0 64))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102272))) (
		Jmp (Word 6291544 64)
	) (* else *) (
		Nop
	)
)

(* 0x00600040: sub x0,x0,x20 *)
| 6291520 => Some (4,
	Move R_X0 (BinOp OP_MINUS (Var R_X0) (Var R_X20))
)

(* 0x00600044: ldp x19,x20,[sp, #0x10] *)
| 6291524 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X19 (Var (V_TEMP 148352)) $;
	Move R_X20 (Var (V_TEMP 148736))
)

(* 0x00600048: asr x0,x0,#0x2 *)
| 6291528 => Some (4,
	Move R_X0 (BinOp OP_ARSHIFT (Var R_X0) (Word 2 64))
)

(* 0x0060004c: ldr x21,[sp, #0x20] *)
| 6291532 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move R_X21 (Load (Var V_MEM64) (Var (V_TEMP 25856)) LittleE 8)
)

(* 0x00600050: ldp x29,x30,[sp], #0x30 *)
| 6291536 => Some (4,
	Move (V_TEMP 31872) (Var R_SP) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 48 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31872)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31872)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X29 (Var (V_TEMP 148352)) $;
	Move R_X30 (Var (V_TEMP 148736))
)

(* 0x00600054: ret *)
| 6291540 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

(* 0x00600058: mov x0,x20 *)
| 6291544 => Some (4,
	Move R_X0 (Var R_X20)
)

(* 0x0060005c: b 0x0060001c *)
| 6291548 => Some (4,
	Jmp (Word 6291484 64)
)

(* 0x00600060: mov x19,x0 *)
| 6291552 => Some (4,
	Move R_X19 (Var R_X0)
)

(* 0x00600064: b 0x00600078 *)
| 6291556 => Some (4,
	Jmp (Word 6291576 64)
)

(* 0x00600068: mov x0,x21 *)
| 6291560 => Some (4,
	Move R_X0 (Var R_X21)
)

(* 0x0060006c: bl 0x00300000 *)
| 6291564 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 6291564 64) (Word 4 64)) $;
	Jmp (Word 3145728 64)
)

(* 0x00600070: cbnz x0,0x00600080 *)
| 6291568 => Some (4,
	Move (V_TEMP 102016) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Var R_X0) (Word 0 64))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102016))) (
		Jmp (Word 6291584 64)
	) (* else *) (
		Nop
	)
)

(* 0x00600074: add x19,x19,#0x4 *)
| 6291572 => Some (4,
	Move (V_TEMP 73344) (Word 4 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) (Var R_X19))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X19 (Var (V_TEMP 73600))
)

(* 0x00600078: ldr w1,[x19] *)
| 6291576 => Some (4,
	Move (V_TEMP 26496) (Var R_X19) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 26496)) LittleE 4) $;
	Move R_X1 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x0060007c: cbnz w1,0x00600068 *)
| 6291580 => Some (4,
	Move (V_TEMP 101888) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Extract 31 0 (Var R_X1)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 101888))) (
		Jmp (Word 6291560 64)
	) (* else *) (
		Nop
	)
)

(* 0x00600080: sub x0,x19,x20 *)
| 6291584 => Some (4,
	Move R_X0 (BinOp OP_MINUS (Var R_X19) (Var R_X20))
)

(* 0x00600084: b 0x00600044 *)
| 6291588 => Some (4,
	Jmp (Word 6291524 64)
)

| _ => None
end.

Theorem welltyped: welltyped_prog arm8typctx wcstok_lo_wcstok_armv8. Proof. Picinae_typecheck. Qed.
