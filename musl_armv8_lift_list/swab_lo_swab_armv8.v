(* Generated by pcode2coq.py
arch: armv8
file: swab.lo
function: swab
*)

Require Import Picinae_armv8_pcode.
Require Import NArith.
Open Scope N.

Definition swab_lo_swab_armv8 : program := fun _ a => match a with

(* 0x00100000: add x5,x0,#0x1 *)
| 1048576 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X5 (Var (V_TEMP 73600))
)

(* 0x00100004: add x6,x1,#0x1 *)
| 1048580 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 73344))) (Var R_X1))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X6 (Var (V_TEMP 73600))
)

(* 0x00100008: mov x3,#0x0 *)
| 1048584 => Some (4,
	Move R_X3 (Word 0 64)
)

(* 0x0010000c: sub x4,x2,x3 *)
| 1048588 => Some (4,
	Move R_X4 (BinOp OP_MINUS (Var R_X2) (Var R_X3))
)

(* 0x00100010: cmp x4,#0x1 *)
| 1048592 => Some (4,
	Move (V_TEMP 117888) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var (V_TEMP 117888)) (Var R_X4))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X4) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X4) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X4) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 117888)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 118144) (BinOp OP_MINUS (Var R_X4) (Var (V_TEMP 117888))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100014: b.gt 0x0010001c *)
| 1048596 => Some (4,
	Move (V_TEMP 4736) (UnOp OP_NOT (Var R_ZR)) $;
	Move (V_TEMP 4864) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var R_NG) (Var R_OV))) $;
	Move (V_TEMP 5120) (BinOp OP_AND (Var (V_TEMP 4736)) (Var (V_TEMP 4864))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 5120))) (
		Jmp (Word 1048604 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100018: ret *)
| 1048600 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

(* 0x0010001c: ldrb w4,[x5, x3, LSL ] *)
| 1048604 => Some (4,
	Move (V_TEMP 23040) (Var R_X3) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X5) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X4 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x00100020: strb w4,[x1, x3, LSL ] *)
| 1048608 => Some (4,
	Move (V_TEMP 239616) (Extract 31 0 (Var R_X4)) $;
	Move (V_TEMP 23040) (Var R_X3) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 239744) (Cast CAST_LOW 8 (BinOp OP_RSHIFT (Var (V_TEMP 239616)) (Word 0 32))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 8 (Var (V_TEMP 239744))) LittleE 1)
)

(* 0x00100024: ldrb w4,[x0, x3, LSL ] *)
| 1048612 => Some (4,
	Move (V_TEMP 23040) (Var R_X3) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X4 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x00100028: strb w4,[x6, x3, LSL ] *)
| 1048616 => Some (4,
	Move (V_TEMP 239616) (Extract 31 0 (Var R_X4)) $;
	Move (V_TEMP 23040) (Var R_X3) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X6) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 239744) (Cast CAST_LOW 8 (BinOp OP_RSHIFT (Var (V_TEMP 239616)) (Word 0 32))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 8 (Var (V_TEMP 239744))) LittleE 1)
)

(* 0x0010002c: add x3,x3,#0x2 *)
| 1048620 => Some (4,
	Move (V_TEMP 73344) (Word 2 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X3) (Var (V_TEMP 73344))) (Var R_X3))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X3) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X3) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X3) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X3) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X3 (Var (V_TEMP 73600))
)

(* 0x00100030: b 0x0010000c *)
| 1048624 => Some (4,
	Jmp (Word 1048588 64)
)

| _ => None
end.

Theorem welltyped: welltyped_prog arm8typctx swab_lo_swab_armv8. Proof. Picinae_typecheck. Qed.