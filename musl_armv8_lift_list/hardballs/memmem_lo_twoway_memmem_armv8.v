(* Generated by pcode2coq.py
arch: armv8
file: memmem.lo
function: twoway_memmem
*)

Require Import Picinae_armv8_pcode.
Require Import NArith.
Open Scope N.

Definition memmem_lo_twoway_memmem_armv8 : program := fun _ a => match a with

(* 0x00100000: sub sp,sp,#0x870 *)
| 1048576 => Some (4,
	Move R_SP (BinOp OP_MINUS (Var R_SP) (Word 2160 64))
)

(* 0x00100004: mov x5,#0x1 *)
| 1048580 => Some (4,
	Move R_X5 (Word 1 64)
)

(* 0x00100008: add x4,sp,#0x70 *)
| 1048584 => Some (4,
	Move (V_TEMP 73344) (Word 112 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Var R_SP))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X4 (Var (V_TEMP 73600))
)

(* 0x0010000c: stp x29,x30,[sp] *)
| 1048588 => Some (4,
	Move (V_TEMP 238080) (Var R_X29) $;
	Move (V_TEMP 238208) (Var R_X30) $;
	Move (V_TEMP 31744) (Var R_SP) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31744)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31744)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00100010: mov x29,sp *)
| 1048592 => Some (4,
	Move R_X29 (Var R_SP)
)

(* 0x00100014: stp x19,x20,[sp, #0x10] *)
| 1048596 => Some (4,
	Move (V_TEMP 238080) (Var R_X19) $;
	Move (V_TEMP 238208) (Var R_X20) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00100018: mov x20,x0 *)
| 1048600 => Some (4,
	Move R_X20 (Var R_X0)
)

(* 0x0010001c: adrp x0,0x100000 *)
| 1048604 => Some (4,
	Move R_X0 (Word 1048576 64)
)

(* 0x00100020: add x0,x0,#0x430 *)
| 1048608 => Some (4,
	Move (V_TEMP 73344) (Word 1072 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 73600))
)

(* 0x00100024: stp x21,x22,[sp, #0x20] *)
| 1048612 => Some (4,
	Move (V_TEMP 238080) (Var R_X21) $;
	Move (V_TEMP 238208) (Var R_X22) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00100028: mov x21,x3 *)
| 1048616 => Some (4,
	Move R_X21 (Var R_X3)
)

(* 0x0010002c: stp x23,x24,[sp, #0x30] *)
| 1048620 => Some (4,
	Move (V_TEMP 238080) (Var R_X23) $;
	Move (V_TEMP 238208) (Var R_X24) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 48 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00100030: mov x24,x1 *)
| 1048624 => Some (4,
	Move R_X24 (Var R_X1)
)

(* 0x00100034: mov x23,x2 *)
| 1048628 => Some (4,
	Move R_X23 (Var R_X2)
)

(* 0x00100038: ld1 {v0.16B,v1.16B},[x0] *)
| 1048632 => Some (4,
	Move R_TMP_LDXN (Var R_X0) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 0 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 8 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 16 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 24 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 32 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 40 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 48 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 56 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 64 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 72 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 80 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 88 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 96 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 104 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 112 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 120 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 0 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 8 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 16 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 24 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 32 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 40 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 48 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 56 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 64 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 72 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 80 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 88 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 96 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 104 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 112 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 120 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64))
)

(* 0x0010003c: stp x25,x26,[sp, #0x40] *)
| 1048636 => Some (4,
	Move (V_TEMP 238080) (Var R_X25) $;
	Move (V_TEMP 238208) (Var R_X26) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 64 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00100040: add x25,sp,#0x50 *)
| 1048640 => Some (4,
	Move (V_TEMP 73344) (Word 80 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Var R_SP))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X25 (Var (V_TEMP 73600))
)

(* 0x00100044: mov x0,#0x0 *)
| 1048644 => Some (4,
	Move R_X0 (Word 0 64)
)

(* 0x00100048: st1 {v0.16B,v1.16B},[x25] *)
| 1048648 => Some (4,
	Move R_TMP_LDXN (Var R_X25) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 7 0 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 15 8 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 23 16 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 31 24 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 39 32 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 47 40 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 55 48 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 63 56 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 71 64 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 79 72 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 87 80 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 95 88 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 103 96 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 111 104 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 119 112 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 127 120 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 7 0 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 15 8 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 23 16 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 31 24 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 39 32 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 47 40 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 55 48 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 63 56 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 71 64 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 79 72 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 87 80 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 95 88 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 103 96 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 111 104 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 119 112 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 127 120 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64))
)

(* 0x0010004c: cmp x0,x21 *)
| 1048652 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X21) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var R_X21)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var R_X21)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X21) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X0) (Var R_X21)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100050: b.ne 0x00100128 *)
| 1048656 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048872 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100054: mov x19,#0x1 *)
| 1048660 => Some (4,
	Move R_X19 (Word 1 64)
)

(* 0x00100058: mov x4,x19 *)
| 1048664 => Some (4,
	Move R_X4 (Var R_X19)
)

(* 0x0010005c: mov x1,#0x0 *)
| 1048668 => Some (4,
	Move R_X1 (Word 0 64)
)

(* 0x00100060: mov x22,#-0x1 *)
| 1048672 => Some (4,
	Move R_X22 (Word 18446744073709551615 64)
)

(* 0x00100064: add x0,x1,x4 *)
| 1048676 => Some (4,
	Move (V_TEMP 74624) (Var R_X4) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 74624))) (Var R_X1))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 74880))
)

(* 0x00100068: cmp x0,x21 *)
| 1048680 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X21) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var R_X21)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var R_X21)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X21) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X0) (Var R_X21)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x0010006c: b.cc 0x0010014c *)
| 1048684 => Some (4,
	Move (V_TEMP 2816) (UnOp OP_NOT (Var R_CY)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2816))) (
		Jmp (Word 1048908 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100070: mov x0,#0x1 *)
| 1048688 => Some (4,
	Move R_X0 (Word 1 64)
)

(* 0x00100074: mov x4,x0 *)
| 1048692 => Some (4,
	Move R_X4 (Var R_X0)
)

(* 0x00100078: mov x1,#0x0 *)
| 1048696 => Some (4,
	Move R_X1 (Word 0 64)
)

(* 0x0010007c: mov x3,#-0x1 *)
| 1048700 => Some (4,
	Move R_X3 (Word 18446744073709551615 64)
)

(* 0x00100080: add x2,x1,x4 *)
| 1048704 => Some (4,
	Move (V_TEMP 74624) (Var R_X4) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 74624))) (Var R_X1))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X2 (Var (V_TEMP 74880))
)

(* 0x00100084: cmp x2,x21 *)
| 1048708 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X21) (Var R_X2))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X2) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X2) (Var R_X21)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X2) (Var R_X21)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X21) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X2) (Var R_X21)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100088: b.cc 0x001001a0 *)
| 1048712 => Some (4,
	Move (V_TEMP 2816) (UnOp OP_NOT (Var R_CY)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2816))) (
		Jmp (Word 1048992 64)
	) (* else *) (
		Nop
	)
)

(* 0x0010008c: add x1,x22,#0x1 *)
| 1048716 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X22) (Var (V_TEMP 73344))) (Var R_X22))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X22) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X22) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X22) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X22) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X1 (Var (V_TEMP 73600))
)

(* 0x00100090: add x2,x3,#0x1 *)
| 1048720 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X3) (Var (V_TEMP 73344))) (Var R_X3))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X3) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X3) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X3) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X3) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X2 (Var (V_TEMP 73600))
)

(* 0x00100094: cmp x2,x1 *)
| 1048724 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X1) (Var R_X2))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X2) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X2) (Var R_X1)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X2) (Var R_X1)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X2) (Var R_X1)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100098: csel x22,x22,x3,ls *)
| 1048728 => Some (4,
	Move (V_TEMP 7040) (UnOp OP_NOT (Var R_CY)) $;
	Move (V_TEMP 7296) (BinOp OP_OR (Var (V_TEMP 7040)) (Var R_ZR)) $;
	Move (V_TEMP 122624) (Var R_X22) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 7296))) (
		Jmp (Relative pcode jump detected)
	) (* else *) (
		Nop
	) $;
	Move (V_TEMP 122624) (Var R_X3) $;
	Move R_X22 (Var (V_TEMP 122624))
)

(* 0x0010009c: csel x19,x19,x0,ls *)
| 1048732 => Some (4,
	Move (V_TEMP 7040) (UnOp OP_NOT (Var R_CY)) $;
	Move (V_TEMP 7296) (BinOp OP_OR (Var (V_TEMP 7040)) (Var R_ZR)) $;
	Move (V_TEMP 122624) (Var R_X19) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 7296))) (
		Jmp (Relative pcode jump detected)
	) (* else *) (
		Nop
	) $;
	Move (V_TEMP 122624) (Var R_X0) $;
	Move R_X19 (Var (V_TEMP 122624))
)

(* 0x001000a0: add x26,x22,#0x1 *)
| 1048736 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X22) (Var (V_TEMP 73344))) (Var R_X22))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X22) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X22) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X22) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X22) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X26 (Var (V_TEMP 73600))
)

(* 0x001000a4: add x1,x23,x19 *)
| 1048740 => Some (4,
	Move (V_TEMP 74624) (Var R_X19) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 74624))) (Var R_X23))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X23) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X23) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X1 (Var (V_TEMP 74880))
)

(* 0x001000a8: mov x2,x26 *)
| 1048744 => Some (4,
	Move R_X2 (Var R_X26)
)

(* 0x001000ac: mov x0,x23 *)
| 1048748 => Some (4,
	Move R_X0 (Var R_X23)
)

(* 0x001000b0: bl 0x00101000 *)
| 1048752 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048752 64) (Word 4 64)) $;
	Jmp (Word 1052672 64)
)

(* 0x001000b4: cbz w0,0x001001f4 *)
| 1048756 => Some (4,
	Move (V_TEMP 102144) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Extract 31 0 (Var R_X0)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102144))) (
		Jmp (Word 1049076 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000b8: sub x19,x21,#0x1 *)
| 1048760 => Some (4,
	Move R_X19 (BinOp OP_MINUS (Var R_X21) (Word 1 64))
)

(* 0x001000bc: mov x7,#0x0 *)
| 1048764 => Some (4,
	Move R_X7 (Word 0 64)
)

(* 0x001000c0: sub x19,x19,x22 *)
| 1048768 => Some (4,
	Move R_X19 (BinOp OP_MINUS (Var R_X19) (Var R_X22))
)

(* 0x001000c4: cmp x19,x22 *)
| 1048772 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X22) (Var R_X19))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X19) (Var R_X22)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X19) (Var R_X22)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X22) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X19) (Var R_X22)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x001000c8: csel x19,x19,x22,cs *)
| 1048776 => Some (4,
	Move (V_TEMP 122624) (Var R_X19) $;
	If (Cast CAST_LOW 1 (Var R_CY)) (
		Jmp (Relative pcode jump detected)
	) (* else *) (
		Nop
	) $;
	Move (V_TEMP 122624) (Var R_X22) $;
	Move R_X19 (Var (V_TEMP 122624))
)

(* 0x001000cc: add x19,x19,#0x1 *)
| 1048780 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) (Var R_X19))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X19 (Var (V_TEMP 73600))
)

(* 0x001000d0: mov x0,x20 *)
| 1048784 => Some (4,
	Move R_X0 (Var R_X20)
)

(* 0x001000d4: add x8,sp,#0x70 *)
| 1048788 => Some (4,
	Move (V_TEMP 73344) (Word 112 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Var R_SP))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X8 (Var (V_TEMP 73600))
)

(* 0x001000d8: mov x5,#0x0 *)
| 1048792 => Some (4,
	Move R_X5 (Word 0 64)
)

(* 0x001000dc: sub x1,x24,x0 *)
| 1048796 => Some (4,
	Move R_X1 (BinOp OP_MINUS (Var R_X24) (Var R_X0))
)

(* 0x001000e0: cmp x1,x21 *)
| 1048800 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X21) (Var R_X1))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X1) (Var R_X21)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X1) (Var R_X21)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X21) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X1) (Var R_X21)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x001000e4: b.cc 0x00100264 *)
| 1048804 => Some (4,
	Move (V_TEMP 2816) (UnOp OP_NOT (Var R_CY)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2816))) (
		Jmp (Word 1049188 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000e8: add x3,x0,x21 *)
| 1048808 => Some (4,
	Move (V_TEMP 74624) (Var R_X21) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X3 (Var (V_TEMP 74880))
)

(* 0x001000ec: ldurb w2,[x3, #-0x1] *)
| 1048812 => Some (4,
	Move (V_TEMP 27008) (BinOp OP_PLUS (Var R_X3) (Word 18446744073709551615 64)) $;
	Move (V_TEMP 158592) (Load (Var V_MEM64) (Var (V_TEMP 27008)) LittleE 1) $;
	Move R_X2 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 158592)))
)

(* 0x001000f0: ubfx x1,x2,#0x6,#0x2 *)
| 1048816 => Some (4,
	Move (V_TEMP 269056) (Var R_X2) $;
	Move (V_TEMP 269184) (BinOp OP_RSHIFT (Var (V_TEMP 269056)) (Word 6 64)) $;
	Move (V_TEMP 269312) (BinOp OP_MINUS (Word 64 64) (Word 6 64)) $;
	Move (V_TEMP 269440) (BinOp OP_LSHIFT (Var (V_TEMP 269056)) (Var (V_TEMP 269312))) $;
	Move (V_TEMP 269568) (BinOp OP_OR (Var (V_TEMP 269184)) (Var (V_TEMP 269440))) $;
	Move (V_TEMP 269824) (BinOp OP_AND (Var (V_TEMP 269568)) (Word 18158513697557839875 64)) $;
	Move R_X1 (BinOp OP_AND (Var (V_TEMP 269824)) (Word 3 64))
)

(* 0x001000f4: ldr x1,[x25, x1, LSL #0x3] *)
| 1048820 => Some (4,
	Move (V_TEMP 23040) (Var R_X1) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 3 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X25) (Var (V_TEMP 28928))) $;
	Move R_X1 (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 8)
)

(* 0x001000f8: lsr x1,x1,x2 *)
| 1048824 => Some (4,
	Move (V_TEMP 165120) (BinOp OP_AND (Var R_X2) (Word 63 64)) $;
	Move R_X1 (BinOp OP_RSHIFT (Var R_X1) (Var (V_TEMP 165120)))
)

(* 0x001000fc: and x4,x1,#0x1 *)
| 1048828 => Some (4,
	Move R_X4 (BinOp OP_AND (Var R_X1) (Word 1 64))
)

(* 0x00100100: tbz w1,#0x0,0x001001fc *)
| 1048832 => Some (4,
	Move (V_TEMP 100608) (BinOp OP_RSHIFT (Extract 31 0 (Var R_X1)) (Word 0 32)) $;
	Move (V_TEMP 100736) (BinOp OP_AND (Var (V_TEMP 100608)) (Word 1 32)) $;
	Move (V_TEMP 100992) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 100736)) (Word 0 32))) $;
	Move (V_TEMP 260352) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 100992)) (Word 1 8))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 260352))) (
		Jmp (Word 1049084 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100104: ldr x4,[x8, w2, SXTW #0x3] *)
| 1048836 => Some (4,
	Move (V_TEMP 24448) (Cast CAST_SIGNED 64 (Extract 31 0 (Var R_X2))) $;
	Move (V_TEMP 29184) (Var (V_TEMP 24448)) $;
	Move (V_TEMP 29184) (BinOp OP_LSHIFT (Var (V_TEMP 29184)) (Word 3 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X8) (Var (V_TEMP 29184))) $;
	Move R_X4 (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 8)
)

(* 0x00100108: subs x4,x21,x4 *)
| 1048840 => Some (4,
	Move (V_TEMP 254848) (Var R_X4) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var (V_TEMP 254848)) (Var R_X21))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X21) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X21) (Var (V_TEMP 254848))) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X21) (Var (V_TEMP 254848))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 254848)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 255104) (BinOp OP_MINUS (Var R_X21) (Var (V_TEMP 254848))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 255104)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 255104)) (Word 0 64))) $;
	Move R_X4 (Var (V_TEMP 255104)) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x0010010c: b.eq 0x00100204 *)
| 1048844 => Some (4,
	If (Cast CAST_LOW 1 (Var R_ZR)) (
		Jmp (Word 1049092 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100110: cmp x5,x4 *)
| 1048848 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X4) (Var R_X5))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X5) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X5) (Var R_X4)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X5) (Var R_X4)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X4) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X5) (Var R_X4)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100114: csel x5,x5,x4,cs *)
| 1048852 => Some (4,
	Move (V_TEMP 122624) (Var R_X5) $;
	If (Cast CAST_LOW 1 (Var R_CY)) (
		Jmp (Relative pcode jump detected)
	) (* else *) (
		Nop
	) $;
	Move (V_TEMP 122624) (Var R_X4) $;
	Move R_X5 (Var (V_TEMP 122624))
)

(* 0x00100118: mov x4,#0x0 *)
| 1048856 => Some (4,
	Move R_X4 (Word 0 64)
)

(* 0x0010011c: add x0,x0,x5 *)
| 1048860 => Some (4,
	Move (V_TEMP 74624) (Var R_X5) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 74880))
)

(* 0x00100120: mov x5,x4 *)
| 1048864 => Some (4,
	Move R_X5 (Var R_X4)
)

(* 0x00100124: b 0x001000dc *)
| 1048868 => Some (4,
	Jmp (Word 1048796 64)
)

(* 0x00100128: ldrb w1,[x23, x0, LSL ] *)
| 1048872 => Some (4,
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X1 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x0010012c: add x0,x0,#0x1 *)
| 1048876 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 73600))
)

(* 0x00100130: ubfx x3,x1,#0x6,#0x2 *)
| 1048880 => Some (4,
	Move (V_TEMP 269056) (Var R_X1) $;
	Move (V_TEMP 269184) (BinOp OP_RSHIFT (Var (V_TEMP 269056)) (Word 6 64)) $;
	Move (V_TEMP 269312) (BinOp OP_MINUS (Word 64 64) (Word 6 64)) $;
	Move (V_TEMP 269440) (BinOp OP_LSHIFT (Var (V_TEMP 269056)) (Var (V_TEMP 269312))) $;
	Move (V_TEMP 269568) (BinOp OP_OR (Var (V_TEMP 269184)) (Var (V_TEMP 269440))) $;
	Move (V_TEMP 269824) (BinOp OP_AND (Var (V_TEMP 269568)) (Word 18158513697557839875 64)) $;
	Move R_X3 (BinOp OP_AND (Var (V_TEMP 269824)) (Word 3 64))
)

(* 0x00100134: lsl x2,x5,x1 *)
| 1048884 => Some (4,
	Move (V_TEMP 162816) (BinOp OP_AND (Var R_X1) (Word 63 64)) $;
	Move R_X2 (BinOp OP_LSHIFT (Var R_X5) (Var (V_TEMP 162816)))
)

(* 0x00100138: str x0,[x4, w1, SXTW #0x3] *)
| 1048888 => Some (4,
	Move (V_TEMP 238976) (Var R_X0) $;
	Move (V_TEMP 24448) (Cast CAST_SIGNED 64 (Extract 31 0 (Var R_X1))) $;
	Move (V_TEMP 29184) (Var (V_TEMP 24448)) $;
	Move (V_TEMP 29184) (BinOp OP_LSHIFT (Var (V_TEMP 29184)) (Word 3 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 29184))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 64 (Var (V_TEMP 238976))) LittleE 8)
)

(* 0x0010013c: ldr x6,[x25, x3, LSL #0x3] *)
| 1048892 => Some (4,
	Move (V_TEMP 23040) (Var R_X3) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 3 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X25) (Var (V_TEMP 28928))) $;
	Move R_X6 (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 8)
)

(* 0x00100140: orr x2,x2,x6 *)
| 1048896 => Some (4,
	Move R_X2 (BinOp OP_OR (Var R_X2) (Var R_X6))
)

(* 0x00100144: str x2,[x25, x3, LSL #0x3] *)
| 1048900 => Some (4,
	Move (V_TEMP 238976) (Var R_X2) $;
	Move (V_TEMP 23040) (Var R_X3) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 3 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X25) (Var (V_TEMP 28928))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 64 (Var (V_TEMP 238976))) LittleE 8)
)

(* 0x00100148: b 0x0010004c *)
| 1048904 => Some (4,
	Jmp (Word 1048652 64)
)

(* 0x0010014c: add x2,x23,x22 *)
| 1048908 => Some (4,
	Move (V_TEMP 74624) (Var R_X22) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 74624))) (Var R_X23))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X23) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X23) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X2 (Var (V_TEMP 74880))
)

(* 0x00100150: ldrb w3,[x2, x4, LSL ] *)
| 1048912 => Some (4,
	Move (V_TEMP 23040) (Var R_X4) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X2) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X3 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x00100154: ldrb w2,[x23, x0, LSL ] *)
| 1048916 => Some (4,
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X2 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x00100158: cmp w3,w2 *)
| 1048920 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Extract 31 0 (Var R_X2)) (Extract 31 0 (Var R_X3)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X3)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X3)) (Extract 31 0 (Var R_X2))) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X3)) (Extract 31 0 (Var R_X2))) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X2)) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 118784) (BinOp OP_MINUS (Extract 31 0 (Var R_X3)) (Extract 31 0 (Var R_X2))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 118784)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 118784)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x0010015c: b.ne 0x00100180 *)
| 1048924 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048960 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100160: cmp x4,x19 *)
| 1048928 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X19) (Var R_X4))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X4) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X4) (Var R_X19)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X4) (Var R_X19)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X4) (Var R_X19)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100164: b.ne 0x00100170 *)
| 1048932 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048944 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100168: mov x4,#0x1 *)
| 1048936 => Some (4,
	Move R_X4 (Word 1 64)
)

(* 0x0010016c: b 0x00100178 *)
| 1048940 => Some (4,
	Jmp (Word 1048952 64)
)

(* 0x00100170: add x4,x4,#0x1 *)
| 1048944 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 73344))) (Var R_X4))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X4) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X4) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X4 (Var (V_TEMP 73600))
)

(* 0x00100174: mov x0,x1 *)
| 1048948 => Some (4,
	Move R_X0 (Var R_X1)
)

(* 0x00100178: mov x1,x0 *)
| 1048952 => Some (4,
	Move R_X1 (Var R_X0)
)

(* 0x0010017c: b 0x00100064 *)
| 1048956 => Some (4,
	Jmp (Word 1048676 64)
)

(* 0x00100180: b.ls 0x0010018c *)
| 1048960 => Some (4,
	Move (V_TEMP 3840) (UnOp OP_NOT (Var R_CY)) $;
	Move (V_TEMP 4096) (BinOp OP_OR (Var (V_TEMP 3840)) (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 4096))) (
		Jmp (Word 1048972 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100184: sub x19,x0,x22 *)
| 1048964 => Some (4,
	Move R_X19 (BinOp OP_MINUS (Var R_X0) (Var R_X22))
)

(* 0x00100188: b 0x00100168 *)
| 1048968 => Some (4,
	Jmp (Word 1048936 64)
)

(* 0x0010018c: mov x19,#0x1 *)
| 1048972 => Some (4,
	Move R_X19 (Word 1 64)
)

(* 0x00100190: add x0,x1,#0x1 *)
| 1048976 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 73344))) (Var R_X1))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 73600))
)

(* 0x00100194: mov x22,x1 *)
| 1048980 => Some (4,
	Move R_X22 (Var R_X1)
)

(* 0x00100198: mov x4,x19 *)
| 1048984 => Some (4,
	Move R_X4 (Var R_X19)
)

(* 0x0010019c: b 0x00100178 *)
| 1048988 => Some (4,
	Jmp (Word 1048952 64)
)

(* 0x001001a0: add x5,x23,x3 *)
| 1048992 => Some (4,
	Move (V_TEMP 74624) (Var R_X3) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 74624))) (Var R_X23))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X23) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X23) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X5 (Var (V_TEMP 74880))
)

(* 0x001001a4: ldrb w6,[x5, x4, LSL ] *)
| 1048996 => Some (4,
	Move (V_TEMP 23040) (Var R_X4) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X5) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X6 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x001001a8: ldrb w5,[x23, x2, LSL ] *)
| 1049000 => Some (4,
	Move (V_TEMP 23040) (Var R_X2) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X5 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x001001ac: cmp w6,w5 *)
| 1049004 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Extract 31 0 (Var R_X5)) (Extract 31 0 (Var R_X6)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X6)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X6)) (Extract 31 0 (Var R_X5))) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X6)) (Extract 31 0 (Var R_X5))) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X5)) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 118784) (BinOp OP_MINUS (Extract 31 0 (Var R_X6)) (Extract 31 0 (Var R_X5))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 118784)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 118784)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x001001b0: b.ne 0x001001d4 *)
| 1049008 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1049044 64)
	) (* else *) (
		Nop
	)
)

(* 0x001001b4: cmp x4,x0 *)
| 1049012 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X0) (Var R_X4))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X4) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X4) (Var R_X0)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X4) (Var R_X0)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X4) (Var R_X0)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x001001b8: b.ne 0x001001c4 *)
| 1049016 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1049028 64)
	) (* else *) (
		Nop
	)
)

(* 0x001001bc: mov x4,#0x1 *)
| 1049020 => Some (4,
	Move R_X4 (Word 1 64)
)

(* 0x001001c0: b 0x001001cc *)
| 1049024 => Some (4,
	Jmp (Word 1049036 64)
)

(* 0x001001c4: add x4,x4,#0x1 *)
| 1049028 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 73344))) (Var R_X4))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X4) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X4) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X4 (Var (V_TEMP 73600))
)

(* 0x001001c8: mov x2,x1 *)
| 1049032 => Some (4,
	Move R_X2 (Var R_X1)
)

(* 0x001001cc: mov x1,x2 *)
| 1049036 => Some (4,
	Move R_X1 (Var R_X2)
)

(* 0x001001d0: b 0x00100080 *)
| 1049040 => Some (4,
	Jmp (Word 1048704 64)
)

(* 0x001001d4: b.cs 0x001001e0 *)
| 1049044 => Some (4,
	If (Cast CAST_LOW 1 (Var R_CY)) (
		Jmp (Word 1049056 64)
	) (* else *) (
		Nop
	)
)

(* 0x001001d8: sub x0,x2,x3 *)
| 1049048 => Some (4,
	Move R_X0 (BinOp OP_MINUS (Var R_X2) (Var R_X3))
)

(* 0x001001dc: b 0x001001bc *)
| 1049052 => Some (4,
	Jmp (Word 1049020 64)
)

(* 0x001001e0: mov x0,#0x1 *)
| 1049056 => Some (4,
	Move R_X0 (Word 1 64)
)

(* 0x001001e4: add x2,x1,#0x1 *)
| 1049060 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 73344))) (Var R_X1))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X2 (Var (V_TEMP 73600))
)

(* 0x001001e8: mov x3,x1 *)
| 1049064 => Some (4,
	Move R_X3 (Var R_X1)
)

(* 0x001001ec: mov x4,x0 *)
| 1049068 => Some (4,
	Move R_X4 (Var R_X0)
)

(* 0x001001f0: b 0x001001cc *)
| 1049072 => Some (4,
	Jmp (Word 1049036 64)
)

(* 0x001001f4: sub x7,x21,x19 *)
| 1049076 => Some (4,
	Move R_X7 (BinOp OP_MINUS (Var R_X21) (Var R_X19))
)

(* 0x001001f8: b 0x001000d0 *)
| 1049080 => Some (4,
	Jmp (Word 1048784 64)
)

(* 0x001001fc: mov x0,x3 *)
| 1049084 => Some (4,
	Move R_X0 (Var R_X3)
)

(* 0x00100200: b 0x00100120 *)
| 1049088 => Some (4,
	Jmp (Word 1048864 64)
)

(* 0x00100204: cmp x26,x5 *)
| 1049092 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X5) (Var R_X26))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X26) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X26) (Var R_X5)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X26) (Var R_X5)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X5) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X26) (Var R_X5)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100208: csel x6,x26,x5,cs *)
| 1049096 => Some (4,
	Move (V_TEMP 122624) (Var R_X26) $;
	If (Cast CAST_LOW 1 (Var R_CY)) (
		Jmp (Relative pcode jump detected)
	) (* else *) (
		Nop
	) $;
	Move (V_TEMP 122624) (Var R_X5) $;
	Move R_X6 (Var (V_TEMP 122624))
)

(* 0x0010020c: cmp x6,x21 *)
| 1049100 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X21) (Var R_X6))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X6) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X6) (Var R_X21)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X6) (Var R_X21)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X21) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X6) (Var R_X21)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100210: b.cs 0x00100238 *)
| 1049104 => Some (4,
	If (Cast CAST_LOW 1 (Var R_CY)) (
		Jmp (Word 1049144 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100214: ldrb w2,[x23, x6, LSL ] *)
| 1049108 => Some (4,
	Move (V_TEMP 23040) (Var R_X6) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X2 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x00100218: ldrb w1,[x0, x6, LSL ] *)
| 1049112 => Some (4,
	Move (V_TEMP 23040) (Var R_X6) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X1 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x0010021c: cmp w2,w1 *)
| 1049116 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Extract 31 0 (Var R_X1)) (Extract 31 0 (Var R_X2)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X2)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X2)) (Extract 31 0 (Var R_X1))) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X2)) (Extract 31 0 (Var R_X1))) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X1)) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 118784) (BinOp OP_MINUS (Extract 31 0 (Var R_X2)) (Extract 31 0 (Var R_X1))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 118784)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 118784)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100220: b.eq 0x00100230 *)
| 1049120 => Some (4,
	If (Cast CAST_LOW 1 (Var R_ZR)) (
		Jmp (Word 1049136 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100224: sub x6,x6,x22 *)
| 1049124 => Some (4,
	Move R_X6 (BinOp OP_MINUS (Var R_X6) (Var R_X22))
)

(* 0x00100228: add x0,x0,x6 *)
| 1049128 => Some (4,
	Move (V_TEMP 74624) (Var R_X6) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 74880))
)

(* 0x0010022c: b 0x00100120 *)
| 1049132 => Some (4,
	Jmp (Word 1048864 64)
)

(* 0x00100230: add x6,x6,#0x1 *)
| 1049136 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X6) (Var (V_TEMP 73344))) (Var R_X6))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X6) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X6) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X6) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X6) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X6 (Var (V_TEMP 73600))
)

(* 0x00100234: b 0x0010020c *)
| 1049140 => Some (4,
	Jmp (Word 1049100 64)
)

(* 0x00100238: mov x3,x26 *)
| 1049144 => Some (4,
	Move R_X3 (Var R_X26)
)

(* 0x0010023c: cmp x3,x5 *)
| 1049148 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X5) (Var R_X3))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X3) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X3) (Var R_X5)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X3) (Var R_X5)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X5) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X3) (Var R_X5)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100240: b.ls 0x00100268 *)
| 1049152 => Some (4,
	Move (V_TEMP 3840) (UnOp OP_NOT (Var R_CY)) $;
	Move (V_TEMP 4096) (BinOp OP_OR (Var (V_TEMP 3840)) (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 4096))) (
		Jmp (Word 1049192 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100244: sub x3,x3,#0x1 *)
| 1049156 => Some (4,
	Move R_X3 (BinOp OP_MINUS (Var R_X3) (Word 1 64))
)

(* 0x00100248: ldrb w2,[x23, x3, LSL ] *)
| 1049160 => Some (4,
	Move (V_TEMP 23040) (Var R_X3) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X23) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X2 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x0010024c: ldrb w1,[x0, x3, LSL ] *)
| 1049164 => Some (4,
	Move (V_TEMP 23040) (Var R_X3) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X1 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x00100250: cmp w2,w1 *)
| 1049168 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Extract 31 0 (Var R_X1)) (Extract 31 0 (Var R_X2)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X2)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X2)) (Extract 31 0 (Var R_X1))) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X2)) (Extract 31 0 (Var R_X1))) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X1)) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 118784) (BinOp OP_MINUS (Extract 31 0 (Var R_X2)) (Extract 31 0 (Var R_X1))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 118784)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 118784)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100254: b.eq 0x0010023c *)
| 1049172 => Some (4,
	If (Cast CAST_LOW 1 (Var R_ZR)) (
		Jmp (Word 1049148 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100258: add x0,x0,x19 *)
| 1049176 => Some (4,
	Move (V_TEMP 74624) (Var R_X19) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 74880))
)

(* 0x0010025c: mov x4,x7 *)
| 1049180 => Some (4,
	Move R_X4 (Var R_X7)
)

(* 0x00100260: b 0x00100120 *)
| 1049184 => Some (4,
	Jmp (Word 1048864 64)
)

(* 0x00100264: mov x0,#0x0 *)
| 1049188 => Some (4,
	Move R_X0 (Word 0 64)
)

(* 0x00100268: ldp x29,x30,[sp] *)
| 1049192 => Some (4,
	Move (V_TEMP 31744) (Var R_SP) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31744)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31744)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X29 (Var (V_TEMP 148352)) $;
	Move R_X30 (Var (V_TEMP 148736))
)

(* 0x0010026c: ldp x19,x20,[sp, #0x10] *)
| 1049196 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X19 (Var (V_TEMP 148352)) $;
	Move R_X20 (Var (V_TEMP 148736))
)

(* 0x00100270: ldp x21,x22,[sp, #0x20] *)
| 1049200 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X21 (Var (V_TEMP 148352)) $;
	Move R_X22 (Var (V_TEMP 148736))
)

(* 0x00100274: ldp x23,x24,[sp, #0x30] *)
| 1049204 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 48 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X23 (Var (V_TEMP 148352)) $;
	Move R_X24 (Var (V_TEMP 148736))
)

(* 0x00100278: ldp x25,x26,[sp, #0x40] *)
| 1049208 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 64 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X25 (Var (V_TEMP 148352)) $;
	Move R_X26 (Var (V_TEMP 148736))
)

(* 0x0010027c: add sp,sp,#0x870 *)
| 1049212 => Some (4,
	Move (V_TEMP 73344) (Word 2160 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Var R_SP))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_SP (Var (V_TEMP 73600))
)

(* 0x00100280: ret *)
| 1049216 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

| _ => None
end.

Theorem welltyped: welltyped_prog arm8typctx memmem_lo_twoway_memmem_armv8. Proof. Picinae_typecheck. Qed.