(* Generated by pcode2coq.py
arch: armv8
file: memmove.lo
function: memmove
*)

Require Import Picinae_armv8_pcode.
Require Import NArith.
Open Scope N.

Definition memmove_lo_memmove_armv8 : program := fun _ a => match a with

(* 0x00100000: mov x5,x0 *)
| 1048576 => Some (4,
	Move R_X5 (Var R_X0)
)

(* 0x00100004: mov x4,x1 *)
| 1048580 => Some (4,
	Move R_X4 (Var R_X1)
)

(* 0x00100008: mov x3,x2 *)
| 1048584 => Some (4,
	Move R_X3 (Var R_X2)
)

(* 0x0010000c: cmp x0,x1 *)
| 1048588 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X1) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var R_X1)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var R_X1)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X0) (Var R_X1)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100010: b.eq 0x00100070 *)
| 1048592 => Some (4,
	If (Cast CAST_LOW 1 (Var R_ZR)) (
		Jmp (Word 1048688 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100014: mov x6,#-0x2 *)
| 1048596 => Some (4,
	Move R_X6 (Word 18446744073709551614 64)
)

(* 0x00100018: sub x7,x1,x2 *)
| 1048600 => Some (4,
	Move R_X7 (BinOp OP_MINUS (Var R_X1) (Var R_X2))
)

(* 0x0010001c: sub x7,x7,x0 *)
| 1048604 => Some (4,
	Move R_X7 (BinOp OP_MINUS (Var R_X7) (Var R_X0))
)

(* 0x00100020: mul x6,x2,x6 *)
| 1048608 => Some (4,
	Move R_X6 (BinOp OP_TIMES (Var R_X2) (Var R_X6))
)

(* 0x00100024: cmp x7,x6 *)
| 1048612 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X6) (Var R_X7))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X7) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X7) (Var R_X6)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X7) (Var R_X6)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X6) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X7) (Var R_X6)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100028: b.hi 0x00100030 *)
| 1048616 => Some (4,
	Move (V_TEMP 3456) (UnOp OP_NOT (Var R_ZR)) $;
	Move (V_TEMP 3712) (BinOp OP_AND (Var R_CY) (Var (V_TEMP 3456))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 3712))) (
		Jmp (Word 1048624 64)
	) (* else *) (
		Nop
	)
)

(* 0x0010002c: b 0x00101000 *)
| 1048620 => Some (4,
	Jmp (Word 1052672 64)
)

(* 0x00100030: eor x0,x0,x1 *)
| 1048624 => Some (4,
	Move R_X0 (BinOp OP_XOR (Var R_X0) (Var R_X1))
)

(* 0x00100034: and x0,x0,#0x7 *)
| 1048628 => Some (4,
	Move R_X0 (BinOp OP_AND (Var R_X0) (Word 7 64))
)

(* 0x00100038: cmp x5,x1 *)
| 1048632 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X1) (Var R_X5))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X5) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X5) (Var R_X1)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X5) (Var R_X1)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X5) (Var R_X1)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x0010003c: b.cs 0x001000d0 *)
| 1048636 => Some (4,
	If (Cast CAST_LOW 1 (Var R_CY)) (
		Jmp (Word 1048784 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100040: cbz x0,0x00100084 *)
| 1048640 => Some (4,
	Move (V_TEMP 102272) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var R_X0) (Word 0 64))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102272))) (
		Jmp (Word 1048708 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100044: mov x1,x5 *)
| 1048644 => Some (4,
	Move R_X1 (Var R_X5)
)

(* 0x00100048: mov x0,#0x0 *)
| 1048648 => Some (4,
	Move R_X0 (Word 0 64)
)

(* 0x0010004c: cmp x3,x0 *)
| 1048652 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X0) (Var R_X3))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X3) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X3) (Var R_X0)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X3) (Var R_X0)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X3) (Var R_X0)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100050: b.eq 0x0010006c *)
| 1048656 => Some (4,
	If (Cast CAST_LOW 1 (Var R_ZR)) (
		Jmp (Word 1048684 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100054: ldrb w2,[x4, x0, LSL ] *)
| 1048660 => Some (4,
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X2 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x00100058: strb w2,[x1, x0, LSL ] *)
| 1048664 => Some (4,
	Move (V_TEMP 239616) (Extract 31 0 (Var R_X2)) $;
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 239744) (Cast CAST_LOW 8 (BinOp OP_RSHIFT (Var (V_TEMP 239616)) (Word 0 1916928))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 8 (Var (V_TEMP 239744))) LittleE 1)
)

(* 0x0010005c: add x0,x0,#0x1 *)
| 1048668 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 73600))
)

(* 0x00100060: b 0x0010004c *)
| 1048672 => Some (4,
	Jmp (Word 1048652 64)
)

(* 0x00100064: cmp x3,x0 *)
| 1048676 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X0) (Var R_X3))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X3) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X3) (Var R_X0)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X3) (Var R_X0)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X3) (Var R_X0)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100068: b.ne 0x00100078 *)
| 1048680 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048696 64)
	) (* else *) (
		Nop
	)
)

(* 0x0010006c: mov x4,x5 *)
| 1048684 => Some (4,
	Move R_X4 (Var R_X5)
)

(* 0x00100070: mov x0,x4 *)
| 1048688 => Some (4,
	Move R_X0 (Var R_X4)
)

(* 0x00100074: ret *)
| 1048692 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

(* 0x00100078: ldrb w1,[x4, x0, LSL ] *)
| 1048696 => Some (4,
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X1 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x0010007c: strb w1,[x5, x0, LSL ] *)
| 1048700 => Some (4,
	Move (V_TEMP 239616) (Extract 31 0 (Var R_X1)) $;
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X5) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 239744) (Cast CAST_LOW 8 (BinOp OP_RSHIFT (Var (V_TEMP 239616)) (Word 0 1916928))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 8 (Var (V_TEMP 239744))) LittleE 1)
)

(* 0x00100080: add x0,x0,#0x1 *)
| 1048704 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 73600))
)

(* 0x00100084: add x1,x5,x0 *)
| 1048708 => Some (4,
	Move (V_TEMP 74624) (Var R_X0) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X5) (Var (V_TEMP 74624))) (Var R_X5))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X5) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X5) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X5) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X5) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X1 (Var (V_TEMP 74880))
)

(* 0x00100088: ands x2,x1,#0x7 *)
| 1048712 => Some (4,
	Move (V_TEMP 77056) (BinOp OP_AND (Var R_X1) (Word 7 64)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 77056)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 77056)) (Word 0 64))) $;
	Move R_X2 (Var (V_TEMP 77056)) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Word 0 8) $;
	Move R_OV (Word 0 8)
)

(* 0x0010008c: b.ne 0x00100064 *)
| 1048716 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048676 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100090: add x4,x4,x0 *)
| 1048720 => Some (4,
	Move (V_TEMP 74624) (Var R_X0) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 74624))) (Var R_X4))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X4) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X4) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X4 (Var (V_TEMP 74880))
)

(* 0x00100094: sub x3,x3,x0 *)
| 1048724 => Some (4,
	Move R_X3 (BinOp OP_MINUS (Var R_X3) (Var R_X0))
)

(* 0x00100098: sub x0,x3,x2 *)
| 1048728 => Some (4,
	Move R_X0 (BinOp OP_MINUS (Var R_X3) (Var R_X2))
)

(* 0x0010009c: cmp x0,#0x7 *)
| 1048732 => Some (4,
	Move (V_TEMP 117888) (Word 7 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var (V_TEMP 117888)) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 117888)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 118144) (BinOp OP_MINUS (Var R_X0) (Var (V_TEMP 117888))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x001000a0: b.hi 0x001000c0 *)
| 1048736 => Some (4,
	Move (V_TEMP 3456) (UnOp OP_NOT (Var R_ZR)) $;
	Move (V_TEMP 3712) (BinOp OP_AND (Var R_CY) (Var (V_TEMP 3456))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 3712))) (
		Jmp (Word 1048768 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000a4: lsr x0,x3,#0x3 *)
| 1048740 => Some (4,
	Move R_X0 (BinOp OP_RSHIFT (Var R_X3) (Word 3 64))
)

(* 0x001000a8: mov x2,#-0x8 *)
| 1048744 => Some (4,
	Move R_X2 (Word 18446744073709551608 64)
)

(* 0x001000ac: mul x0,x0,x2 *)
| 1048748 => Some (4,
	Move R_X0 (BinOp OP_TIMES (Var R_X0) (Var R_X2))
)

(* 0x001000b0: add x3,x0,x3 *)
| 1048752 => Some (4,
	Move (V_TEMP 74624) (Var R_X3) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X3 (Var (V_TEMP 74880))
)

(* 0x001000b4: sub x1,x1,x0 *)
| 1048756 => Some (4,
	Move R_X1 (BinOp OP_MINUS (Var R_X1) (Var R_X0))
)

(* 0x001000b8: sub x4,x4,x0 *)
| 1048760 => Some (4,
	Move R_X4 (BinOp OP_MINUS (Var R_X4) (Var R_X0))
)

(* 0x001000bc: b 0x00100048 *)
| 1048764 => Some (4,
	Jmp (Word 1048648 64)
)

(* 0x001000c0: ldr x0,[x4, x2, LSL #0x0] *)
| 1048768 => Some (4,
	Move (V_TEMP 23040) (Var R_X2) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 28928))) $;
	Move R_X0 (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 8)
)

(* 0x001000c4: str x0,[x1, x2, LSL #0x0] *)
| 1048772 => Some (4,
	Move (V_TEMP 238976) (Var R_X0) $;
	Move (V_TEMP 23040) (Var R_X2) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X1) (Var (V_TEMP 28928))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 64 (Var (V_TEMP 238976))) LittleE 8)
)

(* 0x001000c8: add x2,x2,#0x8 *)
| 1048776 => Some (4,
	Move (V_TEMP 73344) (Word 8 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X2) (Var (V_TEMP 73344))) (Var R_X2))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X2) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X2) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X2) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X2) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X2 (Var (V_TEMP 73600))
)

(* 0x001000cc: b 0x00100098 *)
| 1048780 => Some (4,
	Jmp (Word 1048728 64)
)

(* 0x001000d0: cbz x0,0x001000fc *)
| 1048784 => Some (4,
	Move (V_TEMP 102272) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var R_X0) (Word 0 64))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102272))) (
		Jmp (Word 1048828 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000d4: cbz x3,0x0010006c *)
| 1048788 => Some (4,
	Move (V_TEMP 102272) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var R_X3) (Word 0 64))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102272))) (
		Jmp (Word 1048684 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000d8: sub x3,x3,#0x1 *)
| 1048792 => Some (4,
	Move R_X3 (BinOp OP_MINUS (Var R_X3) (Word 1 64))
)

(* 0x001000dc: ldrb w0,[x4, x3, LSL ] *)
| 1048796 => Some (4,
	Move (V_TEMP 23040) (Var R_X3) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x001000e0: strb w0,[x5, x3, LSL ] *)
| 1048800 => Some (4,
	Move (V_TEMP 239616) (Extract 31 0 (Var R_X0)) $;
	Move (V_TEMP 23040) (Var R_X3) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X5) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 239744) (Cast CAST_LOW 8 (BinOp OP_RSHIFT (Var (V_TEMP 239616)) (Word 0 1916928))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 8 (Var (V_TEMP 239744))) LittleE 1)
)

(* 0x001000e4: b 0x001000d4 *)
| 1048804 => Some (4,
	Jmp (Word 1048788 64)
)

(* 0x001000e8: sub x0,x3,#0x1 *)
| 1048808 => Some (4,
	Move R_X0 (BinOp OP_MINUS (Var R_X3) (Word 1 64))
)

(* 0x001000ec: cbz x3,0x0010006c *)
| 1048812 => Some (4,
	Move (V_TEMP 102272) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var R_X3) (Word 0 64))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102272))) (
		Jmp (Word 1048684 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000f0: ldrb w1,[x4, x0, LSL ] *)
| 1048816 => Some (4,
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 152320) (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 1) $;
	Move R_X1 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152320)))
)

(* 0x001000f4: mov x3,x0 *)
| 1048820 => Some (4,
	Move R_X3 (Var R_X0)
)

(* 0x001000f8: strb w1,[x5, x0, LSL ] *)
| 1048824 => Some (4,
	Move (V_TEMP 239616) (Extract 31 0 (Var R_X1)) $;
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X5) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 239744) (Cast CAST_LOW 8 (BinOp OP_RSHIFT (Var (V_TEMP 239616)) (Word 0 1916928))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 8 (Var (V_TEMP 239744))) LittleE 1)
)

(* 0x001000fc: add x0,x5,x3 *)
| 1048828 => Some (4,
	Move (V_TEMP 74624) (Var R_X3) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X5) (Var (V_TEMP 74624))) (Var R_X5))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X5) (Var (V_TEMP 74624))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X5) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X5) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 74624)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 74880) (BinOp OP_PLUS (Var R_X5) (Var (V_TEMP 74624))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 74880)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 74880))
)

(* 0x00100100: tst x0,#0x7 *)
| 1048832 => Some (4,
	Move (V_TEMP 261120) (BinOp OP_AND (Var R_X0) (Word 7 64)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 261120)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 261120)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Word 0 8) $;
	Move R_OV (Word 0 8)
)

(* 0x00100104: b.ne 0x001000e8 *)
| 1048836 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048808 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100108: mov x0,x3 *)
| 1048840 => Some (4,
	Move R_X0 (Var R_X3)
)

(* 0x0010010c: cmp x0,#0x7 *)
| 1048844 => Some (4,
	Move (V_TEMP 117888) (Word 7 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var (V_TEMP 117888)) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 117888)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 118144) (BinOp OP_MINUS (Var R_X0) (Var (V_TEMP 117888))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100110: b.hi 0x00100124 *)
| 1048848 => Some (4,
	Move (V_TEMP 3456) (UnOp OP_NOT (Var R_ZR)) $;
	Move (V_TEMP 3712) (BinOp OP_AND (Var R_CY) (Var (V_TEMP 3456))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 3712))) (
		Jmp (Word 1048868 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100114: lsr x1,x3,#0x3 *)
| 1048852 => Some (4,
	Move R_X1 (BinOp OP_RSHIFT (Var R_X3) (Word 3 64))
)

(* 0x00100118: mov x0,#-0x8 *)
| 1048856 => Some (4,
	Move R_X0 (Word 18446744073709551608 64)
)

(* 0x0010011c: madd x3,x1,x0,x3 *)
| 1048860 => Some (4,
	Move (V_TEMP 167168) (BinOp OP_TIMES (Var R_X1) (Var R_X0)) $;
	Move R_X3 (BinOp OP_PLUS (Var R_X3) (Var (V_TEMP 167168)))
)

(* 0x00100120: b 0x001000d4 *)
| 1048864 => Some (4,
	Jmp (Word 1048788 64)
)

(* 0x00100124: sub x0,x0,#0x8 *)
| 1048868 => Some (4,
	Move R_X0 (BinOp OP_MINUS (Var R_X0) (Word 8 64))
)

(* 0x00100128: ldr x1,[x4, x0, LSL #0x0] *)
| 1048872 => Some (4,
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X4) (Var (V_TEMP 28928))) $;
	Move R_X1 (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 8)
)

(* 0x0010012c: str x1,[x5, x0, LSL #0x0] *)
| 1048876 => Some (4,
	Move (V_TEMP 238976) (Var R_X1) $;
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X5) (Var (V_TEMP 28928))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 64 (Var (V_TEMP 238976))) LittleE 8)
)

(* 0x00100130: b 0x0010010c *)
| 1048880 => Some (4,
	Jmp (Word 1048844 64)
)

| _ => None
end.

Theorem welltyped: welltyped_prog arm8typctx memmove_lo_memmove_armv8. Proof. Picinae_typecheck. Qed.