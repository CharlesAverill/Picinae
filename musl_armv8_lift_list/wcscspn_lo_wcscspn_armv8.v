(* Generated by pcode2coq.py + ixb's own hands
arch: armv8
file: wcscspn.lo
function: wcscspn
*)

Require Import Picinae_armv8_pcode.
Require Import NArith.
Open Scope N.

Definition wcscspn_lo_wcscspn_armv8 : program := fun _ a => match a with

(* 0x00600000: stp x29,x30,[sp, #-0x30]! *)
| 6291456 => Some (4,
	Move (V_TEMP 238080) (Var R_X29) $;
	Move (V_TEMP 238208) (Var R_X30) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 18446744073709551568 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_SP) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var R_SP) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00600004: mov x29,sp *)
| 6291460 => Some (4,
	Move R_X29 (Var R_SP)
)

(* 0x00600008: str x21,[sp, #0x20] *)
| 6291464 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 25856)) (Cast CAST_LOW 64 (Var R_X21)) LittleE 8)
)

(* 0x0060000c: mov x21,x1 *)
| 6291468 => Some (4,
	Move R_X21 (Var R_X1)
)

(* 0x00600010: ldr w1,[x1] *)
| 6291472 => Some (4,
	Move (V_TEMP 26496) (Var R_X1) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 26496)) LittleE 4) $;
	Move R_X1 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x00600014: stp x19,x20,[sp, #0x10] *)
| 6291476 => Some (4,
	Move (V_TEMP 238080) (Var R_X19) $;
	Move (V_TEMP 238208) (Var R_X20) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00600018: cbnz w1,0x0060002c *)
| 6291480 => Some (4,
	Move (V_TEMP 101888) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Extract 31 0 (Var R_X1)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 101888))) (
		Jmp (Word 6291500 64)
	) (* else *) (
		Nop
	)
)

(* 0x0060001c: ldp x19,x20,[sp, #0x10] *)
| 6291484 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X19 (Var (V_TEMP 148352)) $;
	Move R_X20 (Var (V_TEMP 148736))
)

(* 0x00600020: ldr x21,[sp, #0x20] *)
| 6291488 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move R_X21 (Load (Var V_MEM64) (Var (V_TEMP 25856)) LittleE 8)
)

(* 0x00600024: ldp x29,x30,[sp], #0x30 *)
| 6291492 => Some (4,
	Move (V_TEMP 31872) (Var R_SP) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 48 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31872)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31872)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X29 (Var (V_TEMP 148352)) $;
	Move R_X30 (Var (V_TEMP 148736))
)

(* 0x00600028: b 0x00601000 *)
| 6291496 => Some (4,
	Jmp (Word 6295552 64)
)

(* 0x0060002c: ldr w2,[x21, #0x4] *)
| 6291500 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_X21) (Word 4 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X2 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x00600030: mov x20,x0 *)
| 6291504 => Some (4,
	Move R_X20 (Var R_X0)
)

(* 0x00600034: cbnz w2,0x00600060 *)
| 6291508 => Some (4,
	Move (V_TEMP 101888) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Extract 31 0 (Var R_X2)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 101888))) (
		Jmp (Word 6291552 64)
	) (* else *) (
		Nop
	)
)

(* 0x00600038: bl 0x00601008 *)
| 6291512 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048632 64) (Word 4 64)) $;
	Jmp (Word 6295560 64)
)

(* 0x0060003c: cbz x0,0x00600058 *)
| 6291516 => Some (4,
	Move (V_TEMP 102272) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var R_X0) (Word 0 64))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102272))) (
		Jmp (Word 6291544 64)
	) (* else *) (
		Nop
	)
)

(* 0x00600040: sub x0,x0,x20 *)
| 6291520 => Some (4,
	Move R_X0 (BinOp OP_MINUS (Var R_X0) (Var R_X20))
)

(* 0x00600044: ldp x19,x20,[sp, #0x10] *)
| 6291524 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X19 (Var (V_TEMP 148352)) $;
	Move R_X20 (Var (V_TEMP 148736))
)

(* 0x00600048: asr x0,x0,#0x2 *)
| 6291528 => Some (4,
	Move R_X0 (BinOp OP_ARSHIFT (Var R_X0) (Word 2 64))
)

(* 0x0060004c: ldr x21,[sp, #0x20] *)
| 6291532 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move R_X21 (Load (Var V_MEM64) (Var (V_TEMP 25856)) LittleE 8)
)

(* 0x00600050: ldp x29,x30,[sp], #0x30 *)
| 6291536 => Some (4,
	Move (V_TEMP 31872) (Var R_SP) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 48 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31872)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31872)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X29 (Var (V_TEMP 148352)) $;
	Move R_X30 (Var (V_TEMP 148736))
)

(* 0x00600054: ret *)
| 6291540 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

(* 0x00600058: mov x0,x20 *)
| 6291544 => Some (4,
	Move R_X0 (Var R_X20)
)

(* 0x0060005c: b 0x0060001c *)
| 6291548 => Some (4,
	Jmp (Word 6291484 64)
)

(* 0x00600060: mov x19,x0 *)
| 6291552 => Some (4,
	Move R_X19 (Var R_X0)
)

(* 0x00600064: b 0x00600078 *)
| 6291556 => Some (4,
	Jmp (Word 6291576 64)
)

(* 0x00600068: mov x0,x21 *)
| 6291560 => Some (4,
	Move R_X0 (Var R_X21)
)

(* 0x0060006c: bl 0x00601008 *)
| 6291564 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048684 64) (Word 4 64)) $;
	Jmp (Word 6295560 64)
)

(* 0x00600070: cbnz x0,0x00600080 *)
| 6291568 => Some (4,
	Move (V_TEMP 102016) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Var R_X0) (Word 0 64))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102016))) (
		Jmp (Word 6291584 64)
	) (* else *) (
		Nop
	)
)

(* 0x00600074: add x19,x19,#0x4 *)
| 6291572 => Some (4,
	Move (V_TEMP 73344) (Word 4 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) (Var R_X19))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X19 (Var (V_TEMP 73600))
)

(* 0x00600078: ldr w1,[x19] *)
| 6291576 => Some (4,
	Move (V_TEMP 26496) (Var R_X19) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 26496)) LittleE 4) $;
	Move R_X1 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x0060007c: cbnz w1,0x00600068 *)
| 6291580 => Some (4,
	Move (V_TEMP 101888) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Extract 31 0 (Var R_X1)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 101888))) (
		Jmp (Word 6291560 64)
	) (* else *) (
		Nop
	)
)

(* 0x00600080: sub x0,x19,x20 *)
| 6291584 => Some (4,
	Move R_X0 (BinOp OP_MINUS (Var R_X19) (Var R_X20))
)

(* 0x00600084: b 0x00600044 *)
| 6291588 => Some (4,
	Jmp (Word 6291524 64)
)

| _ => None
end.

Theorem welltyped: welltyped_prog arm8typctx wcscspn_lo_wcscspn_armv8. Proof. Picinae_typecheck. Qed.
