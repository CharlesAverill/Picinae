(* Generated by pcode2coq.py
arch: armv8
file: inet_aton.lo
function: __inet_aton
*)

Require Import Picinae_armv8_pcode.
Require Import NArith.
Open Scope N.

Definition inet_aton_lo___inet_aton_armv8 : program := fun _ a => match a with

(* 0x00100000: stp x29,x30,[sp, #-0x70]! *)
| 1048576 => Some (4,
	Move (V_TEMP 238080) (Var R_X29) $;
	Move (V_TEMP 238208) (Var R_X30) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 18446744073709551504 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_SP) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var R_SP) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00100004: mov x29,sp *)
| 1048580 => Some (4,
	Move R_X29 (Var R_SP)
)

(* 0x00100008: stp x21,x22,[sp, #0x20] *)
| 1048584 => Some (4,
	Move (V_TEMP 238080) (Var R_X21) $;
	Move (V_TEMP 238208) (Var R_X22) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x0010000c: mov x21,x0 *)
| 1048588 => Some (4,
	Move R_X21 (Var R_X0)
)

(* 0x00100010: adrp x0,0x100000 *)
| 1048592 => Some (4,
	Move R_X0 (Word 1048576 64)
)

(* 0x00100014: add x0,x0,#0x120 *)
| 1048596 => Some (4,
	Move (V_TEMP 73344) (Word 288 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 73600))
)

(* 0x00100018: mov x22,x1 *)
| 1048600 => Some (4,
	Move R_X22 (Var R_X1)
)

(* 0x0010001c: stp x19,x20,[sp, #0x10] *)
| 1048604 => Some (4,
	Move (V_TEMP 238080) (Var R_X19) $;
	Move (V_TEMP 238208) (Var R_X20) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00100020: add x19,sp,#0x50 *)
| 1048608 => Some (4,
	Move (V_TEMP 73344) (Word 80 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Var R_SP))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X19 (Var (V_TEMP 73600))
)

(* 0x00100024: mov x20,#0x0 *)
| 1048612 => Some (4,
	Move R_X20 (Word 0 64)
)

(* 0x00100028: ld1 {v0.16B,v1.16B},[x0] *)
| 1048616 => Some (4,
	Move R_TMP_LDXN (Var R_X0) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 0 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 8 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 16 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 24 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 32 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 40 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 48 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 56 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 64 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 72 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 80 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 88 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 96 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 104 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 112 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z0 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 120 256))
		(BinOp OP_AND (Var R_Z0) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 0 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 8 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 16 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 24 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 32 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 40 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 48 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 56 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 64 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 72 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 80 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 88 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 96 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 104 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 112 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move R_Z1 (BinOp OP_OR
		(BinOp OP_LSHIFT (Cast CAST_UNSIGNED 256 (Load (Var V_MEM64) (Var R_TMP_LDXN) LittleE 1)) (Word 120 256))
		(BinOp OP_AND (Var R_Z1) (Word 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF 256))) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64))
)

(* 0x0010002c: str x23,[sp, #0x30] *)
| 1048620 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 48 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 25856)) (Cast CAST_LOW 64 (Var R_X23)) LittleE 8)
)

(* 0x00100030: add x23,sp,#0x48 *)
| 1048624 => Some (4,
	Move (V_TEMP 73344) (Word 72 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Var R_SP))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X23 (Var (V_TEMP 73600))
)

(* 0x00100034: st1 {v0.16B,v1.16B},[x19] *)
| 1048628 => Some (4,
	Move R_TMP_LDXN (Var R_X19) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 7 0 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 15 8 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 23 16 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 31 24 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 39 32 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 47 40 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 55 48 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 63 56 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 71 64 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 79 72 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 87 80 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 95 88 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 103 96 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 111 104 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 119 112 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 127 120 (Var R_Z0))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 7 0 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 15 8 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 23 16 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 31 24 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 39 32 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 47 40 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 55 48 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 63 56 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 71 64 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 79 72 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 87 80 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 95 88 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 103 96 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 111 104 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 119 112 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_TMP_LDXN) (Cast CAST_LOW 8 (Extract 127 120 (Var R_Z1))) LittleE 1) $;
	Move R_TMP_LDXN (BinOp OP_PLUS (Var R_TMP_LDXN) (Word 1 64))
)

(* 0x00100038: mov x1,x23 *)
| 1048632 => Some (4,
	Move R_X1 (Var R_X23)
)

(* 0x0010003c: mov x0,x21 *)
| 1048636 => Some (4,
	Move R_X0 (Var R_X21)
)

(* 0x00100040: mov w2,#0x0 *)
| 1048640 => Some (4,
	Move R_X2 (Word 0 64)
)

(* 0x00100044: bl 0x00101000 *)
| 1048644 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048644 64) (Word 4 64)) $;
	Jmp (Word 1052672 64)
)

(* 0x00100048: str x0,[x19, x20, LSL #0x3] *)
| 1048648 => Some (4,
	Move (V_TEMP 238976) (Var R_X0) $;
	Move (V_TEMP 23040) (Var R_X20) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 3 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 28928))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 64 (Var (V_TEMP 238976))) LittleE 8)
)

(* 0x0010004c: ldr x0,[sp, #0x48] *)
| 1048652 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 72 64)) $;
	Move R_X0 (Load (Var V_MEM64) (Var (V_TEMP 25856)) LittleE 8)
)

(* 0x00100050: cmp x0,x21 *)
| 1048656 => Some (4,
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var R_X21) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var R_X21)) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var R_X21)) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X21) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 119040) (BinOp OP_MINUS (Var R_X0) (Var R_X21)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 119040)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100054: b.ne 0x00100070 *)
| 1048660 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048688 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100058: mov w0,#0x0 *)
| 1048664 => Some (4,
	Move R_X0 (Word 0 64)
)

(* 0x0010005c: ldp x19,x20,[sp, #0x10] *)
| 1048668 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X19 (Var (V_TEMP 148352)) $;
	Move R_X20 (Var (V_TEMP 148736))
)

(* 0x00100060: ldp x21,x22,[sp, #0x20] *)
| 1048672 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X21 (Var (V_TEMP 148352)) $;
	Move R_X22 (Var (V_TEMP 148736))
)

(* 0x00100064: ldr x23,[sp, #0x30] *)
| 1048676 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 48 64)) $;
	Move R_X23 (Load (Var V_MEM64) (Var (V_TEMP 25856)) LittleE 8)
)

(* 0x00100068: ldp x29,x30,[sp], #0x70 *)
| 1048680 => Some (4,
	Move (V_TEMP 31872) (Var R_SP) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 112 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31872)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31872)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X29 (Var (V_TEMP 148352)) $;
	Move R_X30 (Var (V_TEMP 148736))
)

(* 0x0010006c: ret *)
| 1048684 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

(* 0x00100070: ldrb w2,[x0] *)
| 1048688 => Some (4,
	Move (V_TEMP 26240) (Var R_X0) $;
	Move (V_TEMP 152064) (Load (Var V_MEM64) (Var (V_TEMP 26240)) LittleE 1) $;
	Move R_X2 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152064)))
)

(* 0x00100074: cmp w2,#0x2e *)
| 1048692 => Some (4,
	Move (V_TEMP 117120) (Word 46 32) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Word 46 32) (Extract 31 0 (Var R_X2)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X2)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X2)) (Word 46 32)) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X2)) (Word 46 32)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Word 46 32) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 117376) (BinOp OP_MINUS (Extract 31 0 (Var R_X2)) (Var (V_TEMP 117120))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100078: ccmp w2,#0x0,#0x4,ne *)
| 1048696 => Some (4,
	Move (V_TEMP 5760) (UnOp OP_NOT (Var R_ZR)) $;
	Move (V_TEMP 105600) (Var (V_TEMP 5760)) $;
	Move (V_TEMP 105728) (Word 4 8) $;
	Move (V_TEMP 59264) (BinOp OP_AND (Var (V_TEMP 105728)) (Word 8 8)) $;
	Move R_NG (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 59264)) (Word 8 8))) $;
	Move (V_TEMP 59520) (BinOp OP_AND (Var (V_TEMP 105728)) (Word 4 8)) $;
	Move R_ZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 59520)) (Word 4 8))) $;
	Move (V_TEMP 59776) (BinOp OP_AND (Var (V_TEMP 105728)) (Word 2 8)) $;
	Move R_CY (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 59776)) (Word 2 8))) $;
	Move (V_TEMP 60032) (BinOp OP_AND (Var (V_TEMP 105728)) (Word 1 8)) $;
	Move R_OV (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 60032)) (Word 1 8))) $;
	Move (V_TEMP 105856) (UnOp OP_NOT (Var (V_TEMP 105600))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 105856))) (
		Jmp (Word 1048700 64)
	) (* else *) (
		Nop
	) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Word 0 32) (Extract 31 0 (Var R_X2)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X2)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X2)) (Word 0 32)) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X2)) (Word 0 32)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Word 0 32) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 106112) (BinOp OP_MINUS (Extract 31 0 (Var R_X2)) (Word 0 32)) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 106112)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 106112)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x0010007c: b.ne 0x00100058 *)
| 1048700 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048664 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100080: ldrb w3,[x21] *)
| 1048704 => Some (4,
	Move (V_TEMP 26240) (Var R_X21) $;
	Move (V_TEMP 152064) (Load (Var V_MEM64) (Var (V_TEMP 26240)) LittleE 1) $;
	Move R_X3 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 152064)))
)

(* 0x00100084: sub w3,w3,#0x30 *)
| 1048708 => Some (4,
	Move (V_TEMP 249216) (BinOp OP_MINUS (Extract 31 0 (Var R_X3)) (Word 48 32)) $;
	Move R_X3 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 249216)))
)

(* 0x00100088: cmp w3,#0x9 *)
| 1048712 => Some (4,
	Move (V_TEMP 117120) (Word 9 32) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Word 9 32) (Extract 31 0 (Var R_X3)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X3)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X3)) (Word 9 32)) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X3)) (Word 9 32)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Word 9 32) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 117376) (BinOp OP_MINUS (Extract 31 0 (Var R_X3)) (Var (V_TEMP 117120))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x0010008c: b.hi 0x00100058 *)
| 1048716 => Some (4,
	Move (V_TEMP 3456) (UnOp OP_NOT (Var R_ZR)) $;
	Move (V_TEMP 3712) (BinOp OP_AND (Var R_CY) (Var (V_TEMP 3456))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 3712))) (
		Jmp (Word 1048664 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100090: cbz w2,0x001000a8 *)
| 1048720 => Some (4,
	Move (V_TEMP 102144) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Extract 31 0 (Var R_X2)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102144))) (
		Jmp (Word 1048744 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100094: add x20,x20,#0x1 *)
| 1048724 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X20) (Var (V_TEMP 73344))) (Var R_X20))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X20) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X20) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X20) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X20) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X20 (Var (V_TEMP 73600))
)

(* 0x00100098: add x21,x0,#0x1 *)
| 1048728 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X21 (Var (V_TEMP 73600))
)

(* 0x0010009c: cmp x20,#0x4 *)
| 1048732 => Some (4,
	Move (V_TEMP 117888) (Word 4 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var (V_TEMP 117888)) (Var R_X20))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X20) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X20) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X20) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 117888)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 118144) (BinOp OP_MINUS (Var R_X20) (Var (V_TEMP 117888))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x001000a0: b.ne 0x00100038 *)
| 1048736 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048632 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000a4: b 0x00100058 *)
| 1048740 => Some (4,
	Jmp (Word 1048664 64)
)

(* 0x001000a8: cmp w20,#0x1 *)
| 1048744 => Some (4,
	Move (V_TEMP 117120) (Word 1 32) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Word 1 32) (Extract 31 0 (Var R_X20)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X20)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X20)) (Word 1 32)) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X20)) (Word 1 32)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Word 1 32) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 117376) (BinOp OP_MINUS (Extract 31 0 (Var R_X20)) (Var (V_TEMP 117120))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x001000ac: b.eq 0x001000cc *)
| 1048748 => Some (4,
	If (Cast CAST_LOW 1 (Var R_ZR)) (
		Jmp (Word 1048780 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000b0: cmp w20,#0x2 *)
| 1048752 => Some (4,
	Move (V_TEMP 117120) (Word 2 32) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Word 2 32) (Extract 31 0 (Var R_X20)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X20)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X20)) (Word 2 32)) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X20)) (Word 2 32)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Word 2 32) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 117376) (BinOp OP_MINUS (Extract 31 0 (Var R_X20)) (Var (V_TEMP 117120))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x001000b4: b.eq 0x001000dc *)
| 1048756 => Some (4,
	If (Cast CAST_LOW 1 (Var R_ZR)) (
		Jmp (Word 1048796 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000b8: cbnz w20,0x001000ec *)
| 1048760 => Some (4,
	Move (V_TEMP 101888) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Extract 31 0 (Var R_X20)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 101888))) (
		Jmp (Word 1048812 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000bc: ldr x0,[sp, #0x50] *)
| 1048764 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 80 64)) $;
	Move R_X0 (Load (Var V_MEM64) (Var (V_TEMP 25856)) LittleE 8)
)

(* 0x001000c0: and x1,x0,#0xffffff *)
| 1048768 => Some (4,
	Move R_X1 (BinOp OP_AND (Var R_X0) (Word 16777215 64))
)

(* 0x001000c4: lsr x0,x0,#0x18 *)
| 1048772 => Some (4,
	Move R_X0 (BinOp OP_RSHIFT (Var R_X0) (Word 24 64))
)

(* 0x001000c8: stp x0,x1,[sp, #0x50] *)
| 1048776 => Some (4,
	Move (V_TEMP 238080) (Var R_X0) $;
	Move (V_TEMP 238208) (Var R_X1) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 80 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x001000cc: ldr x0,[x19, #0x8] *)
| 1048780 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_X19) (Word 8 64)) $;
	Move R_X0 (Load (Var V_MEM64) (Var (V_TEMP 25856)) LittleE 8)
)

(* 0x001000d0: and x1,x0,#0xffff *)
| 1048784 => Some (4,
	Move R_X1 (BinOp OP_AND (Var R_X0) (Word 65535 64))
)

(* 0x001000d4: lsr x0,x0,#0x10 *)
| 1048788 => Some (4,
	Move R_X0 (BinOp OP_RSHIFT (Var R_X0) (Word 16 64))
)

(* 0x001000d8: stp x0,x1,[x19, #0x8] *)
| 1048792 => Some (4,
	Move (V_TEMP 238080) (Var R_X0) $;
	Move (V_TEMP 238208) (Var R_X1) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_X19) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x001000dc: ldr x0,[x19, #0x10] *)
| 1048796 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_X19) (Word 16 64)) $;
	Move R_X0 (Load (Var V_MEM64) (Var (V_TEMP 25856)) LittleE 8)
)

(* 0x001000e0: and x1,x0,#0xff *)
| 1048800 => Some (4,
	Move R_X1 (BinOp OP_AND (Var R_X0) (Word 255 64))
)

(* 0x001000e4: lsr x0,x0,#0x8 *)
| 1048804 => Some (4,
	Move R_X0 (BinOp OP_RSHIFT (Var R_X0) (Word 8 64))
)

(* 0x001000e8: stp x0,x1,[x19, #0x10] *)
| 1048808 => Some (4,
	Move (V_TEMP 238080) (Var R_X0) $;
	Move (V_TEMP 238208) (Var R_X1) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_X19) (Word 16 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x001000ec: mov x0,#0x0 *)
| 1048812 => Some (4,
	Move R_X0 (Word 0 64)
)

(* 0x001000f0: ldr x1,[x19, x0, LSL #0x3] *)
| 1048816 => Some (4,
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 3 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 28928))) $;
	Move R_X1 (Load (Var V_MEM64) (Var (V_TEMP 30080)) LittleE 8)
)

(* 0x001000f4: cmp x1,#0xff *)
| 1048820 => Some (4,
	Move (V_TEMP 117888) (Word 255 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var (V_TEMP 117888)) (Var R_X1))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X1) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X1) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X1) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 117888)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 118144) (BinOp OP_MINUS (Var R_X1) (Var (V_TEMP 117888))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x001000f8: b.hi 0x00100058 *)
| 1048824 => Some (4,
	Move (V_TEMP 3456) (UnOp OP_NOT (Var R_ZR)) $;
	Move (V_TEMP 3712) (BinOp OP_AND (Var R_CY) (Var (V_TEMP 3456))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 3712))) (
		Jmp (Word 1048664 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000fc: strb w1,[x22, x0, LSL ] *)
| 1048828 => Some (4,
	Move (V_TEMP 239616) (Extract 31 0 (Var R_X1)) $;
	Move (V_TEMP 23040) (Var R_X0) $;
	Move (V_TEMP 28928) (Var (V_TEMP 23040)) $;
	Move (V_TEMP 28928) (BinOp OP_LSHIFT (Var (V_TEMP 28928)) (Word 0 64)) $;
	Move (V_TEMP 30080) (BinOp OP_PLUS (Var R_X22) (Var (V_TEMP 28928))) $;
	Move (V_TEMP 239744) (Cast CAST_LOW 8 (BinOp OP_RSHIFT (Var (V_TEMP 239616)) (Word 0 32))) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 30080)) (Cast CAST_LOW 8 (Var (V_TEMP 239744))) LittleE 1)
)

(* 0x00100100: add x0,x0,#0x1 *)
| 1048832 => Some (4,
	Move (V_TEMP 73344) (Word 1 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X0) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X0 (Var (V_TEMP 73600))
)

(* 0x00100104: cmp x0,#0x4 *)
| 1048836 => Some (4,
	Move (V_TEMP 117888) (Word 4 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var (V_TEMP 117888)) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 117888)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 118144) (BinOp OP_MINUS (Var R_X0) (Var (V_TEMP 117888))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100108: b.ne 0x001000f0 *)
| 1048840 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048816 64)
	) (* else *) (
		Nop
	)
)

(* 0x0010010c: mov w0,#0x1 *)
| 1048844 => Some (4,
	Move R_X0 (Word 1 64)
)

(* 0x00100110: b 0x0010005c *)
| 1048848 => Some (4,
	Jmp (Word 1048668 64)
)

| _ => None
end.

Theorem welltyped: welltyped_prog arm8typctx inet_aton_lo___inet_aton_armv8. Proof. Picinae_typecheck. Qed.