(* Generated by pcode2coq.py + ixb's own hands
arch: armv8
file: wcsspn.lo
function: wcsspn
*)

Require Import Picinae_armv8_pcode.
Require Import NArith.
Open Scope N.

Definition wcsspn_lo_wcsspn_armv8 : program := fun _ a => match a with

(* 0x00200000: stp x29,x30,[sp, #-0x30]! *)
| 2097152 => Some (4,
	Move (V_TEMP 238080) (Var R_X29) $;
	Move (V_TEMP 238208) (Var R_X30) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 18446744073709551568 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_SP) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var R_SP) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x00200004: mov x29,sp *)
| 2097156 => Some (4,
	Move R_X29 (Var R_SP)
)

(* 0x00200008: stp x19,x20,[sp, #0x10] *)
| 2097160 => Some (4,
	Move (V_TEMP 238080) (Var R_X19) $;
	Move (V_TEMP 238208) (Var R_X20) $;
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 31616)) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x0020000c: mov x20,x0 *)
| 2097164 => Some (4,
	Move R_X20 (Var R_X0)
)

(* 0x00200010: mov x19,x0 *)
| 2097168 => Some (4,
	Move R_X19 (Var R_X0)
)

(* 0x00200014: str x21,[sp, #0x20] *)
| 2097172 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 25856)) (Cast CAST_LOW 64 (Var R_X21)) LittleE 8)
)

(* 0x00200018: mov x21,x1 *)
| 2097176 => Some (4,
	Move R_X21 (Var R_X1)
)

(* 0x0020001c: ldr w1,[x19] *)
| 2097180 => Some (4,
	Move (V_TEMP 26496) (Var R_X19) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 26496)) LittleE 4) $;
	Move R_X1 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x00200020: cbz w1,0x00200030 *)
| 2097184 => Some (4,
	Move (V_TEMP 102144) (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Extract 31 0 (Var R_X1)) (Word 0 32))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102144))) (
		Jmp (Word 2097200 64)
	) (* else *) (
		Nop
	)
)

(* 0x00200024: mov x0,x21 *)
| 2097188 => Some (4,
	Move R_X0 (Var R_X21)
)

(* 0x00200028: bl 0x00300000 *)
| 2097192 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 2097192 64) (Word 4 64)) $;
	Jmp (Word 3145728 64)
)

(* 0x0020002c: cbnz x0,0x00200048 *)
| 2097196 => Some (4,
	Move (V_TEMP 102016) (Cast CAST_UNSIGNED 8 (BinOp OP_NEQ (Var R_X0) (Word 0 64))) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 102016))) (
		Jmp (Word 2097224 64)
	) (* else *) (
		Nop
	)
)

(* 0x00200030: sub x0,x19,x20 *)
| 2097200 => Some (4,
	Move R_X0 (BinOp OP_MINUS (Var R_X19) (Var R_X20))
)

(* 0x00200034: ldp x19,x20,[sp, #0x10] *)
| 2097204 => Some (4,
	Move (V_TEMP 31616) (BinOp OP_PLUS (Var R_SP) (Word 16 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31616)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31616)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X19 (Var (V_TEMP 148352)) $;
	Move R_X20 (Var (V_TEMP 148736))
)

(* 0x00200038: asr x0,x0,#0x2 *)
| 2097208 => Some (4,
	Move R_X0 (BinOp OP_ARSHIFT (Var R_X0) (Word 2 64))
)

(* 0x0020003c: ldr x21,[sp, #0x20] *)
| 2097212 => Some (4,
	Move (V_TEMP 25856) (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move R_X21 (Load (Var V_MEM64) (Var (V_TEMP 25856)) LittleE 8)
)

(* 0x00200040: ldp x29,x30,[sp], #0x30 *)
| 2097216 => Some (4,
	Move (V_TEMP 31872) (Var R_SP) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 48 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31872)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31872)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X29 (Var (V_TEMP 148352)) $;
	Move R_X30 (Var (V_TEMP 148736))
)

(* 0x00200044: ret *)
| 2097220 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

(* 0x00200048: add x19,x19,#0x4 *)
| 2097224 => Some (4,
	Move (V_TEMP 73344) (Word 4 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) (Var R_X19))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X19) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_X19) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_X19 (Var (V_TEMP 73600))
)

(* 0x0020004c: b 0x0020001c *)
| 2097228 => Some (4,
	Jmp (Word 2097180 64)
)

| _ => None
end.

Theorem welltyped: welltyped_prog arm8typctx wcsspn_lo_wcsspn_armv8. Proof. Picinae_typecheck. Qed.
