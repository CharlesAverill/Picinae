(* Generated by pcode2coq.py
arch: armv8
file: mylib.o
function: my_add_rec3
*)

Require Import Picinae_armv8_pcode.
Require Import NArith.
Open Scope N.

Definition mylib_o_my_add_rec3_armv8 : program := fun _ a => match a with

(* 0x001000a8: stp x29,x30,[sp, #-0x20]! *)
| 1048744 => Some (4,
	Move (V_TEMP 238080) (Var R_X29) $;
	Move (V_TEMP 238208) (Var R_X30) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 18446744073709551584 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var R_SP) (Cast CAST_LOW 64 (Var (V_TEMP 238080))) LittleE 8) $;
	Move (V_TEMP 238336) (BinOp OP_PLUS (Var R_SP) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 238336)) (Cast CAST_LOW 64 (Var (V_TEMP 238208))) LittleE 8)
)

(* 0x001000ac: mov x29,sp *)
| 1048748 => Some (4,
	Move R_X29 (Var R_SP)
)

(* 0x001000b0: str w0,[sp, #0x1c] *)
| 1048752 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 28 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 25600)) (Cast CAST_LOW 32 (Extract 31 0 (Var R_X0))) LittleE 4)
)

(* 0x001000b4: str w1,[sp, #0x18] *)
| 1048756 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 24 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 25600)) (Cast CAST_LOW 32 (Extract 31 0 (Var R_X1))) LittleE 4)
)

(* 0x001000b8: ldr w0,[sp, #0x1c] *)
| 1048760 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 28 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x001000bc: cmp w0,#0x0 *)
| 1048764 => Some (4,
	Move (V_TEMP 117120) (Word 0 32) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Word 0 32) (Extract 31 0 (Var R_X0)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X0)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Word 0 32)) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Word 0 32)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Word 0 32) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 117376) (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Var (V_TEMP 117120))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x001000c0: b.ne 0x001000cc *)
| 1048768 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048780 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000c4: ldr w0,[sp, #0x18] *)
| 1048772 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 24 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x001000c8: b 0x00100114 *)
| 1048776 => Some (4,
	Jmp (Word 1048852 64)
)

(* 0x001000cc: ldr w0,[sp, #0x1c] *)
| 1048780 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 28 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x001000d0: cmp w0,#0x2 *)
| 1048784 => Some (4,
	Move (V_TEMP 117120) (Word 2 32) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Word 2 32) (Extract 31 0 (Var R_X0)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X0)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Word 2 32)) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Word 2 32)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Word 2 32) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 117376) (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Var (V_TEMP 117120))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x001000d4: b.ls 0x001000f8 *)
| 1048788 => Some (4,
	Move (V_TEMP 3840) (UnOp OP_NOT (Var R_CY)) $;
	Move (V_TEMP 4096) (BinOp OP_OR (Var (V_TEMP 3840)) (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 4096))) (
		Jmp (Word 1048824 64)
	) (* else *) (
		Nop
	)
)

(* 0x001000d8: ldr w0,[sp, #0x1c] *)
| 1048792 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 28 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x001000dc: sub w2,w0,#0x3 *)
| 1048796 => Some (4,
	Move (V_TEMP 249216) (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Word 3 32)) $;
	Move R_X2 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 249216)))
)

(* 0x001000e0: ldr w0,[sp, #0x18] *)
| 1048800 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 24 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x001000e4: add w0,w0,#0x3 *)
| 1048804 => Some (4,
	Move (V_TEMP 72320) (Word 3 32) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Extract 31 0 (Var R_X0)) (Var (V_TEMP 72320))) (Extract 31 0 (Var R_X0)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Extract 31 0 (Var R_X0)) (Var (V_TEMP 72320))) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X0)) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X0)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 72320)) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 72576) (BinOp OP_PLUS (Extract 31 0 (Var R_X0)) (Var (V_TEMP 72320))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 72576)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 72576)) (Word 0 32))) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 72576)))
)

(* 0x001000e8: mov w1,w0 *)
| 1048808 => Some (4,
	Move R_X1 (Cast CAST_UNSIGNED 64 (Extract 31 0 (Var R_X0)))
)

(* 0x001000ec: mov w0,w2 *)
| 1048812 => Some (4,
	Move R_X0 (Cast CAST_UNSIGNED 64 (Extract 31 0 (Var R_X2)))
)

(* 0x001000f0: bl 0x001000a8 *)
| 1048816 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048816 64) (Word 4 64)) $;
	Jmp (Word 1048744 64)
)

(* 0x001000f4: b 0x00100114 *)
| 1048820 => Some (4,
	Jmp (Word 1048852 64)
)

(* 0x001000f8: ldr w0,[sp, #0x1c] *)
| 1048824 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 28 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x001000fc: sub w2,w0,#0x1 *)
| 1048828 => Some (4,
	Move (V_TEMP 249216) (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Word 1 32)) $;
	Move R_X2 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 249216)))
)

(* 0x00100100: ldr w0,[sp, #0x18] *)
| 1048832 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 24 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x00100104: add w0,w0,#0x1 *)
| 1048836 => Some (4,
	Move (V_TEMP 72320) (Word 1 32) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Extract 31 0 (Var R_X0)) (Var (V_TEMP 72320))) (Extract 31 0 (Var R_X0)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Extract 31 0 (Var R_X0)) (Var (V_TEMP 72320))) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X0)) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X0)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 72320)) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 72576) (BinOp OP_PLUS (Extract 31 0 (Var R_X0)) (Var (V_TEMP 72320))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 72576)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 72576)) (Word 0 32))) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 72576)))
)

(* 0x00100108: mov w1,w0 *)
| 1048840 => Some (4,
	Move R_X1 (Cast CAST_UNSIGNED 64 (Extract 31 0 (Var R_X0)))
)

(* 0x0010010c: mov w0,w2 *)
| 1048844 => Some (4,
	Move R_X0 (Cast CAST_UNSIGNED 64 (Extract 31 0 (Var R_X2)))
)

(* 0x00100110: bl 0x001000a8 *)
| 1048848 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048848 64) (Word 4 64)) $;
	Jmp (Word 1048744 64)
)

(* 0x00100114: ldp x29,x30,[sp], #0x20 *)
| 1048852 => Some (4,
	Move (V_TEMP 31872) (Var R_SP) $;
	Move R_SP (BinOp OP_PLUS (Var R_SP) (Word 32 64)) $;
	Move (V_TEMP 148352) (Load (Var V_MEM64) (Var (V_TEMP 31872)) LittleE 8) $;
	Move (V_TEMP 148480) (BinOp OP_PLUS (Var (V_TEMP 31872)) (Word 8 64)) $;
	Move (V_TEMP 148736) (Load (Var V_MEM64) (Var (V_TEMP 148480)) LittleE 8) $;
	Move R_X29 (Var (V_TEMP 148352)) $;
	Move R_X30 (Var (V_TEMP 148736))
)

(* 0x00100118: ret *)
| 1048856 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

| _ => None
end.

Theorem welltyped: welltyped_prog arm8typctx mylib_o_my_add_rec3_armv8. Proof. Picinae_typecheck. Qed.