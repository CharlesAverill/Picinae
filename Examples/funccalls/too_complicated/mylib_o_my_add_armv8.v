(* Generated by pcode2coq.py
arch: armv8
file: mylib.o
function: my_add
*)

Require Import Picinae_armv8_pcode.
Require Import NArith.
Open Scope N.

Definition mylib_o_my_add_armv8 : program := fun _ a => match a with

(* 0x00100000: sub sp,sp,#0x10 *)
| 1048576 => Some (4,
	Move R_SP (BinOp OP_MINUS (Var R_SP) (Word 16 64))
)

(* 0x00100004: str w0,[sp, #0xc] *)
| 1048580 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 12 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 25600)) (Cast CAST_LOW 32 (Extract 31 0 (Var R_X0))) LittleE 4)
)

(* 0x00100008: str w1,[sp, #0x8] *)
| 1048584 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 25600)) (Cast CAST_LOW 32 (Extract 31 0 (Var R_X1))) LittleE 4)
)

(* 0x0010000c: b 0x00100028 *)
| 1048588 => Some (4,
	Jmp (Word 1048616 64)
)

(* 0x00100010: ldr w0,[sp, #0xc] *)
| 1048592 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 12 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x00100014: sub w0,w0,#0x1 *)
| 1048596 => Some (4,
	Move (V_TEMP 249216) (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Word 1 32)) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 249216)))
)

(* 0x00100018: str w0,[sp, #0xc] *)
| 1048600 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 12 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 25600)) (Cast CAST_LOW 32 (Extract 31 0 (Var R_X0))) LittleE 4)
)

(* 0x0010001c: ldr w0,[sp, #0x8] *)
| 1048604 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 8 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x00100020: add w0,w0,#0x1 *)
| 1048608 => Some (4,
	Move (V_TEMP 72320) (Word 1 32) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Extract 31 0 (Var R_X0)) (Var (V_TEMP 72320))) (Extract 31 0 (Var R_X0)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Extract 31 0 (Var R_X0)) (Var (V_TEMP 72320))) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X0)) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X0)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 72320)) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 72576) (BinOp OP_PLUS (Extract 31 0 (Var R_X0)) (Var (V_TEMP 72320))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 72576)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 72576)) (Word 0 32))) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 72576)))
)

(* 0x00100024: str w0,[sp, #0x8] *)
| 1048612 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 8 64)) $;
	Move V_MEM64 (Store (Var V_MEM64) (Var (V_TEMP 25600)) (Cast CAST_LOW 32 (Extract 31 0 (Var R_X0))) LittleE 4)
)

(* 0x00100028: ldr w0,[sp, #0xc] *)
| 1048616 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 12 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x0010002c: cmp w0,#0x0 *)
| 1048620 => Some (4,
	Move (V_TEMP 117120) (Word 0 32) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Word 0 32) (Extract 31 0 (Var R_X0)))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Extract 31 0 (Var R_X0)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Word 0 32)) (Word 31 32)) (Word 1 32))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Word 0 32)) (Word 31 32)) (Word 1 32)) (BinOp OP_AND (BinOp OP_RSHIFT (Word 0 32) (Word 31 32)) (Word 1 32))) (Word 1 32)))) $;
	Move (V_TEMP 117376) (BinOp OP_MINUS (Extract 31 0 (Var R_X0)) (Var (V_TEMP 117120))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 117376)) (Word 0 32))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100030: b.ne 0x00100010 *)
| 1048624 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048592 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100034: ldr w0,[sp, #0x8] *)
| 1048628 => Some (4,
	Move (V_TEMP 25600) (BinOp OP_PLUS (Var R_SP) (Word 8 64)) $;
	Move (V_TEMP 149760) (Load (Var V_MEM64) (Var (V_TEMP 25600)) LittleE 4) $;
	Move R_X0 (Cast CAST_UNSIGNED 64 (Var (V_TEMP 149760)))
)

(* 0x00100038: add sp,sp,#0x10 *)
| 1048632 => Some (4,
	Move (V_TEMP 73344) (Word 16 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Var R_SP))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_SP) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 73344)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 73600) (BinOp OP_PLUS (Var R_SP) (Var (V_TEMP 73344))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 73600)) (Word 0 64))) $;
	Move R_SP (Var (V_TEMP 73600))
)

(* 0x0010003c: ret *)
| 1048636 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

| _ => None
end.

Theorem welltyped: welltyped_prog arm8typctx mylib_o_my_add_armv8. Proof. Picinae_typecheck. Qed.