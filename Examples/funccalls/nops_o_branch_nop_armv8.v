(* Generated by pcode2coq.py
arch: armv8
file: nops.o
function: branch_nop
*)

Require Import Picinae_armv8.
Require Import NArith.
Open Scope N.

Definition branch_nop : program := fun _ a => match a with

(* 0x00100018: mov x0,x0 *)
| 1048600 => Some (4,
	Move R_X0 (Var R_X0)
)

(* 0x0010001c: cmp x0,#0x0 *)
| 1048604 => Some (4,
	Move (V_TEMP 117888) (Word 0 64) $;
	Move R_TMPCY (Cast CAST_UNSIGNED 8 (BinOp OP_LE (Var (V_TEMP 117888)) (Var R_X0))) $;
	Move R_TMPOV (Cast CAST_LOW 8 (BinOp OP_AND (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (Var R_X0) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64))) (BinOp OP_XOR (BinOp OP_XOR (BinOp OP_AND (BinOp OP_RSHIFT (BinOp OP_MINUS (Var R_X0) (Var (V_TEMP 117888))) (Word 63 64)) (Word 1 64)) (BinOp OP_AND (BinOp OP_RSHIFT (Var (V_TEMP 117888)) (Word 63 64)) (Word 1 64))) (Word 1 64)))) $;
	Move (V_TEMP 118144) (BinOp OP_MINUS (Var R_X0) (Var (V_TEMP 117888))) $;
	Move R_TMPNG (Cast CAST_UNSIGNED 8 (BinOp OP_SLT (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_TMPZR (Cast CAST_UNSIGNED 8 (BinOp OP_EQ (Var (V_TEMP 118144)) (Word 0 64))) $;
	Move R_NG (Var R_TMPNG) $;
	Move R_ZR (Var R_TMPZR) $;
	Move R_CY (Var R_TMPCY) $;
	Move R_OV (Var R_TMPOV)
)

(* 0x00100020: b.ne 0x0010002c *)
| 1048608 => Some (4,
	Move (V_TEMP 2560) (UnOp OP_NOT (Var R_ZR)) $;
	If (Cast CAST_LOW 1 (Var (V_TEMP 2560))) (
		Jmp (Word 1048620 64)
	) (* else *) (
		Nop
	)
)

(* 0x00100024: mov x0,x0 *)
| 1048612 => Some (4,
	Move R_X0 (Var R_X0)
)

(* 0x00100028: mov x0,x0 *)
| 1048616 => Some (4,
	Move R_X0 (Var R_X0)
)

(* 0x0010002c: ret *)
| 1048620 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)

| _ => None
end.

Theorem branchnop_welltyped: welltyped_prog arm8typctx branch_nop. Proof. Picinae_typecheck. Qed.