(* Generated by pcode2coq.py
arch: armv8
file: nops.o
function: call_test
*)

Require Import Picinae_armv8_pcode.
Require Import NArith.

Require Import nops_o_branch_nop_armv8.
Require Import nops_o_clobber_ret_armv8.
Require Import nops_o_faith_ret_armv8.
Require Import nops_o_loop_nop_armv8.
Require Import nops_o_rec_nop_armv8.
Require Import nops_o_short_nop_armv8.
Require Import nops_o_tiny_nop_armv8.
Open Scope N.

Definition call_test : program := fun s a => match a with

(* 0x00100084: mov x0,x0 *)
| 1048708 => Some (4,
	Move R_X0 (Var R_X0)
)

(* 0x00100088: bl 0x00100000 *)
| 1048712 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048712 64) (Word 4 64)) $;
	Jmp (Word 1048576 64)
)

(* 0x0010008c: mov x0,x0 *)
| 1048716 => Some (4,
	Move R_X0 (Var R_X0)
)

(* 0x00100090: bl 0x00100004 *)
| 1048720 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048720 64) (Word 4 64)) $;
	Jmp (Word 1048580 64)
)

(* 0x00100094: mov x0,x0 *)
| 1048724 => Some (4,
	Move R_X0 (Var R_X0)
)

(* 0x00100098: bl 0x00100018 *)
| 1048728 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048728 64) (Word 4 64)) $;
	Jmp (Word 1048600 64)
)

(* 0x0010009c: mov x0,x0 *)
| 1048732 => Some (4,
	Move R_X0 (Var R_X0)
)

(* 0x001000a0: bl 0x00100030 *)
| 1048736 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048736 64) (Word 4 64)) $;
	Jmp (Word 1048624 64)
)

(* 0x001000a4: mov x0,x0 *)
| 1048740 => Some (4,
	Move R_X0 (Var R_X0)
)

(* rec_nop - we're not ready for it quite yet. 
      so we ignore it for now and replace it with the same nop
      below*)
(* 0x001000a8: bl 0x00100044 *)
(*| 1048744 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048744 64) (Word 4 64)) $;
	Jmp (Word 1048644 64)
)*)

| 1048744
(* 0x001000ac: mov x0,x0 *)
| 1048748 => Some (4,
	Move R_X0 (Var R_X0)
)

(* 0x001000b0: bl 0x0010007c *)
| 1048752 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048752 64) (Word 4 64)) $;
	Jmp (Word 1048700 64)
)

(* 0x001000b4: mov x0,x0 *)
| 1048756 => Some (4,
	Move R_X0 (Var R_X0)
)

(* 0x001000b8: bl 0x00100068 *)
| 1048760 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048760 64) (Word 4 64)) $;
	Jmp (Word 1048680 64)
)

(* 0x001000bc: mov x0,x0 *)
| 1048764 => Some (4,
	Move R_X0 (Var R_X0)
)

(* 0x001000c0: adr x0,0x1000c8 *)
| 1048768 => Some (4,
	Move R_X0 (Word 1048776 64)
)

(* 0x001000c4: bl 0x00100074 *)
| 1048772 => Some (4,
	Move R_X30 (BinOp OP_PLUS (Word 1048772 64) (Word 4 64)) $;
	Jmp (Word 1048692 64)
)

(* 0x001000c8: mov x0,x0 *)
| 1048776 => Some (4,
	Move R_X0 (Var R_X0)
)

(* 0x001000cc: ret *)
| 1048780 => Some (4,
	Move R_PC (Var R_X30) $;
	Jmp (Var R_PC)
)
| _ => None end.
(*
| _ => match branch_nop s a with

| Some x => Some x
| _ => match clobber_ret s a with
| Some x => Some x
| _ => match faith_ret s a with
| Some x => Some x
| _ => match loop_nop s a with
| Some x => Some x
| _ => match rec_nop s a with
| Some x => Some x
| _ => match short_nop s a with
| Some x => Some x
| _ => match tiny_nop s a with
| Some x => Some x
| _ => None
end
end
end
end
end
end
end
end.*)

Theorem calltest_welltyped: welltyped_prog arm8typctx call_test. Proof. Picinae_typecheck. Qed.