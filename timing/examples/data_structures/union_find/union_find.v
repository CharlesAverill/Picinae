Require Import Picinae_riscv.
Require Import NArith.

Definition union_find_bin (a : addr) : N :=
    match a with
    (* <__crt0_entry> *)
    | 0x0 => 0xf14020f3 (* csrr ra,mhartid  *)
    | 0x4 => 0x80002217 (* auipc tp,0x80002  *)
    | 0x8 => 0xffb20213 (* addi tp,tp,-5 # 80001fff <__crt0_ram_last>  *)
    | 0xc => 0xff027113 (* andi sp,tp,-16  *)
    | 0x10 => 0x80000197 (* auipc gp,0x80000  *)
    | 0x14 => 0x7f018193 (* addi gp,gp,2032 # 80000800 <__global_pointer>  *)
    | 0x18 => 0x000022b7 (* lui t0,0x2  *)
    | 0x1c => 0x80028293 (* addi t0,t0,-2048 # 1800 <_malloc_trim_r+0x20>  *)
    | 0x20 => 0x30029073 (* csrw mstatus,t0  *)
    | 0x24 => 0x00000317 (* auipc t1,0x0  *)
    | 0x28 => 0x18030313 (* addi t1,t1,384 # 1a4 <__crt0_trap>  *)
    | 0x2c => 0x30531073 (* csrw mtvec,t1  *)
    | 0x30 => 0x30401073 (* csrw mie,zero  *)
    | 0x34 => 0x00002397 (* auipc t2,0x2  *)
    | 0x38 => 0x02838393 (* addi t2,t2,40 # 205c <__crt0_copy_data_src_begin>  *)
    | 0x3c => 0x80000417 (* auipc s0,0x80000  *)
    | 0x40 => 0xfc440413 (* addi s0,s0,-60 # 80000000 <__malloc_av_>  *)
    | 0x44 => 0x80000497 (* auipc s1,0x80000  *)
    | 0x48 => 0x4f848493 (* addi s1,s1,1272 # 8000053c <curr_heap.0>  *)
    | 0x4c => 0x80000517 (* auipc a0,0x80000  *)
    | 0x50 => 0x4f050513 (* addi a0,a0,1264 # 8000053c <curr_heap.0>  *)
    | 0x54 => 0x80000597 (* auipc a1,0x80000  *)
    | 0x58 => 0x76058593 (* addi a1,a1,1888 # 800007b4 <__crt0_bss_end>  *)
    | 0x5c => 0x00000613 (* li a2,0  *)
    | 0x60 => 0x00000693 (* li a3,0  *)
    | 0x64 => 0x00000713 (* li a4,0  *)
    | 0x68 => 0x00000793 (* li a5,0  *)
    | 0x6c => 0x00000813 (* li a6,0  *)
    | 0x70 => 0x00000893 (* li a7,0  *)
    | 0x74 => 0x00000913 (* li s2,0  *)
    | 0x78 => 0x00000993 (* li s3,0  *)
    | 0x7c => 0x00000a13 (* li s4,0  *)
    | 0x80 => 0x00000a93 (* li s5,0  *)
    | 0x84 => 0x00000b13 (* li s6,0  *)
    | 0x88 => 0x00000b93 (* li s7,0  *)
    | 0x8c => 0x00000c13 (* li s8,0  *)
    | 0x90 => 0x00000c93 (* li s9,0  *)
    | 0x94 => 0x00000d13 (* li s10,0  *)
    | 0x98 => 0x00000d93 (* li s11,0  *)
    | 0x9c => 0x00000e13 (* li t3,0  *)
    | 0xa0 => 0x00000e93 (* li t4,0  *)
    | 0xa4 => 0x00000f13 (* li t5,0  *)
    | 0xa8 => 0x00000f93 (* li t6,0  *)
    (* <__crt0_smp_check> *)
    | 0xac => 0x02008a63 (* beqz ra,e0 <__crt0_smp_primary>  *)
    | 0xb0 => 0x00000797 (* auipc a5,0x0  *)
    | 0xb4 => 0x01878793 (* addi a5,a5,24 # c8 <__crt0_smp_wakeup>  *)
    | 0xb8 => 0x30579073 (* csrw mtvec,a5  *)
    | 0xbc => 0x30446073 (* csrsi mie,8  *)
    | 0xc0 => 0x30046073 (* csrsi mstatus,8  *)
    | 0xc4 => 0x0d80006f (* j 19c <__crt0_sleep>  *)
    (* <__crt0_smp_wakeup> *)
    | 0xc8 => 0xfff44737 (* lui a4,0xfff44  *)
    | 0xcc => 0x00872103 (* lw sp,8(a4) # fff44008 <__crt0_ram_last+0x7ff42009>  *)
    | 0xd0 => 0x00c72603 (* lw a2,12(a4)  *)
    | 0xd4 => 0xfff40737 (* lui a4,0xfff40  *)
    | 0xd8 => 0x00072223 (* sw zero,4(a4) # fff40004 <__crt0_ram_last+0x7ff3e005>  *)
    | 0xdc => 0x05c0006f (* j 138 <__crt0_main_entry>  *)
    (* <__crt0_smp_primary> *)
    | 0xe0 => 0x00838e63 (* beq t2,s0,fc <__crt0_bss_clear>  *)
    (* <__crt0_data_copy> *)
    | 0xe4 => 0x00945c63 (* bge s0,s1,fc <__crt0_bss_clear>  *)
    | 0xe8 => 0x0003a783 (* lw a5,0(t2)  *)
    | 0xec => 0x00f42023 (* sw a5,0(s0)  *)
    | 0xf0 => 0x00438393 (* addi t2,t2,4  *)
    | 0xf4 => 0x00440413 (* addi s0,s0,4  *)
    | 0xf8 => 0xfedff06f (* j e4 <__crt0_data_copy>  *)
    (* <__crt0_bss_clear> *)
    | 0xfc => 0x00b55863 (* bge a0,a1,10c <__crt0_bss_clear_end>  *)
    | 0x100 => 0x00052023 (* sw zero,0(a0)  *)
    | 0x104 => 0x00450513 (* addi a0,a0,4  *)
    | 0x108 => 0xff5ff06f (* j fc <__crt0_bss_clear>  *)
    (* <__crt0_bss_clear_end> *)
    | 0x10c => 0x00002417 (* auipc s0,0x2  *)
    | 0x110 => 0xc8040413 (* addi s0,s0,-896 # 1d8c <__fini_array_end>  *)
    | 0x114 => 0x00002497 (* auipc s1,0x2  *)
    | 0x118 => 0xc7848493 (* addi s1,s1,-904 # 1d8c <__fini_array_end>  *)
    (* <__crt0_constructors> *)
    | 0x11c => 0x00945a63 (* bge s0,s1,130 <__crt0_constructors_end>  *)
    | 0x120 => 0x00042083 (* lw ra,0(s0)  *)
    | 0x124 => 0x000080e7 (* jalr ra  *)
    | 0x128 => 0x00440413 (* addi s0,s0,4  *)
    | 0x12c => 0xff1ff06f (* j 11c <__crt0_constructors>  *)
    (* <__crt0_constructors_end> *)
    | 0x130 => 0x00000617 (* auipc a2,0x0  *)
    | 0x134 => 0x0b460613 (* addi a2,a2,180 # 1e4 <main>  *)
    (* <__crt0_main_entry> *)
    | 0x138 => 0x80000197 (* auipc gp,0x80000  *)
    | 0x13c => 0x6c818193 (* addi gp,gp,1736 # 80000800 <__global_pointer>  *)
    | 0x140 => 0x0ff0000f (* fence  *)
    | 0x144 => 0x0000100f (* fence.i  *)
    | 0x148 => 0x30029073 (* csrw mstatus,t0  *)
    | 0x14c => 0x00000513 (* li a0,0  *)
    | 0x150 => 0x00000593 (* li a1,0  *)
    | 0x154 => 0x000600e7 (* jalr a2  *)
    (* <__crt0_main_exit> *)
    | 0x158 => 0x30401073 (* csrw mie,zero  *)
    | 0x15c => 0x34051073 (* csrw mscratch,a0  *)
    | 0x160 => 0x00000517 (* auipc a0,0x0  *)
    | 0x164 => 0x04450513 (* addi a0,a0,68 # 1a4 <__crt0_trap>  *)
    | 0x168 => 0x30551073 (* csrw mtvec,a0  *)
    | 0x16c => 0xf1402473 (* csrr s0,mhartid  *)
    | 0x170 => 0x02041463 (* bnez s0,198 <__crt0_destructors_end>  *)
    | 0x174 => 0x00002417 (* auipc s0,0x2  *)
    | 0x178 => 0xc1840413 (* addi s0,s0,-1000 # 1d8c <__fini_array_end>  *)
    | 0x17c => 0x00002497 (* auipc s1,0x2  *)
    | 0x180 => 0xc1048493 (* addi s1,s1,-1008 # 1d8c <__fini_array_end>  *)
    (* <__crt0_destructors> *)
    | 0x184 => 0x00945a63 (* bge s0,s1,198 <__crt0_destructors_end>  *)
    | 0x188 => 0x00042083 (* lw ra,0(s0)  *)
    | 0x18c => 0x000080e7 (* jalr ra  *)
    | 0x190 => 0x00440413 (* addi s0,s0,4  *)
    | 0x194 => 0xff1ff06f (* j 184 <__crt0_destructors>  *)
    (* <__crt0_destructors_end> *)
    | 0x198 => 0x00100073 (* ebreak  *)
    (* <__crt0_sleep> *)
    | 0x19c => 0x10500073 (* wfi  *)
    | 0x1a0 => 0xffdff06f (* j 19c <__crt0_sleep>  *)
    (* <__crt0_trap> *)
    | 0x1a4 => 0x34041073 (* csrw mscratch,s0  *)
    | 0x1a8 => 0x34202473 (* csrr s0,mcause  *)
    | 0x1ac => 0x01f45413 (* srli s0,s0,0x1f  *)
    | 0x1b0 => 0x02041663 (* bnez s0,1dc <__crt0_trap_end>  *)
    | 0x1b4 => 0x34102473 (* csrr s0,mepc  *)
    | 0x1b8 => 0x00440413 (* addi s0,s0,4  *)
    | 0x1bc => 0x34141073 (* csrw mepc,s0  *)
    | 0x1c0 => 0x34a02473 (* csrr s0,0x34a  *)
    | 0x1c4 => 0x00347413 (* andi s0,s0,3  *)
    | 0x1c8 => 0xffd40413 (* addi s0,s0,-3  *)
    | 0x1cc => 0x00040863 (* beqz s0,1dc <__crt0_trap_end>  *)
    | 0x1d0 => 0x34102473 (* csrr s0,mepc  *)
    | 0x1d4 => 0xffe40413 (* addi s0,s0,-2  *)
    | 0x1d8 => 0x34141073 (* csrw mepc,s0  *)
    (* <__crt0_trap_end> *)
    | 0x1dc => 0x34002473 (* csrr s0,mscratch  *)
    | 0x1e0 => 0x30200073 (* mret  *)
    (* <main> *)
    | 0x1e4 => 0xf5010113 (* addi sp,sp,-176  *)
    | 0x1e8 => 0x0a112623 (* sw ra,172(sp)  *)
    | 0x1ec => 0x0a812423 (* sw s0,168(sp)  *)
    | 0x1f0 => 0x09512a23 (* sw s5,148(sp)  *)
    | 0x1f4 => 0x09612823 (* sw s6,144(sp)  *)
    | 0x1f8 => 0x09712623 (* sw s7,140(sp)  *)
    | 0x1fc => 0x09812423 (* sw s8,136(sp)  *)
    | 0x200 => 0x0a912223 (* sw s1,164(sp)  *)
    | 0x204 => 0x0b212023 (* sw s2,160(sp)  *)
    | 0x208 => 0x09312e23 (* sw s3,156(sp)  *)
    | 0x20c => 0x09412c23 (* sw s4,152(sp)  *)
    | 0x210 => 0x7d4000ef (* jal 9e4 <neorv32_rte_setup>  *)
    | 0x214 => 0x000055b7 (* lui a1,0x5  *)
    | 0x218 => 0x00000613 (* li a2,0  *)
    | 0x21c => 0xb0058593 (* addi a1,a1,-1280 # 4b00 <__neorv32_rom_size+0xb00>  *)
    | 0x220 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x224 => 0x061000ef (* jal a84 <neorv32_uart_setup>  *)
    | 0x228 => 0x02a00513 (* li a0,42  *)
    | 0x22c => 0x248010ef (* jal 1474 <srand>  *)
    | 0x230 => 0x00300413 (* li s0,3  *)
    | 0x234 => 0x00002c37 (* lui s8,0x2  *)
    | 0x238 => 0x00002bb7 (* lui s7,0x2  *)
    | 0x23c => 0x00002b37 (* lui s6,0x2  *)
    | 0x240 => 0x00002ab7 (* lui s5,0x2  *)
    | 0x244 => 0x00040513 (* mv a0,s0  *)
    | 0x248 => 0x178000ef (* jal 3c0 <make_set>  *)
    | 0x24c => 0x00050493 (* mv s1,a0  *)
    | 0x250 => 0x04051463 (* bnez a0,298 <main+0xb4>  *)
    | 0x254 => 0x000025b7 (* lui a1,0x2  *)
    | 0x258 => 0xd8c58593 (* addi a1,a1,-628 # 1d8c <__fini_array_end>  *)
    | 0x25c => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x260 => 0x0d5000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x264 => 0x0ac12083 (* lw ra,172(sp)  *)
    | 0x268 => 0x0a812403 (* lw s0,168(sp)  *)
    | 0x26c => 0x0a412483 (* lw s1,164(sp)  *)
    | 0x270 => 0x0a012903 (* lw s2,160(sp)  *)
    | 0x274 => 0x09c12983 (* lw s3,156(sp)  *)
    | 0x278 => 0x09812a03 (* lw s4,152(sp)  *)
    | 0x27c => 0x09412a83 (* lw s5,148(sp)  *)
    | 0x280 => 0x09012b03 (* lw s6,144(sp)  *)
    | 0x284 => 0x08c12b83 (* lw s7,140(sp)  *)
    | 0x288 => 0x08812c03 (* lw s8,136(sp)  *)
    | 0x28c => 0x00000513 (* li a0,0  *)
    | 0x290 => 0x0b010113 (* addi sp,sp,176  *)
    | 0x294 => 0x00008067 (* ret  *)
    | 0x298 => 0x1f0010ef (* jal 1488 <rand>  *)
    | 0x29c => 0x00040593 (* mv a1,s0  *)
    | 0x2a0 => 0x289010ef (* jal 1d28 <__umodsi3>  *)
    | 0x2a4 => 0x00050993 (* mv s3,a0  *)
    | 0x2a8 => 0xfe0508e3 (* beqz a0,298 <main+0xb4>  *)
    | 0x2ac => 0x1dc010ef (* jal 1488 <rand>  *)
    | 0x2b0 => 0x00040593 (* mv a1,s0  *)
    | 0x2b4 => 0x275010ef (* jal 1d28 <__umodsi3>  *)
    | 0x2b8 => 0x00050913 (* mv s2,a0  *)
    | 0x2bc => 0xff3508e3 (* beq a0,s3,2ac <main+0xc8>  *)
    | 0x2c0 => 0xfe0506e3 (* beqz a0,2ac <main+0xc8>  *)
    | 0x2c4 => 0x00000793 (* li a5,0  *)
    | 0x2c8 => 0xb0079073 (* csrw mcycle,a5  *)
    | 0x2cc => 0x00050593 (* mv a1,a0  *)
    | 0x2d0 => 0x00048613 (* mv a2,s1  *)
    | 0x2d4 => 0x00098513 (* mv a0,s3  *)
    | 0x2d8 => 0x1ac000ef (* jal 484 <_union>  *)
    | 0x2dc => 0xb0002a73 (* csrr s4,mcycle  *)
    | 0x2e0 => 0xb80027f3 (* csrr a5,mcycleh  *)
    | 0x2e4 => 0x00a00613 (* li a2,10  *)
    | 0x2e8 => 0x00010593 (* mv a1,sp  *)
    | 0x2ec => 0x000a0513 (* mv a0,s4  *)
    | 0x2f0 => 0x0b1000ef (* jal ba0 <itoa>  *)
    | 0x2f4 => 0xd9cc0593 (* addi a1,s8,-612 # 1d9c <__fini_array_end+0x10>  *)
    | 0x2f8 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x2fc => 0x039000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x300 => 0x00010593 (* mv a1,sp  *)
    | 0x304 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x308 => 0x02d000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x30c => 0xdb4b8593 (* addi a1,s7,-588 # 1db4 <__fini_array_end+0x28>  *)
    | 0x310 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x314 => 0x021000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x318 => 0xb00a1073 (* csrw mcycle,s4  *)
    | 0x31c => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x320 => 0xdb8b0593 (* addi a1,s6,-584 # 1db8 <__fini_array_end+0x2c>  *)
    | 0x324 => 0x011000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x328 => 0x00a00613 (* li a2,10  *)
    | 0x32c => 0x00010593 (* mv a1,sp  *)
    | 0x330 => 0x00040513 (* mv a0,s0  *)
    | 0x334 => 0x06d000ef (* jal ba0 <itoa>  *)
    | 0x338 => 0x00010593 (* mv a1,sp  *)
    | 0x33c => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x340 => 0x7f4000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x344 => 0xdc4a8593 (* addi a1,s5,-572 # 1dc4 <__fini_array_end+0x38>  *)
    | 0x348 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x34c => 0x7e8000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x350 => 0x00a00613 (* li a2,10  *)
    | 0x354 => 0x00010593 (* mv a1,sp  *)
    | 0x358 => 0x00098513 (* mv a0,s3  *)
    | 0x35c => 0x045000ef (* jal ba0 <itoa>  *)
    | 0x360 => 0x00010593 (* mv a1,sp  *)
    | 0x364 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x368 => 0x7cc000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x36c => 0x000025b7 (* lui a1,0x2  *)
    | 0x370 => 0xdd058593 (* addi a1,a1,-560 # 1dd0 <__fini_array_end+0x44>  *)
    | 0x374 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x378 => 0x7bc000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x37c => 0x00a00613 (* li a2,10  *)
    | 0x380 => 0x00010593 (* mv a1,sp  *)
    | 0x384 => 0x00090513 (* mv a0,s2  *)
    | 0x388 => 0x019000ef (* jal ba0 <itoa>  *)
    | 0x38c => 0x00010593 (* mv a1,sp  *)
    | 0x390 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x394 => 0x7a0000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x398 => 0x0044a503 (* lw a0,4(s1)  *)
    | 0x39c => 0x00140413 (* addi s0,s0,1  *)
    | 0x3a0 => 0x081000ef (* jal c20 <free>  *)
    | 0x3a4 => 0x0084a503 (* lw a0,8(s1)  *)
    | 0x3a8 => 0x079000ef (* jal c20 <free>  *)
    | 0x3ac => 0x00048513 (* mv a0,s1  *)
    | 0x3b0 => 0x071000ef (* jal c20 <free>  *)
    | 0x3b4 => 0x3e900793 (* li a5,1001  *)
    | 0x3b8 => 0xe8f416e3 (* bne s0,a5,244 <main+0x60>  *)
    | 0x3bc => 0xea9ff06f (* j 264 <main+0x80>  *)
    (* <make_set> *)
    | 0x3c0 => 0xfe010113 (* addi sp,sp,-32  *)
    | 0x3c4 => 0x00812c23 (* sw s0,24(sp)  *)
    | 0x3c8 => 0x00251413 (* slli s0,a0,0x2  *)
    | 0x3cc => 0x01312623 (* sw s3,12(sp)  *)
    | 0x3d0 => 0x00050993 (* mv s3,a0  *)
    | 0x3d4 => 0x00040513 (* mv a0,s0  *)
    | 0x3d8 => 0x00112e23 (* sw ra,28(sp)  *)
    | 0x3dc => 0x00912a23 (* sw s1,20(sp)  *)
    | 0x3e0 => 0x01212823 (* sw s2,16(sp)  *)
    | 0x3e4 => 0x02d000ef (* jal c10 <malloc>  *)
    | 0x3e8 => 0x00050913 (* mv s2,a0  *)
    | 0x3ec => 0x00040513 (* mv a0,s0  *)
    | 0x3f0 => 0x021000ef (* jal c10 <malloc>  *)
    | 0x3f4 => 0x00050493 (* mv s1,a0  *)
    | 0x3f8 => 0x00000413 (* li s0,0  *)
    | 0x3fc => 0x03341a63 (* bne s0,s3,430 <make_set+0x70>  *)
    | 0x400 => 0x00c00513 (* li a0,12  *)
    | 0x404 => 0x00d000ef (* jal c10 <malloc>  *)
    | 0x408 => 0x01c12083 (* lw ra,28(sp)  *)
    | 0x40c => 0x00852023 (* sw s0,0(a0) # fff50000 <__crt0_ram_last+0x7ff4e001>  *)
    | 0x410 => 0x01812403 (* lw s0,24(sp)  *)
    | 0x414 => 0x01252223 (* sw s2,4(a0)  *)
    | 0x418 => 0x00952423 (* sw s1,8(a0)  *)
    | 0x41c => 0x01012903 (* lw s2,16(sp)  *)
    | 0x420 => 0x01412483 (* lw s1,20(sp)  *)
    | 0x424 => 0x00c12983 (* lw s3,12(sp)  *)
    | 0x428 => 0x02010113 (* addi sp,sp,32  *)
    | 0x42c => 0x00008067 (* ret  *)
    | 0x430 => 0x00241793 (* slli a5,s0,0x2  *)
    | 0x434 => 0x00f90733 (* add a4,s2,a5  *)
    | 0x438 => 0x00f487b3 (* add a5,s1,a5  *)
    | 0x43c => 0x00872023 (* sw s0,0(a4)  *)
    | 0x440 => 0x0007a023 (* sw zero,0(a5)  *)
    | 0x444 => 0x00140413 (* addi s0,s0,1  *)
    | 0x448 => 0xfb5ff06f (* j 3fc <make_set+0x3c>  *)
    (* <find> *)
    | 0x44c => 0x0045a683 (* lw a3,4(a1)  *)
    | 0x450 => 0x00050713 (* mv a4,a0  *)
    | 0x454 => 0x00070793 (* mv a5,a4  *)
    | 0x458 => 0x00271713 (* slli a4,a4,0x2  *)
    | 0x45c => 0x00e68733 (* add a4,a3,a4  *)
    | 0x460 => 0x00072703 (* lw a4,0(a4)  *)
    | 0x464 => 0xfef718e3 (* bne a4,a5,454 <find+0x8>  *)
    | 0x468 => 0x00251513 (* slli a0,a0,0x2  *)
    | 0x46c => 0x00a68733 (* add a4,a3,a0  *)
    | 0x470 => 0x00072503 (* lw a0,0(a4)  *)
    | 0x474 => 0x00f51463 (* bne a0,a5,47c <find+0x30>  *)
    | 0x478 => 0x00008067 (* ret  *)
    | 0x47c => 0x00f72023 (* sw a5,0(a4)  *)
    | 0x480 => 0xfe9ff06f (* j 468 <find+0x1c>  *)
    (* <_union> *)
    | 0x484 => 0xff010113 (* addi sp,sp,-16  *)
    | 0x488 => 0x01212023 (* sw s2,0(sp)  *)
    | 0x48c => 0x00058913 (* mv s2,a1  *)
    | 0x490 => 0x00060593 (* mv a1,a2  *)
    | 0x494 => 0x00812423 (* sw s0,8(sp)  *)
    | 0x498 => 0x00912223 (* sw s1,4(sp)  *)
    | 0x49c => 0x00112623 (* sw ra,12(sp)  *)
    | 0x4a0 => 0x00060493 (* mv s1,a2  *)
    | 0x4a4 => 0xfa9ff0ef (* jal 44c <find>  *)
    | 0x4a8 => 0x00050413 (* mv s0,a0  *)
    | 0x4ac => 0x00048593 (* mv a1,s1  *)
    | 0x4b0 => 0x00090513 (* mv a0,s2  *)
    | 0x4b4 => 0xf99ff0ef (* jal 44c <find>  *)
    | 0x4b8 => 0x02a40863 (* beq s0,a0,4e8 <_union+0x64>  *)
    | 0x4bc => 0x0084a783 (* lw a5,8(s1)  *)
    | 0x4c0 => 0x00241813 (* slli a6,s0,0x2  *)
    | 0x4c4 => 0x00251593 (* slli a1,a0,0x2  *)
    | 0x4c8 => 0x01078733 (* add a4,a5,a6  *)
    | 0x4cc => 0x00b787b3 (* add a5,a5,a1  *)
    | 0x4d0 => 0x0007a683 (* lw a3,0(a5)  *)
    | 0x4d4 => 0x00072603 (* lw a2,0(a4)  *)
    | 0x4d8 => 0x0044a783 (* lw a5,4(s1)  *)
    | 0x4dc => 0x02d67263 (* bgeu a2,a3,500 <_union+0x7c>  *)
    | 0x4e0 => 0x010787b3 (* add a5,a5,a6  *)
    | 0x4e4 => 0x00a7a023 (* sw a0,0(a5)  *)
    | 0x4e8 => 0x00c12083 (* lw ra,12(sp)  *)
    | 0x4ec => 0x00812403 (* lw s0,8(sp)  *)
    | 0x4f0 => 0x00412483 (* lw s1,4(sp)  *)
    | 0x4f4 => 0x00012903 (* lw s2,0(sp)  *)
    | 0x4f8 => 0x01010113 (* addi sp,sp,16  *)
    | 0x4fc => 0x00008067 (* ret  *)
    | 0x500 => 0x00b787b3 (* add a5,a5,a1  *)
    | 0x504 => 0x0087a023 (* sw s0,0(a5)  *)
    | 0x508 => 0xfec6e0e3 (* bltu a3,a2,4e8 <_union+0x64>  *)
    | 0x50c => 0x00072783 (* lw a5,0(a4)  *)
    | 0x510 => 0x00178793 (* addi a5,a5,1  *)
    | 0x514 => 0x00f72023 (* sw a5,0(a4)  *)
    | 0x518 => 0xfd1ff06f (* j 4e8 <_union+0x64>  *)
    (* <_sbrk> *)
    | 0x51c => 0x80000737 (* lui a4,0x80000  *)
    | 0x520 => 0x53c72683 (* lw a3,1340(a4) # 8000053c <curr_heap.0>  *)
    | 0x524 => 0x80000637 (* lui a2,0x80000  *)
    | 0x528 => 0x00050793 (* mv a5,a0  *)
    | 0x52c => 0x7b460613 (* addi a2,a2,1972 # 800007b4 <__crt0_bss_end>  *)
    | 0x530 => 0x00069463 (* bnez a3,538 <_sbrk+0x1c>  *)
    | 0x534 => 0x52c72e23 (* sw a2,1340(a4)  *)
    | 0x538 => 0x800016b7 (* lui a3,0x80001  *)
    | 0x53c => 0x7b468693 (* addi a3,a3,1972 # 800017b4 <__heap_end>  *)
    | 0x540 => 0x00c69c63 (* bne a3,a2,558 <_sbrk+0x3c>  *)
    | 0x544 => 0x800007b7 (* lui a5,0x80000  *)
    | 0x548 => 0x00c00713 (* li a4,12  *)
    | 0x54c => 0x54e7a623 (* sw a4,1356(a5) # 8000054c <errno>  *)
    | 0x550 => 0xfff00513 (* li a0,-1  *)
    | 0x554 => 0x00008067 (* ret  *)
    | 0x558 => 0x53c72503 (* lw a0,1340(a4)  *)
    | 0x55c => 0x00f507b3 (* add a5,a0,a5  *)
    | 0x560 => 0xfed7f2e3 (* bgeu a5,a3,544 <_sbrk+0x28>  *)
    | 0x564 => 0x52f72e23 (* sw a5,1340(a4)  *)
    | 0x568 => 0x00008067 (* ret  *)
    (* <neorv32_rte_core> *)
    | 0x56c => 0x34011073 (* csrw mscratch,sp  *)
    | 0x570 => 0xf8010113 (* addi sp,sp,-128  *)
    | 0x574 => 0x00112223 (* sw ra,4(sp)  *)
    | 0x578 => 0x340110f3 (* csrrw ra,mscratch,sp  *)
    | 0x57c => 0x00112423 (* sw ra,8(sp)  *)
    | 0x580 => 0x00312623 (* sw gp,12(sp)  *)
    | 0x584 => 0x00412823 (* sw tp,16(sp)  *)
    | 0x588 => 0x00512a23 (* sw t0,20(sp)  *)
    | 0x58c => 0x00612c23 (* sw t1,24(sp)  *)
    | 0x590 => 0x00712e23 (* sw t2,28(sp)  *)
    | 0x594 => 0x02812023 (* sw s0,32(sp)  *)
    | 0x598 => 0x02912223 (* sw s1,36(sp)  *)
    | 0x59c => 0x02a12423 (* sw a0,40(sp)  *)
    | 0x5a0 => 0x02b12623 (* sw a1,44(sp)  *)
    | 0x5a4 => 0x02c12823 (* sw a2,48(sp)  *)
    | 0x5a8 => 0x02d12a23 (* sw a3,52(sp)  *)
    | 0x5ac => 0x02e12c23 (* sw a4,56(sp)  *)
    | 0x5b0 => 0x02f12e23 (* sw a5,60(sp)  *)
    | 0x5b4 => 0x05012023 (* sw a6,64(sp)  *)
    | 0x5b8 => 0x05112223 (* sw a7,68(sp)  *)
    | 0x5bc => 0x05212423 (* sw s2,72(sp)  *)
    | 0x5c0 => 0x05312623 (* sw s3,76(sp)  *)
    | 0x5c4 => 0x05412823 (* sw s4,80(sp)  *)
    | 0x5c8 => 0x05512a23 (* sw s5,84(sp)  *)
    | 0x5cc => 0x05612c23 (* sw s6,88(sp)  *)
    | 0x5d0 => 0x05712e23 (* sw s7,92(sp)  *)
    | 0x5d4 => 0x07812023 (* sw s8,96(sp)  *)
    | 0x5d8 => 0x07912223 (* sw s9,100(sp)  *)
    | 0x5dc => 0x07a12423 (* sw s10,104(sp)  *)
    | 0x5e0 => 0x07b12623 (* sw s11,108(sp)  *)
    | 0x5e4 => 0x07c12823 (* sw t3,112(sp)  *)
    | 0x5e8 => 0x07d12a23 (* sw t4,116(sp)  *)
    | 0x5ec => 0x07e12c23 (* sw t5,120(sp)  *)
    | 0x5f0 => 0x07f12e23 (* sw t6,124(sp)  *)
    | 0x5f4 => 0x34202773 (* csrr a4,mcause  *)
    | 0x5f8 => 0x00074863 (* bltz a4,608 <neorv32_rte_core+0x9c>  *)
    | 0x5fc => 0x341027f3 (* csrr a5,mepc  *)
    | 0x600 => 0x00478793 (* addi a5,a5,4  *)
    | 0x604 => 0x34179073 (* csrw mepc,a5  *)
    | 0x608 => 0x0ff0000f (* fence  *)
    | 0x60c => 0x01f75793 (* srli a5,a4,0x1f  *)
    | 0x610 => 0x01f77693 (* andi a3,a4,31  *)
    | 0x614 => 0x00579793 (* slli a5,a5,0x5  *)
    | 0x618 => 0x00d787b3 (* add a5,a5,a3  *)
    | 0x61c => 0x80000737 (* lui a4,0x80000  *)
    | 0x620 => 0x55470713 (* addi a4,a4,1364 # 80000554 <__neorv32_rte_vector_lut>  *)
    | 0x624 => 0x00279793 (* slli a5,a5,0x2  *)
    | 0x628 => 0x00f707b3 (* add a5,a4,a5  *)
    | 0x62c => 0x0007a783 (* lw a5,0(a5)  *)
    | 0x630 => 0x000780e7 (* jalr a5  *)
    | 0x634 => 0x00412083 (* lw ra,4(sp)  *)
    | 0x638 => 0x00c12183 (* lw gp,12(sp)  *)
    | 0x63c => 0x01012203 (* lw tp,16(sp)  *)
    | 0x640 => 0x01412283 (* lw t0,20(sp)  *)
    | 0x644 => 0x01812303 (* lw t1,24(sp)  *)
    | 0x648 => 0x01c12383 (* lw t2,28(sp)  *)
    | 0x64c => 0x02012403 (* lw s0,32(sp)  *)
    | 0x650 => 0x02412483 (* lw s1,36(sp)  *)
    | 0x654 => 0x02812503 (* lw a0,40(sp)  *)
    | 0x658 => 0x02c12583 (* lw a1,44(sp)  *)
    | 0x65c => 0x03012603 (* lw a2,48(sp)  *)
    | 0x660 => 0x03412683 (* lw a3,52(sp)  *)
    | 0x664 => 0x03812703 (* lw a4,56(sp)  *)
    | 0x668 => 0x03c12783 (* lw a5,60(sp)  *)
    | 0x66c => 0x04012803 (* lw a6,64(sp)  *)
    | 0x670 => 0x04412883 (* lw a7,68(sp)  *)
    | 0x674 => 0x04812903 (* lw s2,72(sp)  *)
    | 0x678 => 0x04c12983 (* lw s3,76(sp)  *)
    | 0x67c => 0x05012a03 (* lw s4,80(sp)  *)
    | 0x680 => 0x05412a83 (* lw s5,84(sp)  *)
    | 0x684 => 0x05812b03 (* lw s6,88(sp)  *)
    | 0x688 => 0x05c12b83 (* lw s7,92(sp)  *)
    | 0x68c => 0x06012c03 (* lw s8,96(sp)  *)
    | 0x690 => 0x06412c83 (* lw s9,100(sp)  *)
    | 0x694 => 0x06812d03 (* lw s10,104(sp)  *)
    | 0x698 => 0x06c12d83 (* lw s11,108(sp)  *)
    | 0x69c => 0x07012e03 (* lw t3,112(sp)  *)
    | 0x6a0 => 0x07412e83 (* lw t4,116(sp)  *)
    | 0x6a4 => 0x07812f03 (* lw t5,120(sp)  *)
    | 0x6a8 => 0x07c12f83 (* lw t6,124(sp)  *)
    | 0x6ac => 0x00812103 (* lw sp,8(sp)  *)
    | 0x6b0 => 0x30200073 (* mret  *)
    (* <__neorv32_rte_print_hex> *)
    | 0x6b4 => 0xfd010113 (* addi sp,sp,-48  *)
    | 0x6b8 => 0x03212023 (* sw s2,32(sp)  *)
    | 0x6bc => 0x00058913 (* mv s2,a1  *)
    | 0x6c0 => 0x000025b7 (* lui a1,0x2  *)
    | 0x6c4 => 0x02912223 (* sw s1,36(sp)  *)
    | 0x6c8 => 0x01100613 (* li a2,17  *)
    | 0x6cc => 0x00050493 (* mv s1,a0  *)
    | 0x6d0 => 0xdd458593 (* addi a1,a1,-556 # 1dd4 <__fini_array_end+0x48>  *)
    | 0x6d4 => 0x00c10513 (* addi a0,sp,12  *)
    | 0x6d8 => 0x02112623 (* sw ra,44(sp)  *)
    | 0x6dc => 0x02812423 (* sw s0,40(sp)  *)
    | 0x6e0 => 0x7d9000ef (* jal 16b8 <memcpy>  *)
    | 0x6e4 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x6e8 => 0x360000ef (* jal a48 <neorv32_uart_available>  *)
    | 0x6ec => 0x04050863 (* beqz a0,73c <__neorv32_rte_print_hex+0x88>  *)
    | 0x6f0 => 0x03000593 (* li a1,48  *)
    | 0x6f4 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x6f8 => 0x428000ef (* jal b20 <neorv32_uart_putc>  *)
    | 0x6fc => 0x00f00413 (* li s0,15  *)
    | 0x700 => 0x41240433 (* sub s0,s0,s2  *)
    | 0x704 => 0x07800593 (* li a1,120  *)
    | 0x708 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x70c => 0x414000ef (* jal b20 <neorv32_uart_putc>  *)
    | 0x710 => 0x00241413 (* slli s0,s0,0x2  *)
    | 0x714 => 0xffc00913 (* li s2,-4  *)
    | 0x718 => 0x0084d7b3 (* srl a5,s1,s0  *)
    | 0x71c => 0x00f7f793 (* andi a5,a5,15  *)
    | 0x720 => 0x02078793 (* addi a5,a5,32  *)
    | 0x724 => 0x002787b3 (* add a5,a5,sp  *)
    | 0x728 => 0xfec7c583 (* lbu a1,-20(a5)  *)
    | 0x72c => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x730 => 0xffc40413 (* addi s0,s0,-4  *)
    | 0x734 => 0x3ec000ef (* jal b20 <neorv32_uart_putc>  *)
    | 0x738 => 0xff2410e3 (* bne s0,s2,718 <__neorv32_rte_print_hex+0x64>  *)
    | 0x73c => 0x02c12083 (* lw ra,44(sp)  *)
    | 0x740 => 0x02812403 (* lw s0,40(sp)  *)
    | 0x744 => 0x02412483 (* lw s1,36(sp)  *)
    | 0x748 => 0x02012903 (* lw s2,32(sp)  *)
    | 0x74c => 0x03010113 (* addi sp,sp,48  *)
    | 0x750 => 0x00008067 (* ret  *)
    (* <neorv32_rte_debug_handler> *)
    | 0x754 => 0xff010113 (* addi sp,sp,-16  *)
    | 0x758 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x75c => 0x00112623 (* sw ra,12(sp)  *)
    | 0x760 => 0x00812423 (* sw s0,8(sp)  *)
    | 0x764 => 0x2e4000ef (* jal a48 <neorv32_uart_available>  *)
    | 0x768 => 0x26050663 (* beqz a0,9d4 <neorv32_rte_debug_handler+0x280>  *)
    | 0x76c => 0x000025b7 (* lui a1,0x2  *)
    | 0x770 => 0xde858593 (* addi a1,a1,-536 # 1de8 <__fini_array_end+0x5c>  *)
    | 0x774 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x778 => 0x3bc000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x77c => 0xf14027f3 (* csrr a5,mhartid  *)
    | 0x780 => 0x0017f793 (* andi a5,a5,1  *)
    | 0x784 => 0x04078c63 (* beqz a5,7dc <neorv32_rte_debug_handler+0x88>  *)
    | 0x788 => 0x000025b7 (* lui a1,0x2  *)
    | 0x78c => 0xdf858593 (* addi a1,a1,-520 # 1df8 <__fini_array_end+0x6c>  *)
    | 0x790 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x794 => 0x3a0000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x798 => 0x300027f3 (* csrr a5,mstatus  *)
    | 0x79c => 0x00b7d713 (* srli a4,a5,0xb  *)
    | 0x7a0 => 0x00377713 (* andi a4,a4,3  *)
    | 0x7a4 => 0x04070263 (* beqz a4,7e8 <neorv32_rte_debug_handler+0x94>  *)
    | 0x7a8 => 0x000025b7 (* lui a1,0x2  *)
    | 0x7ac => 0xe0858593 (* addi a1,a1,-504 # 1e08 <__fini_array_end+0x7c>  *)
    | 0x7b0 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x7b4 => 0x380000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x7b8 => 0x34202473 (* csrr s0,mcause  *)
    | 0x7bc => 0x01000793 (* li a5,16  *)
    | 0x7c0 => 0x0287ea63 (* bltu a5,s0,7f4 <neorv32_rte_debug_handler+0xa0>  *)
    | 0x7c4 => 0x00002737 (* lui a4,0x2  *)
    | 0x7c8 => 0x00241793 (* slli a5,s0,0x2  *)
    | 0x7cc => 0x01870713 (* addi a4,a4,24 # 2018 <__neorv32_ram_size+0x18>  *)
    | 0x7d0 => 0x00e787b3 (* add a5,a5,a4  *)
    | 0x7d4 => 0x0007a783 (* lw a5,0(a5)  *)
    | 0x7d8 => 0x00078067 (* jr a5  *)
    | 0x7dc => 0x000025b7 (* lui a1,0x2  *)
    | 0x7e0 => 0xe0058593 (* addi a1,a1,-512 # 1e00 <__fini_array_end+0x74>  *)
    | 0x7e4 => 0xfadff06f (* j 790 <neorv32_rte_debug_handler+0x3c>  *)
    | 0x7e8 => 0x000025b7 (* lui a1,0x2  *)
    | 0x7ec => 0xe0c58593 (* addi a1,a1,-500 # 1e0c <__fini_array_end+0x80>  *)
    | 0x7f0 => 0xfc1ff06f (* j 7b0 <neorv32_rte_debug_handler+0x5c>  *)
    | 0x7f4 => 0x800007b7 (* lui a5,0x80000  *)
    | 0x7f8 => 0x00b78793 (* addi a5,a5,11 # 8000000b <__malloc_av_+0xb>  *)
    | 0x7fc => 0x18f40e63 (* beq s0,a5,998 <neorv32_rte_debug_handler+0x244>  *)
    | 0x800 => 0x0287ea63 (* bltu a5,s0,834 <neorv32_rte_debug_handler+0xe0>  *)
    | 0x804 => 0x800007b7 (* lui a5,0x80000  *)
    | 0x808 => 0x00378793 (* addi a5,a5,3 # 80000003 <__malloc_av_+0x3>  *)
    | 0x80c => 0x16f40a63 (* beq s0,a5,980 <neorv32_rte_debug_handler+0x22c>  *)
    | 0x810 => 0x800007b7 (* lui a5,0x80000  *)
    | 0x814 => 0x00778793 (* addi a5,a5,7 # 80000007 <__malloc_av_+0x7>  *)
    | 0x818 => 0x16f40a63 (* beq s0,a5,98c <neorv32_rte_debug_handler+0x238>  *)
    | 0x81c => 0x000025b7 (* lui a1,0x2  *)
    | 0x820 => 0xf7058593 (* addi a1,a1,-144 # 1f70 <__fini_array_end+0x1e4>  *)
    | 0x824 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x828 => 0x30c000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x82c => 0x00800593 (* li a1,8  *)
    | 0x830 => 0x02c0006f (* j 85c <neorv32_rte_debug_handler+0x108>  *)
    | 0x834 => 0x800007b7 (* lui a5,0x80000  *)
    | 0x838 => 0xff078793 (* addi a5,a5,-16 # 7ffffff0 <__neorv32_rom_size+0x7fffbff0>  *)
    | 0x83c => 0x00f407b3 (* add a5,s0,a5  *)
    | 0x840 => 0x00f00713 (* li a4,15  *)
    | 0x844 => 0xfcf76ce3 (* bltu a4,a5,81c <neorv32_rte_debug_handler+0xc8>  *)
    | 0x848 => 0x000025b7 (* lui a1,0x2  *)
    | 0x84c => 0xf6458593 (* addi a1,a1,-156 # 1f64 <__fini_array_end+0x1d8>  *)
    | 0x850 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x854 => 0x2e0000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x858 => 0x00100593 (* li a1,1  *)
    | 0x85c => 0x00040513 (* mv a0,s0  *)
    | 0x860 => 0xe55ff0ef (* jal 6b4 <__neorv32_rte_print_hex>  *)
    | 0x864 => 0x0140006f (* j 878 <neorv32_rte_debug_handler+0x124>  *)
    | 0x868 => 0x000025b7 (* lui a1,0x2  *)
    | 0x86c => 0xe1058593 (* addi a1,a1,-496 # 1e10 <__fini_array_end+0x84>  *)
    | 0x870 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x874 => 0x2c0000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x878 => 0x000025b7 (* lui a1,0x2  *)
    | 0x87c => 0xf8458593 (* addi a1,a1,-124 # 1f84 <__fini_array_end+0x1f8>  *)
    | 0x880 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x884 => 0x2b0000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x888 => 0x34102573 (* csrr a0,mepc  *)
    | 0x88c => 0x00800593 (* li a1,8  *)
    | 0x890 => 0xe25ff0ef (* jal 6b4 <__neorv32_rte_print_hex>  *)
    | 0x894 => 0x000025b7 (* lui a1,0x2  *)
    | 0x898 => 0xf8c58593 (* addi a1,a1,-116 # 1f8c <__fini_array_end+0x200>  *)
    | 0x89c => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x8a0 => 0x294000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x8a4 => 0x34a02573 (* csrr a0,0x34a  *)
    | 0x8a8 => 0x00800593 (* li a1,8  *)
    | 0x8ac => 0xe09ff0ef (* jal 6b4 <__neorv32_rte_print_hex>  *)
    | 0x8b0 => 0x000025b7 (* lui a1,0x2  *)
    | 0x8b4 => 0xf9858593 (* addi a1,a1,-104 # 1f98 <__fini_array_end+0x20c>  *)
    | 0x8b8 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x8bc => 0x278000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x8c0 => 0x34302573 (* csrr a0,mtval  *)
    | 0x8c4 => 0x00800593 (* li a1,8  *)
    | 0x8c8 => 0xdedff0ef (* jal 6b4 <__neorv32_rte_print_hex>  *)
    | 0x8cc => 0x0c045c63 (* bgez s0,9a4 <neorv32_rte_debug_handler+0x250>  *)
    | 0x8d0 => 0x000025b7 (* lui a1,0x2  *)
    | 0x8d4 => 0xfa458593 (* addi a1,a1,-92 # 1fa4 <__fini_array_end+0x218>  *)
    | 0x8d8 => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x8dc => 0x258000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x8e0 => 0x00100793 (* li a5,1  *)
    | 0x8e4 => 0x008797b3 (* sll a5,a5,s0  *)
    | 0x8e8 => 0x3047b073 (* csrc mie,a5  *)
    | 0x8ec => 0x00812403 (* lw s0,8(sp)  *)
    | 0x8f0 => 0x00c12083 (* lw ra,12(sp)  *)
    | 0x8f4 => 0x000025b7 (* lui a1,0x2  *)
    | 0x8f8 => 0xfdc58593 (* addi a1,a1,-36 # 1fdc <__fini_array_end+0x250>  *)
    | 0x8fc => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x900 => 0x01010113 (* addi sp,sp,16  *)
    | 0x904 => 0x2300006f (* j b34 <neorv32_uart_puts>  *)
    | 0x908 => 0x000025b7 (* lui a1,0x2  *)
    | 0x90c => 0xe2c58593 (* addi a1,a1,-468 # 1e2c <__fini_array_end+0xa0>  *)
    | 0x910 => 0xf61ff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x914 => 0x000025b7 (* lui a1,0x2  *)
    | 0x918 => 0xe4058593 (* addi a1,a1,-448 # 1e40 <__fini_array_end+0xb4>  *)
    | 0x91c => 0xf55ff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x920 => 0x000025b7 (* lui a1,0x2  *)
    | 0x924 => 0xe6058593 (* addi a1,a1,-416 # 1e60 <__fini_array_end+0xd4>  *)
    | 0x928 => 0xf49ff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x92c => 0x000025b7 (* lui a1,0x2  *)
    | 0x930 => 0xe7858593 (* addi a1,a1,-392 # 1e78 <__fini_array_end+0xec>  *)
    | 0x934 => 0xf3dff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x938 => 0x000025b7 (* lui a1,0x2  *)
    | 0x93c => 0xe9058593 (* addi a1,a1,-368 # 1e90 <__fini_array_end+0x104>  *)
    | 0x940 => 0xf31ff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x944 => 0x000025b7 (* lui a1,0x2  *)
    | 0x948 => 0xea458593 (* addi a1,a1,-348 # 1ea4 <__fini_array_end+0x118>  *)
    | 0x94c => 0xf25ff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x950 => 0x000025b7 (* lui a1,0x2  *)
    | 0x954 => 0xec058593 (* addi a1,a1,-320 # 1ec0 <__fini_array_end+0x134>  *)
    | 0x958 => 0xf19ff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x95c => 0x000025b7 (* lui a1,0x2  *)
    | 0x960 => 0xed458593 (* addi a1,a1,-300 # 1ed4 <__fini_array_end+0x148>  *)
    | 0x964 => 0xf0dff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x968 => 0x000025b7 (* lui a1,0x2  *)
    | 0x96c => 0xef458593 (* addi a1,a1,-268 # 1ef4 <__fini_array_end+0x168>  *)
    | 0x970 => 0xf01ff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x974 => 0x000025b7 (* lui a1,0x2  *)
    | 0x978 => 0xf1458593 (* addi a1,a1,-236 # 1f14 <__fini_array_end+0x188>  *)
    | 0x97c => 0xef5ff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x980 => 0x000025b7 (* lui a1,0x2  *)
    | 0x984 => 0xf2058593 (* addi a1,a1,-224 # 1f20 <__fini_array_end+0x194>  *)
    | 0x988 => 0xee9ff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x98c => 0x000025b7 (* lui a1,0x2  *)
    | 0x990 => 0xf3858593 (* addi a1,a1,-200 # 1f38 <__fini_array_end+0x1ac>  *)
    | 0x994 => 0xeddff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x998 => 0x000025b7 (* lui a1,0x2  *)
    | 0x99c => 0xf4c58593 (* addi a1,a1,-180 # 1f4c <__fini_array_end+0x1c0>  *)
    | 0x9a0 => 0xed1ff06f (* j 870 <neorv32_rte_debug_handler+0x11c>  *)
    | 0x9a4 => 0x00100793 (* li a5,1  *)
    | 0x9a8 => 0x0087f663 (* bgeu a5,s0,9b4 <neorv32_rte_debug_handler+0x260>  *)
    | 0x9ac => 0x01000793 (* li a5,16  *)
    | 0x9b0 => 0xf2f41ee3 (* bne s0,a5,8ec <neorv32_rte_debug_handler+0x198>  *)
    | 0x9b4 => 0x000025b7 (* lui a1,0x2  *)
    | 0x9b8 => 0xfbc58593 (* addi a1,a1,-68 # 1fbc <__fini_array_end+0x230>  *)
    | 0x9bc => 0xfff50537 (* lui a0,0xfff50  *)
    | 0x9c0 => 0x174000ef (* jal b34 <neorv32_uart_puts>  *)
    | 0x9c4 => 0x00000793 (* li a5,0  *)
    | 0x9c8 => 0x30479073 (* csrw mie,a5  *)
    | 0x9cc => 0x10500073 (* wfi  *)
    | 0x9d0 => 0xffdff06f (* j 9cc <neorv32_rte_debug_handler+0x278>  *)
    | 0x9d4 => 0x00c12083 (* lw ra,12(sp)  *)
    | 0x9d8 => 0x00812403 (* lw s0,8(sp)  *)
    | 0x9dc => 0x01010113 (* addi sp,sp,16  *)
    | 0x9e0 => 0x00008067 (* ret  *)
    (* <neorv32_rte_setup> *)
    | 0x9e4 => 0x000027b7 (* lui a5,0x2  *)
    | 0x9e8 => 0x80078793 (* addi a5,a5,-2048 # 1800 <_malloc_trim_r+0x20>  *)
    | 0x9ec => 0x30079073 (* csrw mstatus,a5  *)
    | 0x9f0 => 0x56c00793 (* li a5,1388  *)
    | 0x9f4 => 0xffc7f793 (* andi a5,a5,-4  *)
    | 0x9f8 => 0x30579073 (* csrw mtvec,a5  *)
    | 0x9fc => 0x00000793 (* li a5,0  *)
    | 0xa00 => 0x30479073 (* csrw mie,a5  *)
    | 0xa04 => 0xf14027f3 (* csrr a5,mhartid  *)
    | 0xa08 => 0x02079c63 (* bnez a5,a40 <neorv32_rte_setup+0x5c>  *)
    | 0xa0c => 0x80000537 (* lui a0,0x80000  *)
    | 0xa10 => 0x02000593 (* li a1,32  *)
    | 0xa14 => 0x55450713 (* addi a4,a0,1364 # 80000554 <__neorv32_rte_vector_lut>  *)
    | 0xa18 => 0x00279693 (* slli a3,a5,0x2  *)
    | 0xa1c => 0x00d706b3 (* add a3,a4,a3  *)
    | 0xa20 => 0x75400613 (* li a2,1876  *)
    | 0xa24 => 0x00c6a023 (* sw a2,0(a3)  *)
    | 0xa28 => 0x02078693 (* addi a3,a5,32  *)
    | 0xa2c => 0x00269693 (* slli a3,a3,0x2  *)
    | 0xa30 => 0x00d70733 (* add a4,a4,a3  *)
    | 0xa34 => 0x00c72023 (* sw a2,0(a4)  *)
    | 0xa38 => 0x00178793 (* addi a5,a5,1  *)
    | 0xa3c => 0xfcb79ce3 (* bne a5,a1,a14 <neorv32_rte_setup+0x30>  *)
    | 0xa40 => 0x0ff0000f (* fence  *)
    | 0xa44 => 0x00008067 (* ret  *)
    (* <neorv32_uart_available> *)
    | 0xa48 => 0xfff50737 (* lui a4,0xfff50  *)
    | 0xa4c => 0x00050793 (* mv a5,a0  *)
    | 0xa50 => 0x00e51c63 (* bne a0,a4,a68 <neorv32_uart_available+0x20>  *)
    | 0xa54 => 0xfffe07b7 (* lui a5,0xfffe0  *)
    | 0xa58 => 0x0087a503 (* lw a0,8(a5) # fffe0008 <__crt0_ram_last+0x7ffde009>  *)
    | 0xa5c => 0x000207b7 (* lui a5,0x20  *)
    | 0xa60 => 0x00f57533 (* and a0,a0,a5  *)
    | 0xa64 => 0x00008067 (* ret  *)
    | 0xa68 => 0xfff60737 (* lui a4,0xfff60  *)
    | 0xa6c => 0x00000513 (* li a0,0  *)
    | 0xa70 => 0xfee79ae3 (* bne a5,a4,a64 <neorv32_uart_available+0x1c>  *)
    | 0xa74 => 0xfffe07b7 (* lui a5,0xfffe0  *)
    | 0xa78 => 0x0087a503 (* lw a0,8(a5) # fffe0008 <__crt0_ram_last+0x7ffde009>  *)
    | 0xa7c => 0x020007b7 (* lui a5,0x2000  *)
    | 0xa80 => 0xfe1ff06f (* j a60 <neorv32_uart_available+0x18>  *)
    (* <neorv32_uart_setup> *)
    | 0xa84 => 0xff010113 (* addi sp,sp,-16  *)
    | 0xa88 => 0x00812423 (* sw s0,8(sp)  *)
    | 0xa8c => 0x00912223 (* sw s1,4(sp)  *)
    | 0xa90 => 0x00112623 (* sw ra,12(sp)  *)
    | 0xa94 => 0x00052023 (* sw zero,0(a0)  *)
    | 0xa98 => 0xfffe07b7 (* lui a5,0xfffe0  *)
    | 0xa9c => 0x00050493 (* mv s1,a0  *)
    | 0xaa0 => 0x0007a503 (* lw a0,0(a5) # fffe0000 <__crt0_ram_last+0x7ffde001>  *)
    | 0xaa4 => 0x00159593 (* slli a1,a1,0x1  *)
    | 0xaa8 => 0x00060413 (* mv s0,a2  *)
    | 0xaac => 0x234010ef (* jal 1ce0 <__hidden___udivsi3>  *)
    | 0xab0 => 0x00000713 (* li a4,0  *)
    | 0xab4 => 0x3fe00693 (* li a3,1022  *)
    | 0xab8 => 0x04a6e463 (* bltu a3,a0,b00 <neorv32_uart_setup+0x7c>  *)
    | 0xabc => 0xfff50793 (* addi a5,a0,-1  *)
    | 0xac0 => 0x00679793 (* slli a5,a5,0x6  *)
    | 0xac4 => 0x01079793 (* slli a5,a5,0x10  *)
    | 0xac8 => 0x07c006b7 (* lui a3,0x7c00  *)
    | 0xacc => 0x00d47433 (* and s0,s0,a3  *)
    | 0xad0 => 0x0107d793 (* srli a5,a5,0x10  *)
    | 0xad4 => 0x00371713 (* slli a4,a4,0x3  *)
    | 0xad8 => 0x0087e7b3 (* or a5,a5,s0  *)
    | 0xadc => 0x01877713 (* andi a4,a4,24  *)
    | 0xae0 => 0x00c12083 (* lw ra,12(sp)  *)
    | 0xae4 => 0x00812403 (* lw s0,8(sp)  *)
    | 0xae8 => 0x00e7e7b3 (* or a5,a5,a4  *)
    | 0xaec => 0x0017e793 (* ori a5,a5,1  *)
    | 0xaf0 => 0x00f4a023 (* sw a5,0(s1)  *)
    | 0xaf4 => 0x00412483 (* lw s1,4(sp)  *)
    | 0xaf8 => 0x01010113 (* addi sp,sp,16  *)
    | 0xafc => 0x00008067 (* ret  *)
    | 0xb00 => 0xffe70793 (* addi a5,a4,-2 # fff5fffe <__crt0_ram_last+0x7ff5dfff>  *)
    | 0xb04 => 0xffd7f793 (* andi a5,a5,-3  *)
    | 0xb08 => 0x00079863 (* bnez a5,b18 <neorv32_uart_setup+0x94>  *)
    | 0xb0c => 0x00355513 (* srli a0,a0,0x3  *)
    | 0xb10 => 0x00170713 (* addi a4,a4,1  *)
    | 0xb14 => 0xfa5ff06f (* j ab8 <neorv32_uart_setup+0x34>  *)
    | 0xb18 => 0x00155513 (* srli a0,a0,0x1  *)
    | 0xb1c => 0xff5ff06f (* j b10 <neorv32_uart_setup+0x8c>  *)
    (* <neorv32_uart_putc> *)
    | 0xb20 => 0x00052783 (* lw a5,0(a0)  *)
    | 0xb24 => 0x00a79713 (* slli a4,a5,0xa  *)
    | 0xb28 => 0xfe075ce3 (* bgez a4,b20 <neorv32_uart_putc>  *)
    | 0xb2c => 0x00b52223 (* sw a1,4(a0)  *)
    | 0xb30 => 0x00008067 (* ret  *)
    (* <neorv32_uart_puts> *)
    | 0xb34 => 0xfe010113 (* addi sp,sp,-32  *)
    | 0xb38 => 0x00812c23 (* sw s0,24(sp)  *)
    | 0xb3c => 0x00912a23 (* sw s1,20(sp)  *)
    | 0xb40 => 0x01312623 (* sw s3,12(sp)  *)
    | 0xb44 => 0x00112e23 (* sw ra,28(sp)  *)
    | 0xb48 => 0x01212823 (* sw s2,16(sp)  *)
    | 0xb4c => 0x00050493 (* mv s1,a0  *)
    | 0xb50 => 0x00058413 (* mv s0,a1  *)
    | 0xb54 => 0x00a00993 (* li s3,10  *)
    | 0xb58 => 0x00044903 (* lbu s2,0(s0)  *)
    | 0xb5c => 0x00140413 (* addi s0,s0,1  *)
    | 0xb60 => 0x02091063 (* bnez s2,b80 <neorv32_uart_puts+0x4c>  *)
    | 0xb64 => 0x01c12083 (* lw ra,28(sp)  *)
    | 0xb68 => 0x01812403 (* lw s0,24(sp)  *)
    | 0xb6c => 0x01412483 (* lw s1,20(sp)  *)
    | 0xb70 => 0x01012903 (* lw s2,16(sp)  *)
    | 0xb74 => 0x00c12983 (* lw s3,12(sp)  *)
    | 0xb78 => 0x02010113 (* addi sp,sp,32  *)
    | 0xb7c => 0x00008067 (* ret  *)
    | 0xb80 => 0x01391863 (* bne s2,s3,b90 <neorv32_uart_puts+0x5c>  *)
    | 0xb84 => 0x00d00593 (* li a1,13  *)
    | 0xb88 => 0x00048513 (* mv a0,s1  *)
    | 0xb8c => 0xf95ff0ef (* jal b20 <neorv32_uart_putc>  *)
    | 0xb90 => 0x00090593 (* mv a1,s2  *)
    | 0xb94 => 0x00048513 (* mv a0,s1  *)
    | 0xb98 => 0xf89ff0ef (* jal b20 <neorv32_uart_putc>  *)
    | 0xb9c => 0xfbdff06f (* j b58 <neorv32_uart_puts+0x24>  *)
    (* <itoa> *)
    | 0xba0 => 0xff010113 (* addi sp,sp,-16  *)
    | 0xba4 => 0x00812423 (* sw s0,8(sp)  *)
    | 0xba8 => 0x00112623 (* sw ra,12(sp)  *)
    | 0xbac => 0xffe60713 (* addi a4,a2,-2  *)
    | 0xbb0 => 0x02200793 (* li a5,34  *)
    | 0xbb4 => 0x00058413 (* mv s0,a1  *)
    | 0xbb8 => 0x04e7e063 (* bltu a5,a4,bf8 <itoa+0x58>  *)
    | 0xbbc => 0x00a00793 (* li a5,10  *)
    | 0xbc0 => 0x02f60063 (* beq a2,a5,be0 <itoa+0x40>  *)
    | 0xbc4 => 0x00040593 (* mv a1,s0  *)
    | 0xbc8 => 0x11d000ef (* jal 14e4 <__utoa>  *)
    | 0xbcc => 0x00c12083 (* lw ra,12(sp)  *)
    | 0xbd0 => 0x00040513 (* mv a0,s0  *)
    | 0xbd4 => 0x00812403 (* lw s0,8(sp)  *)
    | 0xbd8 => 0x01010113 (* addi sp,sp,16  *)
    | 0xbdc => 0x00008067 (* ret  *)
    | 0xbe0 => 0xfe0552e3 (* bgez a0,bc4 <itoa+0x24>  *)
    | 0xbe4 => 0x02d00793 (* li a5,45  *)
    | 0xbe8 => 0x00f58023 (* sb a5,0(a1)  *)
    | 0xbec => 0x40a00533 (* neg a0,a0  *)
    | 0xbf0 => 0x00158593 (* addi a1,a1,1  *)
    | 0xbf4 => 0xfd5ff06f (* j bc8 <itoa+0x28>  *)
    | 0xbf8 => 0x00058023 (* sb zero,0(a1)  *)
    | 0xbfc => 0x00c12083 (* lw ra,12(sp)  *)
    | 0xc00 => 0x00812403 (* lw s0,8(sp)  *)
    | 0xc04 => 0x00000513 (* li a0,0  *)
    | 0xc08 => 0x01010113 (* addi sp,sp,16  *)
    | 0xc0c => 0x00008067 (* ret  *)
    (* <malloc> *)
    | 0xc10 => 0x00050593 (* mv a1,a0  *)
    | 0xc14 => 0x80000517 (* auipc a0,0x80000  *)
    | 0xc18 => 0x92452503 (* lw a0,-1756(a0) # 80000538 <_impure_ptr>  *)
    | 0xc1c => 0x0140006f (* j c30 <_malloc_r>  *)
    (* <free> *)
    | 0xc20 => 0x00050593 (* mv a1,a0  *)
    | 0xc24 => 0x80000517 (* auipc a0,0x80000  *)
    | 0xc28 => 0x91452503 (* lw a0,-1772(a0) # 80000538 <_impure_ptr>  *)
    | 0xc2c => 0x4f90006f (* j 1924 <_free_r>  *)
    (* <_malloc_r> *)
    | 0xc30 => 0xfd010113 (* addi sp,sp,-48  *)
    | 0xc34 => 0x03212023 (* sw s2,32(sp)  *)
    | 0xc38 => 0x02112623 (* sw ra,44(sp)  *)
    | 0xc3c => 0x02812423 (* sw s0,40(sp)  *)
    | 0xc40 => 0x02912223 (* sw s1,36(sp)  *)
    | 0xc44 => 0x01312e23 (* sw s3,28(sp)  *)
    | 0xc48 => 0x00b58793 (* addi a5,a1,11  *)
    | 0xc4c => 0x01600713 (* li a4,22  *)
    | 0xc50 => 0x00050913 (* mv s2,a0  *)
    | 0xc54 => 0x08f76063 (* bltu a4,a5,cd4 <_malloc_r+0xa4>  *)
    | 0xc58 => 0x01000493 (* li s1,16  *)
    | 0xc5c => 0x20b4e463 (* bltu s1,a1,e64 <_malloc_r+0x234>  *)
    | 0xc60 => 0x7fc000ef (* jal 145c <__malloc_lock>  *)
    | 0xc64 => 0x01800793 (* li a5,24  *)
    | 0xc68 => 0x00200593 (* li a1,2  *)
    | 0xc6c => 0x7ffff997 (* auipc s3,0x7ffff  *)
    | 0xc70 => 0x39498993 (* addi s3,s3,916 # 80000000 <__malloc_av_>  *)
    | 0xc74 => 0x00f987b3 (* add a5,s3,a5  *)
    | 0xc78 => 0x0047a403 (* lw s0,4(a5)  *)
    | 0xc7c => 0xff878713 (* addi a4,a5,-8  *)
    | 0xc80 => 0x46e40663 (* beq s0,a4,10ec <__neorv32_heap_size+0xec>  *)
    | 0xc84 => 0x00442783 (* lw a5,4(s0)  *)
    | 0xc88 => 0x00c42683 (* lw a3,12(s0)  *)
    | 0xc8c => 0x00842603 (* lw a2,8(s0)  *)
    | 0xc90 => 0xffc7f793 (* andi a5,a5,-4  *)
    | 0xc94 => 0x00f407b3 (* add a5,s0,a5  *)
    | 0xc98 => 0x0047a703 (* lw a4,4(a5)  *)
    | 0xc9c => 0x00d62623 (* sw a3,12(a2)  *)
    | 0xca0 => 0x00c6a423 (* sw a2,8(a3) # 7c00008 <__neorv32_rom_size+0x7bfc008>  *)
    | 0xca4 => 0x00176713 (* ori a4,a4,1  *)
    | 0xca8 => 0x00090513 (* mv a0,s2  *)
    | 0xcac => 0x00e7a223 (* sw a4,4(a5)  *)
    | 0xcb0 => 0x7b8000ef (* jal 1468 <__malloc_unlock>  *)
    | 0xcb4 => 0x02c12083 (* lw ra,44(sp)  *)
    | 0xcb8 => 0x00840513 (* addi a0,s0,8  *)
    | 0xcbc => 0x02812403 (* lw s0,40(sp)  *)
    | 0xcc0 => 0x02412483 (* lw s1,36(sp)  *)
    | 0xcc4 => 0x02012903 (* lw s2,32(sp)  *)
    | 0xcc8 => 0x01c12983 (* lw s3,28(sp)  *)
    | 0xccc => 0x03010113 (* addi sp,sp,48  *)
    | 0xcd0 => 0x00008067 (* ret  *)
    | 0xcd4 => 0xff87f493 (* andi s1,a5,-8  *)
    | 0xcd8 => 0x1807c663 (* bltz a5,e64 <_malloc_r+0x234>  *)
    | 0xcdc => 0x18b4e463 (* bltu s1,a1,e64 <_malloc_r+0x234>  *)
    | 0xce0 => 0x77c000ef (* jal 145c <__malloc_lock>  *)
    | 0xce4 => 0x1f700793 (* li a5,503  *)
    | 0xce8 => 0x5097fc63 (* bgeu a5,s1,1200 <__neorv32_heap_size+0x200>  *)
    | 0xcec => 0x0094d793 (* srli a5,s1,0x9  *)
    | 0xcf0 => 0x18078e63 (* beqz a5,e8c <_malloc_r+0x25c>  *)
    | 0xcf4 => 0x00400713 (* li a4,4  *)
    | 0xcf8 => 0x46f76263 (* bltu a4,a5,115c <__neorv32_heap_size+0x15c>  *)
    | 0xcfc => 0x0064d793 (* srli a5,s1,0x6  *)
    | 0xd00 => 0x03978593 (* addi a1,a5,57  *)
    | 0xd04 => 0x03878813 (* addi a6,a5,56  *)
    | 0xd08 => 0x00359613 (* slli a2,a1,0x3  *)
    | 0xd0c => 0x7ffff997 (* auipc s3,0x7ffff  *)
    | 0xd10 => 0x2f498993 (* addi s3,s3,756 # 80000000 <__malloc_av_>  *)
    | 0xd14 => 0x00c98633 (* add a2,s3,a2  *)
    | 0xd18 => 0x00462403 (* lw s0,4(a2)  *)
    | 0xd1c => 0xff860613 (* addi a2,a2,-8  *)
    | 0xd20 => 0x02860863 (* beq a2,s0,d50 <_malloc_r+0x120>  *)
    | 0xd24 => 0x00f00513 (* li a0,15  *)
    | 0xd28 => 0x0140006f (* j d3c <_malloc_r+0x10c>  *)
    | 0xd2c => 0x00c42683 (* lw a3,12(s0)  *)
    | 0xd30 => 0x36075c63 (* bgez a4,10a8 <__neorv32_heap_size+0xa8>  *)
    | 0xd34 => 0x00d60e63 (* beq a2,a3,d50 <_malloc_r+0x120>  *)
    | 0xd38 => 0x00068413 (* mv s0,a3  *)
    | 0xd3c => 0x00442783 (* lw a5,4(s0)  *)
    | 0xd40 => 0xffc7f793 (* andi a5,a5,-4  *)
    | 0xd44 => 0x40978733 (* sub a4,a5,s1  *)
    | 0xd48 => 0xfee552e3 (* bge a0,a4,d2c <_malloc_r+0xfc>  *)
    | 0xd4c => 0x00080593 (* mv a1,a6  *)
    | 0xd50 => 0x0109a403 (* lw s0,16(s3)  *)
    | 0xd54 => 0x7ffff897 (* auipc a7,0x7ffff  *)
    | 0xd58 => 0x2b488893 (* addi a7,a7,692 # 80000008 <__malloc_av_+0x8>  *)
    | 0xd5c => 0x2d140663 (* beq s0,a7,1028 <__neorv32_heap_size+0x28>  *)
    | 0xd60 => 0x00442783 (* lw a5,4(s0)  *)
    | 0xd64 => 0x00f00693 (* li a3,15  *)
    | 0xd68 => 0xffc7f793 (* andi a5,a5,-4  *)
    | 0xd6c => 0x40978733 (* sub a4,a5,s1  *)
    | 0xd70 => 0x48e6ce63 (* blt a3,a4,120c <__neorv32_heap_size+0x20c>  *)
    | 0xd74 => 0x0119aa23 (* sw a7,20(s3)  *)
    | 0xd78 => 0x0119a823 (* sw a7,16(s3)  *)
    | 0xd7c => 0x46075263 (* bgez a4,11e0 <__neorv32_heap_size+0x1e0>  *)
    | 0xd80 => 0x1ff00713 (* li a4,511  *)
    | 0xd84 => 0x0049a503 (* lw a0,4(s3)  *)
    | 0xd88 => 0x36f76a63 (* bltu a4,a5,10fc <__neorv32_heap_size+0xfc>  *)
    | 0xd8c => 0xff87f713 (* andi a4,a5,-8  *)
    | 0xd90 => 0x00870713 (* addi a4,a4,8  *)
    | 0xd94 => 0x00e98733 (* add a4,s3,a4  *)
    | 0xd98 => 0x00072683 (* lw a3,0(a4)  *)
    | 0xd9c => 0x0057d613 (* srli a2,a5,0x5  *)
    | 0xda0 => 0x00100793 (* li a5,1  *)
    | 0xda4 => 0x00c797b3 (* sll a5,a5,a2  *)
    | 0xda8 => 0x00f56533 (* or a0,a0,a5  *)
    | 0xdac => 0xff870793 (* addi a5,a4,-8  *)
    | 0xdb0 => 0x00d42423 (* sw a3,8(s0)  *)
    | 0xdb4 => 0x00f42623 (* sw a5,12(s0)  *)
    | 0xdb8 => 0x00a9a223 (* sw a0,4(s3)  *)
    | 0xdbc => 0x00872023 (* sw s0,0(a4)  *)
    | 0xdc0 => 0x0086a623 (* sw s0,12(a3)  *)
    | 0xdc4 => 0x4025d793 (* srai a5,a1,0x2  *)
    | 0xdc8 => 0x00100613 (* li a2,1  *)
    | 0xdcc => 0x00f61633 (* sll a2,a2,a5  *)
    | 0xdd0 => 0x0cc56663 (* bltu a0,a2,e9c <_malloc_r+0x26c>  *)
    | 0xdd4 => 0x00a677b3 (* and a5,a2,a0  *)
    | 0xdd8 => 0x02079463 (* bnez a5,e00 <_malloc_r+0x1d0>  *)
    | 0xddc => 0x00161613 (* slli a2,a2,0x1  *)
    | 0xde0 => 0xffc5f593 (* andi a1,a1,-4  *)
    | 0xde4 => 0x00a677b3 (* and a5,a2,a0  *)
    | 0xde8 => 0x00458593 (* addi a1,a1,4  *)
    | 0xdec => 0x00079a63 (* bnez a5,e00 <_malloc_r+0x1d0>  *)
    | 0xdf0 => 0x00161613 (* slli a2,a2,0x1  *)
    | 0xdf4 => 0x00a677b3 (* and a5,a2,a0  *)
    | 0xdf8 => 0x00458593 (* addi a1,a1,4  *)
    | 0xdfc => 0xfe078ae3 (* beqz a5,df0 <_malloc_r+0x1c0>  *)
    | 0xe00 => 0x00f00813 (* li a6,15  *)
    | 0xe04 => 0x00359313 (* slli t1,a1,0x3  *)
    | 0xe08 => 0x00698333 (* add t1,s3,t1  *)
    | 0xe0c => 0x00030513 (* mv a0,t1  *)
    | 0xe10 => 0x00c52783 (* lw a5,12(a0)  *)
    | 0xe14 => 0x00058e13 (* mv t3,a1  *)
    | 0xe18 => 0x36f50463 (* beq a0,a5,1180 <__neorv32_heap_size+0x180>  *)
    | 0xe1c => 0x0047a703 (* lw a4,4(a5)  *)
    | 0xe20 => 0x00078413 (* mv s0,a5  *)
    | 0xe24 => 0x00c7a783 (* lw a5,12(a5)  *)
    | 0xe28 => 0xffc77713 (* andi a4,a4,-4  *)
    | 0xe2c => 0x409706b3 (* sub a3,a4,s1  *)
    | 0xe30 => 0x36d84463 (* blt a6,a3,1198 <__neorv32_heap_size+0x198>  *)
    | 0xe34 => 0xfe06c2e3 (* bltz a3,e18 <_malloc_r+0x1e8>  *)
    | 0xe38 => 0x00e40733 (* add a4,s0,a4  *)
    | 0xe3c => 0x00472683 (* lw a3,4(a4)  *)
    | 0xe40 => 0x00842603 (* lw a2,8(s0)  *)
    | 0xe44 => 0x00090513 (* mv a0,s2  *)
    | 0xe48 => 0x0016e693 (* ori a3,a3,1  *)
    | 0xe4c => 0x00d72223 (* sw a3,4(a4)  *)
    | 0xe50 => 0x00f62623 (* sw a5,12(a2)  *)
    | 0xe54 => 0x00c7a423 (* sw a2,8(a5)  *)
    | 0xe58 => 0x610000ef (* jal 1468 <__malloc_unlock>  *)
    | 0xe5c => 0x00840513 (* addi a0,s0,8  *)
    | 0xe60 => 0x0100006f (* j e70 <_malloc_r+0x240>  *)
    | 0xe64 => 0x00c00793 (* li a5,12  *)
    | 0xe68 => 0x00f92023 (* sw a5,0(s2)  *)
    | 0xe6c => 0x00000513 (* li a0,0  *)
    | 0xe70 => 0x02c12083 (* lw ra,44(sp)  *)
    | 0xe74 => 0x02812403 (* lw s0,40(sp)  *)
    | 0xe78 => 0x02412483 (* lw s1,36(sp)  *)
    | 0xe7c => 0x02012903 (* lw s2,32(sp)  *)
    | 0xe80 => 0x01c12983 (* lw s3,28(sp)  *)
    | 0xe84 => 0x03010113 (* addi sp,sp,48  *)
    | 0xe88 => 0x00008067 (* ret  *)
    | 0xe8c => 0x20000613 (* li a2,512  *)
    | 0xe90 => 0x04000593 (* li a1,64  *)
    | 0xe94 => 0x03f00813 (* li a6,63  *)
    | 0xe98 => 0xe75ff06f (* j d0c <_malloc_r+0xdc>  *)
    | 0xe9c => 0x0089a403 (* lw s0,8(s3)  *)
    | 0xea0 => 0x01612823 (* sw s6,16(sp)  *)
    | 0xea4 => 0x00442783 (* lw a5,4(s0)  *)
    | 0xea8 => 0xffc7fb13 (* andi s6,a5,-4  *)
    | 0xeac => 0x009b6863 (* bltu s6,s1,ebc <_malloc_r+0x28c>  *)
    | 0xeb0 => 0x409b0733 (* sub a4,s6,s1  *)
    | 0xeb4 => 0x00f00793 (* li a5,15  *)
    | 0xeb8 => 0x1ae7c663 (* blt a5,a4,1064 <__neorv32_heap_size+0x64>  *)
    | 0xebc => 0x01912223 (* sw s9,4(sp)  *)
    | 0xec0 => 0x7ffffc97 (* auipc s9,0x7ffff  *)
    | 0xec4 => 0x670c8c93 (* addi s9,s9,1648 # 80000530 <__malloc_sbrk_base>  *)
    | 0xec8 => 0x01512a23 (* sw s5,20(sp)  *)
    | 0xecc => 0x000ca703 (* lw a4,0(s9)  *)
    | 0xed0 => 0x7ffffa97 (* auipc s5,0x7ffff  *)
    | 0xed4 => 0x678aaa83 (* lw s5,1656(s5) # 80000548 <__malloc_top_pad>  *)
    | 0xed8 => 0x01412c23 (* sw s4,24(sp)  *)
    | 0xedc => 0x01712623 (* sw s7,12(sp)  *)
    | 0xee0 => 0xfff00793 (* li a5,-1  *)
    | 0xee4 => 0x01640a33 (* add s4,s0,s6  *)
    | 0xee8 => 0x01548ab3 (* add s5,s1,s5  *)
    | 0xeec => 0x3ef70663 (* beq a4,a5,12d8 <__neorv32_heap_size+0x2d8>  *)
    | 0xef0 => 0x000017b7 (* lui a5,0x1  *)
    | 0xef4 => 0x00f78793 (* addi a5,a5,15 # 100f <__neorv32_heap_size+0xf>  *)
    | 0xef8 => 0x00fa8ab3 (* add s5,s5,a5  *)
    | 0xefc => 0xfffff7b7 (* lui a5,0xfffff  *)
    | 0xf00 => 0x00fafab3 (* and s5,s5,a5  *)
    | 0xf04 => 0x000a8593 (* mv a1,s5  *)
    | 0xf08 => 0x00090513 (* mv a0,s2  *)
    | 0xf0c => 0x72c000ef (* jal 1638 <_sbrk_r>  *)
    | 0xf10 => 0xfff00793 (* li a5,-1  *)
    | 0xf14 => 0x00050b93 (* mv s7,a0  *)
    | 0xf18 => 0x48f50463 (* beq a0,a5,13a0 <__neorv32_heap_size+0x3a0>  *)
    | 0xf1c => 0x01812423 (* sw s8,8(sp)  *)
    | 0xf20 => 0x11456863 (* bltu a0,s4,1030 <__neorv32_heap_size+0x30>  *)
    | 0xf24 => 0x7ffffc17 (* auipc s8,0x7ffff  *)
    | 0xf28 => 0x730c0c13 (* addi s8,s8,1840 # 80000654 <__malloc_current_mallinfo>  *)
    | 0xf2c => 0x000c2583 (* lw a1,0(s8)  *)
    | 0xf30 => 0x00ba85b3 (* add a1,s5,a1  *)
    | 0xf34 => 0x00bc2023 (* sw a1,0(s8)  *)
    | 0xf38 => 0x00058713 (* mv a4,a1  *)
    | 0xf3c => 0x46aa0863 (* beq s4,a0,13ac <__neorv32_heap_size+0x3ac>  *)
    | 0xf40 => 0x000ca683 (* lw a3,0(s9)  *)
    | 0xf44 => 0xfff00793 (* li a5,-1  *)
    | 0xf48 => 0x48f68063 (* beq a3,a5,13c8 <__neorv32_heap_size+0x3c8>  *)
    | 0xf4c => 0x414b87b3 (* sub a5,s7,s4  *)
    | 0xf50 => 0x00e787b3 (* add a5,a5,a4  *)
    | 0xf54 => 0x00fc2023 (* sw a5,0(s8)  *)
    | 0xf58 => 0x007bfc93 (* andi s9,s7,7  *)
    | 0xf5c => 0x380c8e63 (* beqz s9,12f8 <__neorv32_heap_size+0x2f8>  *)
    | 0xf60 => 0x419b8bb3 (* sub s7,s7,s9  *)
    | 0xf64 => 0x000015b7 (* lui a1,0x1  *)
    | 0xf68 => 0x008b8b93 (* addi s7,s7,8  *)
    | 0xf6c => 0x00858593 (* addi a1,a1,8 # 1008 <__neorv32_heap_size+0x8>  *)
    | 0xf70 => 0x015b8ab3 (* add s5,s7,s5  *)
    | 0xf74 => 0x419585b3 (* sub a1,a1,s9  *)
    | 0xf78 => 0x415585b3 (* sub a1,a1,s5  *)
    | 0xf7c => 0x01459593 (* slli a1,a1,0x14  *)
    | 0xf80 => 0x0145da13 (* srli s4,a1,0x14  *)
    | 0xf84 => 0x000a0593 (* mv a1,s4  *)
    | 0xf88 => 0x00090513 (* mv a0,s2  *)
    | 0xf8c => 0x6ac000ef (* jal 1638 <_sbrk_r>  *)
    | 0xf90 => 0xfff00793 (* li a5,-1  *)
    | 0xf94 => 0x46f50a63 (* beq a0,a5,1408 <__neorv32_heap_size+0x408>  *)
    | 0xf98 => 0x41750533 (* sub a0,a0,s7  *)
    | 0xf9c => 0x01450ab3 (* add s5,a0,s4  *)
    | 0xfa0 => 0x000c2703 (* lw a4,0(s8)  *)
    | 0xfa4 => 0x0179a423 (* sw s7,8(s3)  *)
    | 0xfa8 => 0x001ae793 (* ori a5,s5,1  *)
    | 0xfac => 0x00ea05b3 (* add a1,s4,a4  *)
    | 0xfb0 => 0x00fba223 (* sw a5,4(s7)  *)
    | 0xfb4 => 0x00bc2023 (* sw a1,0(s8)  *)
    | 0xfb8 => 0x03340e63 (* beq s0,s3,ff4 <_malloc_r+0x3c4>  *)
    | 0xfbc => 0x00f00693 (* li a3,15  *)
    | 0xfc0 => 0x3766f263 (* bgeu a3,s6,1324 <__neorv32_heap_size+0x324>  *)
    | 0xfc4 => 0x00442703 (* lw a4,4(s0)  *)
    | 0xfc8 => 0xff4b0793 (* addi a5,s6,-12  *)
    | 0xfcc => 0xff87f793 (* andi a5,a5,-8  *)
    | 0xfd0 => 0x00177713 (* andi a4,a4,1  *)
    | 0xfd4 => 0x00f76733 (* or a4,a4,a5  *)
    | 0xfd8 => 0x00e42223 (* sw a4,4(s0)  *)
    | 0xfdc => 0x00500613 (* li a2,5  *)
    | 0xfe0 => 0x00f40733 (* add a4,s0,a5  *)
    | 0xfe4 => 0x00c72223 (* sw a2,4(a4)  *)
    | 0xfe8 => 0x00c72423 (* sw a2,8(a4)  *)
    | 0xfec => 0x2cf6ea63 (* bltu a3,a5,12c0 <__neorv32_heap_size+0x2c0>  *)
    | 0xff0 => 0x004ba783 (* lw a5,4(s7)  *)
    | 0xff4 => 0x7ffff717 (* auipc a4,0x7ffff  *)
    | 0xff8 => 0x55070713 (* addi a4,a4,1360 # 80000544 <__malloc_max_sbrked_mem>  *)
    | 0xffc => 0x00072683 (* lw a3,0(a4)  *)
    | 0x1000 => 0x00b6f463 (* bgeu a3,a1,1008 <__neorv32_heap_size+0x8>  *)
    | 0x1004 => 0x00b72023 (* sw a1,0(a4)  *)
    | 0x1008 => 0x7ffff717 (* auipc a4,0x7ffff  *)
    | 0x100c => 0x53870713 (* addi a4,a4,1336 # 80000540 <__malloc_max_total_mem>  *)
    | 0x1010 => 0x00072683 (* lw a3,0(a4)  *)
    | 0x1014 => 0x00b6f463 (* bgeu a3,a1,101c <__neorv32_heap_size+0x1c>  *)
    | 0x1018 => 0x00b72023 (* sw a1,0(a4)  *)
    | 0x101c => 0x00812c03 (* lw s8,8(sp)  *)
    | 0x1020 => 0x000b8413 (* mv s0,s7  *)
    | 0x1024 => 0x01c0006f (* j 1040 <__neorv32_heap_size+0x40>  *)
    | 0x1028 => 0x0049a503 (* lw a0,4(s3)  *)
    | 0x102c => 0xd99ff06f (* j dc4 <_malloc_r+0x194>  *)
    | 0x1030 => 0x35340c63 (* beq s0,s3,1388 <__neorv32_heap_size+0x388>  *)
    | 0x1034 => 0x0089a403 (* lw s0,8(s3)  *)
    | 0x1038 => 0x00812c03 (* lw s8,8(sp)  *)
    | 0x103c => 0x00442783 (* lw a5,4(s0)  *)
    | 0x1040 => 0xffc7f793 (* andi a5,a5,-4  *)
    | 0x1044 => 0x40978733 (* sub a4,a5,s1  *)
    | 0x1048 => 0x2e97e463 (* bltu a5,s1,1330 <__neorv32_heap_size+0x330>  *)
    | 0x104c => 0x00f00793 (* li a5,15  *)
    | 0x1050 => 0x2ee7d063 (* bge a5,a4,1330 <__neorv32_heap_size+0x330>  *)
    | 0x1054 => 0x01812a03 (* lw s4,24(sp)  *)
    | 0x1058 => 0x01412a83 (* lw s5,20(sp)  *)
    | 0x105c => 0x00c12b83 (* lw s7,12(sp)  *)
    | 0x1060 => 0x00412c83 (* lw s9,4(sp)  *)
    | 0x1064 => 0x0014e793 (* ori a5,s1,1  *)
    | 0x1068 => 0x00f42223 (* sw a5,4(s0)  *)
    | 0x106c => 0x009404b3 (* add s1,s0,s1  *)
    | 0x1070 => 0x0099a423 (* sw s1,8(s3)  *)
    | 0x1074 => 0x00176713 (* ori a4,a4,1  *)
    | 0x1078 => 0x00090513 (* mv a0,s2  *)
    | 0x107c => 0x00e4a223 (* sw a4,4(s1)  *)
    | 0x1080 => 0x3e8000ef (* jal 1468 <__malloc_unlock>  *)
    | 0x1084 => 0x02c12083 (* lw ra,44(sp)  *)
    | 0x1088 => 0x00840513 (* addi a0,s0,8  *)
    | 0x108c => 0x02812403 (* lw s0,40(sp)  *)
    | 0x1090 => 0x01012b03 (* lw s6,16(sp)  *)
    | 0x1094 => 0x02412483 (* lw s1,36(sp)  *)
    | 0x1098 => 0x02012903 (* lw s2,32(sp)  *)
    | 0x109c => 0x01c12983 (* lw s3,28(sp)  *)
    | 0x10a0 => 0x03010113 (* addi sp,sp,48  *)
    | 0x10a4 => 0x00008067 (* ret  *)
    | 0x10a8 => 0x00842603 (* lw a2,8(s0)  *)
    | 0x10ac => 0x00f407b3 (* add a5,s0,a5  *)
    | 0x10b0 => 0x0047a703 (* lw a4,4(a5) # fffff004 <__crt0_ram_last+0x7fffd005>  *)
    | 0x10b4 => 0x00d62623 (* sw a3,12(a2)  *)
    | 0x10b8 => 0x00c6a423 (* sw a2,8(a3)  *)
    | 0x10bc => 0x00176713 (* ori a4,a4,1  *)
    | 0x10c0 => 0x00090513 (* mv a0,s2  *)
    | 0x10c4 => 0x00e7a223 (* sw a4,4(a5)  *)
    | 0x10c8 => 0x3a0000ef (* jal 1468 <__malloc_unlock>  *)
    | 0x10cc => 0x02c12083 (* lw ra,44(sp)  *)
    | 0x10d0 => 0x00840513 (* addi a0,s0,8  *)
    | 0x10d4 => 0x02812403 (* lw s0,40(sp)  *)
    | 0x10d8 => 0x02412483 (* lw s1,36(sp)  *)
    | 0x10dc => 0x02012903 (* lw s2,32(sp)  *)
    | 0x10e0 => 0x01c12983 (* lw s3,28(sp)  *)
    | 0x10e4 => 0x03010113 (* addi sp,sp,48  *)
    | 0x10e8 => 0x00008067 (* ret  *)
    | 0x10ec => 0x00c7a403 (* lw s0,12(a5)  *)
    | 0x10f0 => 0x00258593 (* addi a1,a1,2  *)
    | 0x10f4 => 0xc4878ee3 (* beq a5,s0,d50 <_malloc_r+0x120>  *)
    | 0x10f8 => 0xb8dff06f (* j c84 <_malloc_r+0x54>  *)
    | 0x10fc => 0x0097d713 (* srli a4,a5,0x9  *)
    | 0x1100 => 0x00400693 (* li a3,4  *)
    | 0x1104 => 0x14e6f263 (* bgeu a3,a4,1248 <__neorv32_heap_size+0x248>  *)
    | 0x1108 => 0x01400693 (* li a3,20  *)
    | 0x110c => 0x24e6e263 (* bltu a3,a4,1350 <__neorv32_heap_size+0x350>  *)
    | 0x1110 => 0x05c70613 (* addi a2,a4,92  *)
    | 0x1114 => 0x00361613 (* slli a2,a2,0x3  *)
    | 0x1118 => 0x05b70693 (* addi a3,a4,91  *)
    | 0x111c => 0x00c98633 (* add a2,s3,a2  *)
    | 0x1120 => 0x00062703 (* lw a4,0(a2)  *)
    | 0x1124 => 0xff860613 (* addi a2,a2,-8  *)
    | 0x1128 => 0x00e61863 (* bne a2,a4,1138 <__neorv32_heap_size+0x138>  *)
    | 0x112c => 0x1b40006f (* j 12e0 <__neorv32_heap_size+0x2e0>  *)
    | 0x1130 => 0x00872703 (* lw a4,8(a4)  *)
    | 0x1134 => 0x00e60863 (* beq a2,a4,1144 <__neorv32_heap_size+0x144>  *)
    | 0x1138 => 0x00472683 (* lw a3,4(a4)  *)
    | 0x113c => 0xffc6f693 (* andi a3,a3,-4  *)
    | 0x1140 => 0xfed7e8e3 (* bltu a5,a3,1130 <__neorv32_heap_size+0x130>  *)
    | 0x1144 => 0x00c72603 (* lw a2,12(a4)  *)
    | 0x1148 => 0x00c42623 (* sw a2,12(s0)  *)
    | 0x114c => 0x00e42423 (* sw a4,8(s0)  *)
    | 0x1150 => 0x00862423 (* sw s0,8(a2)  *)
    | 0x1154 => 0x00872623 (* sw s0,12(a4)  *)
    | 0x1158 => 0xc6dff06f (* j dc4 <_malloc_r+0x194>  *)
    | 0x115c => 0x01400713 (* li a4,20  *)
    | 0x1160 => 0x0ef77e63 (* bgeu a4,a5,125c <__neorv32_heap_size+0x25c>  *)
    | 0x1164 => 0x05400713 (* li a4,84  *)
    | 0x1168 => 0x20f76263 (* bltu a4,a5,136c <__neorv32_heap_size+0x36c>  *)
    | 0x116c => 0x00c4d793 (* srli a5,s1,0xc  *)
    | 0x1170 => 0x06f78593 (* addi a1,a5,111  *)
    | 0x1174 => 0x06e78813 (* addi a6,a5,110  *)
    | 0x1178 => 0x00359613 (* slli a2,a1,0x3  *)
    | 0x117c => 0xb91ff06f (* j d0c <_malloc_r+0xdc>  *)
    | 0x1180 => 0x001e0e13 (* addi t3,t3,1  *)
    | 0x1184 => 0x003e7793 (* andi a5,t3,3  *)
    | 0x1188 => 0x00850513 (* addi a0,a0,8  *)
    | 0x118c => 0x0e078663 (* beqz a5,1278 <__neorv32_heap_size+0x278>  *)
    | 0x1190 => 0x00c52783 (* lw a5,12(a0)  *)
    | 0x1194 => 0xc85ff06f (* j e18 <_malloc_r+0x1e8>  *)
    | 0x1198 => 0x00842603 (* lw a2,8(s0)  *)
    | 0x119c => 0x0014e593 (* ori a1,s1,1  *)
    | 0x11a0 => 0x00b42223 (* sw a1,4(s0)  *)
    | 0x11a4 => 0x00f62623 (* sw a5,12(a2)  *)
    | 0x11a8 => 0x00c7a423 (* sw a2,8(a5)  *)
    | 0x11ac => 0x009404b3 (* add s1,s0,s1  *)
    | 0x11b0 => 0x0099aa23 (* sw s1,20(s3)  *)
    | 0x11b4 => 0x0099a823 (* sw s1,16(s3)  *)
    | 0x11b8 => 0x0016e793 (* ori a5,a3,1  *)
    | 0x11bc => 0x00e40733 (* add a4,s0,a4  *)
    | 0x11c0 => 0x0114a623 (* sw a7,12(s1)  *)
    | 0x11c4 => 0x0114a423 (* sw a7,8(s1)  *)
    | 0x11c8 => 0x00f4a223 (* sw a5,4(s1)  *)
    | 0x11cc => 0x00090513 (* mv a0,s2  *)
    | 0x11d0 => 0x00d72023 (* sw a3,0(a4)  *)
    | 0x11d4 => 0x294000ef (* jal 1468 <__malloc_unlock>  *)
    | 0x11d8 => 0x00840513 (* addi a0,s0,8  *)
    | 0x11dc => 0xc95ff06f (* j e70 <_malloc_r+0x240>  *)
    | 0x11e0 => 0x00f407b3 (* add a5,s0,a5  *)
    | 0x11e4 => 0x0047a703 (* lw a4,4(a5)  *)
    | 0x11e8 => 0x00090513 (* mv a0,s2  *)
    | 0x11ec => 0x00176713 (* ori a4,a4,1  *)
    | 0x11f0 => 0x00e7a223 (* sw a4,4(a5)  *)
    | 0x11f4 => 0x274000ef (* jal 1468 <__malloc_unlock>  *)
    | 0x11f8 => 0x00840513 (* addi a0,s0,8  *)
    | 0x11fc => 0xc75ff06f (* j e70 <_malloc_r+0x240>  *)
    | 0x1200 => 0x0034d593 (* srli a1,s1,0x3  *)
    | 0x1204 => 0x00848793 (* addi a5,s1,8  *)
    | 0x1208 => 0xa65ff06f (* j c6c <_malloc_r+0x3c>  *)
    | 0x120c => 0x0014e693 (* ori a3,s1,1  *)
    | 0x1210 => 0x00d42223 (* sw a3,4(s0)  *)
    | 0x1214 => 0x009404b3 (* add s1,s0,s1  *)
    | 0x1218 => 0x0099aa23 (* sw s1,20(s3)  *)
    | 0x121c => 0x0099a823 (* sw s1,16(s3)  *)
    | 0x1220 => 0x00176693 (* ori a3,a4,1  *)
    | 0x1224 => 0x00f407b3 (* add a5,s0,a5  *)
    | 0x1228 => 0x0114a623 (* sw a7,12(s1)  *)
    | 0x122c => 0x0114a423 (* sw a7,8(s1)  *)
    | 0x1230 => 0x00d4a223 (* sw a3,4(s1)  *)
    | 0x1234 => 0x00090513 (* mv a0,s2  *)
    | 0x1238 => 0x00e7a023 (* sw a4,0(a5)  *)
    | 0x123c => 0x22c000ef (* jal 1468 <__malloc_unlock>  *)
    | 0x1240 => 0x00840513 (* addi a0,s0,8  *)
    | 0x1244 => 0xc2dff06f (* j e70 <_malloc_r+0x240>  *)
    | 0x1248 => 0x0067d713 (* srli a4,a5,0x6  *)
    | 0x124c => 0x03970613 (* addi a2,a4,57  *)
    | 0x1250 => 0x00361613 (* slli a2,a2,0x3  *)
    | 0x1254 => 0x03870693 (* addi a3,a4,56  *)
    | 0x1258 => 0xec5ff06f (* j 111c <__neorv32_heap_size+0x11c>  *)
    | 0x125c => 0x05c78593 (* addi a1,a5,92  *)
    | 0x1260 => 0x05b78813 (* addi a6,a5,91  *)
    | 0x1264 => 0x00359613 (* slli a2,a1,0x3  *)
    | 0x1268 => 0xaa5ff06f (* j d0c <_malloc_r+0xdc>  *)
    | 0x126c => 0x00832783 (* lw a5,8(t1)  *)
    | 0x1270 => 0xfff58593 (* addi a1,a1,-1  *)
    | 0x1274 => 0x1e679063 (* bne a5,t1,1454 <__neorv32_heap_size+0x454>  *)
    | 0x1278 => 0x0035f793 (* andi a5,a1,3  *)
    | 0x127c => 0xff830313 (* addi t1,t1,-8  *)
    | 0x1280 => 0xfe0796e3 (* bnez a5,126c <__neorv32_heap_size+0x26c>  *)
    | 0x1284 => 0x0049a703 (* lw a4,4(s3)  *)
    | 0x1288 => 0xfff64793 (* not a5,a2  *)
    | 0x128c => 0x00e7f7b3 (* and a5,a5,a4  *)
    | 0x1290 => 0x00f9a223 (* sw a5,4(s3)  *)
    | 0x1294 => 0x00161613 (* slli a2,a2,0x1  *)
    | 0x1298 => 0xc0c7e2e3 (* bltu a5,a2,e9c <_malloc_r+0x26c>  *)
    | 0x129c => 0xc00600e3 (* beqz a2,e9c <_malloc_r+0x26c>  *)
    | 0x12a0 => 0x00f67733 (* and a4,a2,a5  *)
    | 0x12a4 => 0x00071a63 (* bnez a4,12b8 <__neorv32_heap_size+0x2b8>  *)
    | 0x12a8 => 0x00161613 (* slli a2,a2,0x1  *)
    | 0x12ac => 0x00f67733 (* and a4,a2,a5  *)
    | 0x12b0 => 0x004e0e13 (* addi t3,t3,4  *)
    | 0x12b4 => 0xfe070ae3 (* beqz a4,12a8 <__neorv32_heap_size+0x2a8>  *)
    | 0x12b8 => 0x000e0593 (* mv a1,t3  *)
    | 0x12bc => 0xb49ff06f (* j e04 <_malloc_r+0x1d4>  *)
    | 0x12c0 => 0x00840593 (* addi a1,s0,8  *)
    | 0x12c4 => 0x00090513 (* mv a0,s2  *)
    | 0x12c8 => 0x65c000ef (* jal 1924 <_free_r>  *)
    | 0x12cc => 0x000c2583 (* lw a1,0(s8)  *)
    | 0x12d0 => 0x0089ab83 (* lw s7,8(s3)  *)
    | 0x12d4 => 0xd1dff06f (* j ff0 <_malloc_r+0x3c0>  *)
    | 0x12d8 => 0x010a8a93 (* addi s5,s5,16  *)
    | 0x12dc => 0xc29ff06f (* j f04 <_malloc_r+0x2d4>  *)
    | 0x12e0 => 0x4026d693 (* srai a3,a3,0x2  *)
    | 0x12e4 => 0x00100793 (* li a5,1  *)
    | 0x12e8 => 0x00d797b3 (* sll a5,a5,a3  *)
    | 0x12ec => 0x00f56533 (* or a0,a0,a5  *)
    | 0x12f0 => 0x00a9a223 (* sw a0,4(s3)  *)
    | 0x12f4 => 0xe55ff06f (* j 1148 <__neorv32_heap_size+0x148>  *)
    | 0x12f8 => 0x015b85b3 (* add a1,s7,s5  *)
    | 0x12fc => 0x40b005b3 (* neg a1,a1  *)
    | 0x1300 => 0x01459593 (* slli a1,a1,0x14  *)
    | 0x1304 => 0x0145da13 (* srli s4,a1,0x14  *)
    | 0x1308 => 0x000a0593 (* mv a1,s4  *)
    | 0x130c => 0x00090513 (* mv a0,s2  *)
    | 0x1310 => 0x328000ef (* jal 1638 <_sbrk_r>  *)
    | 0x1314 => 0xfff00793 (* li a5,-1  *)
    | 0x1318 => 0xc8f510e3 (* bne a0,a5,f98 <_malloc_r+0x368>  *)
    | 0x131c => 0x00000a13 (* li s4,0  *)
    | 0x1320 => 0xc81ff06f (* j fa0 <_malloc_r+0x370>  *)
    | 0x1324 => 0x00812c03 (* lw s8,8(sp)  *)
    | 0x1328 => 0x00100793 (* li a5,1  *)
    | 0x132c => 0x00fba223 (* sw a5,4(s7)  *)
    | 0x1330 => 0x00090513 (* mv a0,s2  *)
    | 0x1334 => 0x134000ef (* jal 1468 <__malloc_unlock>  *)
    | 0x1338 => 0x01812a03 (* lw s4,24(sp)  *)
    | 0x133c => 0x01412a83 (* lw s5,20(sp)  *)
    | 0x1340 => 0x01012b03 (* lw s6,16(sp)  *)
    | 0x1344 => 0x00c12b83 (* lw s7,12(sp)  *)
    | 0x1348 => 0x00412c83 (* lw s9,4(sp)  *)
    | 0x134c => 0xb21ff06f (* j e6c <_malloc_r+0x23c>  *)
    | 0x1350 => 0x05400693 (* li a3,84  *)
    | 0x1354 => 0x06e6ee63 (* bltu a3,a4,13d0 <__neorv32_heap_size+0x3d0>  *)
    | 0x1358 => 0x00c7d713 (* srli a4,a5,0xc  *)
    | 0x135c => 0x06f70613 (* addi a2,a4,111  *)
    | 0x1360 => 0x00361613 (* slli a2,a2,0x3  *)
    | 0x1364 => 0x06e70693 (* addi a3,a4,110  *)
    | 0x1368 => 0xdb5ff06f (* j 111c <__neorv32_heap_size+0x11c>  *)
    | 0x136c => 0x15400713 (* li a4,340  *)
    | 0x1370 => 0x06f76e63 (* bltu a4,a5,13ec <__neorv32_heap_size+0x3ec>  *)
    | 0x1374 => 0x00f4d793 (* srli a5,s1,0xf  *)
    | 0x1378 => 0x07878593 (* addi a1,a5,120  *)
    | 0x137c => 0x07778813 (* addi a6,a5,119  *)
    | 0x1380 => 0x00359613 (* slli a2,a1,0x3  *)
    | 0x1384 => 0x989ff06f (* j d0c <_malloc_r+0xdc>  *)
    | 0x1388 => 0x7ffffc17 (* auipc s8,0x7ffff  *)
    | 0x138c => 0x2ccc0c13 (* addi s8,s8,716 # 80000654 <__malloc_current_mallinfo>  *)
    | 0x1390 => 0x000c2703 (* lw a4,0(s8)  *)
    | 0x1394 => 0x00ea8733 (* add a4,s5,a4  *)
    | 0x1398 => 0x00ec2023 (* sw a4,0(s8)  *)
    | 0x139c => 0xba5ff06f (* j f40 <_malloc_r+0x310>  *)
    | 0x13a0 => 0x0089a403 (* lw s0,8(s3)  *)
    | 0x13a4 => 0x00442783 (* lw a5,4(s0)  *)
    | 0x13a8 => 0xc99ff06f (* j 1040 <__neorv32_heap_size+0x40>  *)
    | 0x13ac => 0x01451793 (* slli a5,a0,0x14  *)
    | 0x13b0 => 0xb80798e3 (* bnez a5,f40 <_malloc_r+0x310>  *)
    | 0x13b4 => 0x0089ab83 (* lw s7,8(s3)  *)
    | 0x13b8 => 0x015b07b3 (* add a5,s6,s5  *)
    | 0x13bc => 0x0017e793 (* ori a5,a5,1  *)
    | 0x13c0 => 0x00fba223 (* sw a5,4(s7)  *)
    | 0x13c4 => 0xc31ff06f (* j ff4 <_malloc_r+0x3c4>  *)
    | 0x13c8 => 0x017ca023 (* sw s7,0(s9)  *)
    | 0x13cc => 0xb8dff06f (* j f58 <_malloc_r+0x328>  *)
    | 0x13d0 => 0x15400693 (* li a3,340  *)
    | 0x13d4 => 0x04e6e463 (* bltu a3,a4,141c <__neorv32_heap_size+0x41c>  *)
    | 0x13d8 => 0x00f7d713 (* srli a4,a5,0xf  *)
    | 0x13dc => 0x07870613 (* addi a2,a4,120  *)
    | 0x13e0 => 0x00361613 (* slli a2,a2,0x3  *)
    | 0x13e4 => 0x07770693 (* addi a3,a4,119  *)
    | 0x13e8 => 0xd35ff06f (* j 111c <__neorv32_heap_size+0x11c>  *)
    | 0x13ec => 0x55400713 (* li a4,1364  *)
    | 0x13f0 => 0x04f76463 (* bltu a4,a5,1438 <__neorv32_heap_size+0x438>  *)
    | 0x13f4 => 0x0124d793 (* srli a5,s1,0x12  *)
    | 0x13f8 => 0x07d78593 (* addi a1,a5,125  *)
    | 0x13fc => 0x07c78813 (* addi a6,a5,124  *)
    | 0x1400 => 0x00359613 (* slli a2,a1,0x3  *)
    | 0x1404 => 0x909ff06f (* j d0c <_malloc_r+0xdc>  *)
    | 0x1408 => 0xff8c8c93 (* addi s9,s9,-8  *)
    | 0x140c => 0x019a8ab3 (* add s5,s5,s9  *)
    | 0x1410 => 0x417a8ab3 (* sub s5,s5,s7  *)
    | 0x1414 => 0x00000a13 (* li s4,0  *)
    | 0x1418 => 0xb89ff06f (* j fa0 <_malloc_r+0x370>  *)
    | 0x141c => 0x55400693 (* li a3,1364  *)
    | 0x1420 => 0x02e6e463 (* bltu a3,a4,1448 <__neorv32_heap_size+0x448>  *)
    | 0x1424 => 0x0127d713 (* srli a4,a5,0x12  *)
    | 0x1428 => 0x07d70613 (* addi a2,a4,125  *)
    | 0x142c => 0x00361613 (* slli a2,a2,0x3  *)
    | 0x1430 => 0x07c70693 (* addi a3,a4,124  *)
    | 0x1434 => 0xce9ff06f (* j 111c <__neorv32_heap_size+0x11c>  *)
    | 0x1438 => 0x3f800613 (* li a2,1016  *)
    | 0x143c => 0x07f00593 (* li a1,127  *)
    | 0x1440 => 0x07e00813 (* li a6,126  *)
    | 0x1444 => 0x8c9ff06f (* j d0c <_malloc_r+0xdc>  *)
    | 0x1448 => 0x3f800613 (* li a2,1016  *)
    | 0x144c => 0x07e00693 (* li a3,126  *)
    | 0x1450 => 0xccdff06f (* j 111c <__neorv32_heap_size+0x11c>  *)
    | 0x1454 => 0x0049a783 (* lw a5,4(s3)  *)
    | 0x1458 => 0xe3dff06f (* j 1294 <__neorv32_heap_size+0x294>  *)
    (* <__malloc_lock> *)
    | 0x145c => 0x7ffff517 (* auipc a0,0x7ffff  *)
    | 0x1460 => 0x0f450513 (* addi a0,a0,244 # 80000550 <__lock___malloc_recursive_mutex>  *)
    | 0x1464 => 0x24c0006f (* j 16b0 <__retarget_lock_acquire_recursive>  *)
    (* <__malloc_unlock> *)
    | 0x1468 => 0x7ffff517 (* auipc a0,0x7ffff  *)
    | 0x146c => 0x0e850513 (* addi a0,a0,232 # 80000550 <__lock___malloc_recursive_mutex>  *)
    | 0x1470 => 0x2440006f (* j 16b4 <__retarget_lock_release_recursive>  *)
    (* <srand> *)
    | 0x1474 => 0x7ffff797 (* auipc a5,0x7ffff  *)
    | 0x1478 => 0x0c47a783 (* lw a5,196(a5) # 80000538 <_impure_ptr>  *)
    | 0x147c => 0x08a7ac23 (* sw a0,152(a5)  *)
    | 0x1480 => 0x0807ae23 (* sw zero,156(a5)  *)
    | 0x1484 => 0x00008067 (* ret  *)
    (* <rand> *)
    | 0x1488 => 0xff010113 (* addi sp,sp,-16  *)
    | 0x148c => 0x00812423 (* sw s0,8(sp)  *)
    | 0x1490 => 0x7ffff417 (* auipc s0,0x7ffff  *)
    | 0x1494 => 0x0a842403 (* lw s0,168(s0) # 80000538 <_impure_ptr>  *)
    | 0x1498 => 0x7ffff797 (* auipc a5,0x7ffff  *)
    | 0x149c => 0x09078793 (* addi a5,a5,144 # 80000528 <_impure_data+0x120>  *)
    | 0x14a0 => 0x0007a603 (* lw a2,0(a5)  *)
    | 0x14a4 => 0x09842503 (* lw a0,152(s0)  *)
    | 0x14a8 => 0x09c42583 (* lw a1,156(s0)  *)
    | 0x14ac => 0x0047a683 (* lw a3,4(a5)  *)
    | 0x14b0 => 0x00112623 (* sw ra,12(sp)  *)
    | 0x14b4 => 0x78c000ef (* jal 1c40 <__muldi3>  *)
    | 0x14b8 => 0x00150793 (* addi a5,a0,1  *)
    | 0x14bc => 0x00a7b533 (* sltu a0,a5,a0  *)
    | 0x14c0 => 0x00b505b3 (* add a1,a0,a1  *)
    | 0x14c4 => 0x00c12083 (* lw ra,12(sp)  *)
    | 0x14c8 => 0x08b42e23 (* sw a1,156(s0)  *)
    | 0x14cc => 0x08f42c23 (* sw a5,152(s0)  *)
    | 0x14d0 => 0x00812403 (* lw s0,8(sp)  *)
    | 0x14d4 => 0x00159513 (* slli a0,a1,0x1  *)
    | 0x14d8 => 0x00155513 (* srli a0,a0,0x1  *)
    | 0x14dc => 0x01010113 (* addi sp,sp,16  *)
    | 0x14e0 => 0x00008067 (* ret  *)
    (* <__utoa> *)
    | 0x14e4 => 0x00001797 (* auipc a5,0x1  *)
    | 0x14e8 => 0xb0c78793 (* addi a5,a5,-1268 # 1ff0 <__fini_array_end+0x264>  *)
    | 0x14ec => 0x0007a283 (* lw t0,0(a5)  *)
    | 0x14f0 => 0x0047af83 (* lw t6,4(a5)  *)
    | 0x14f4 => 0x0087af03 (* lw t5,8(a5)  *)
    | 0x14f8 => 0x00c7ae83 (* lw t4,12(a5)  *)
    | 0x14fc => 0x0107ae03 (* lw t3,16(a5)  *)
    | 0x1500 => 0x0147a303 (* lw t1,20(a5)  *)
    | 0x1504 => 0x0187a883 (* lw a7,24(a5)  *)
    | 0x1508 => 0x01c7a803 (* lw a6,28(a5)  *)
    | 0x150c => 0x0207a683 (* lw a3,32(a5)  *)
    | 0x1510 => 0x00001797 (* auipc a5,0x1  *)
    | 0x1514 => 0xb047c783 (* lbu a5,-1276(a5) # 2014 <__neorv32_ram_size+0x14>  *)
    | 0x1518 => 0xfb010113 (* addi sp,sp,-80  *)
    | 0x151c => 0x03512a23 (* sw s5,52(sp)  *)
    | 0x1520 => 0x02f10623 (* sb a5,44(sp)  *)
    | 0x1524 => 0x04112623 (* sw ra,76(sp)  *)
    | 0x1528 => 0xffe60713 (* addi a4,a2,-2  *)
    | 0x152c => 0x00512423 (* sw t0,8(sp)  *)
    | 0x1530 => 0x01f12623 (* sw t6,12(sp)  *)
    | 0x1534 => 0x01e12823 (* sw t5,16(sp)  *)
    | 0x1538 => 0x01d12a23 (* sw t4,20(sp)  *)
    | 0x153c => 0x01c12c23 (* sw t3,24(sp)  *)
    | 0x1540 => 0x00612e23 (* sw t1,28(sp)  *)
    | 0x1544 => 0x03112023 (* sw a7,32(sp)  *)
    | 0x1548 => 0x03012223 (* sw a6,36(sp)  *)
    | 0x154c => 0x02d12423 (* sw a3,40(sp)  *)
    | 0x1550 => 0x02200793 (* li a5,34  *)
    | 0x1554 => 0x00058a93 (* mv s5,a1  *)
    | 0x1558 => 0x0ce7e463 (* bltu a5,a4,1620 <__utoa+0x13c>  *)
    | 0x155c => 0x04812423 (* sw s0,72(sp)  *)
    | 0x1560 => 0x04912223 (* sw s1,68(sp)  *)
    | 0x1564 => 0x05212023 (* sw s2,64(sp)  *)
    | 0x1568 => 0x03312e23 (* sw s3,60(sp)  *)
    | 0x156c => 0x03412c23 (* sw s4,56(sp)  *)
    | 0x1570 => 0x03612823 (* sw s6,48(sp)  *)
    | 0x1574 => 0x00060493 (* mv s1,a2  *)
    | 0x1578 => 0x00050413 (* mv s0,a0  *)
    | 0x157c => 0x00000913 (* li s2,0  *)
    | 0x1580 => 0x00048593 (* mv a1,s1  *)
    | 0x1584 => 0x00040513 (* mv a0,s0  *)
    | 0x1588 => 0x7a0000ef (* jal 1d28 <__umodsi3>  *)
    | 0x158c => 0x00250533 (* add a0,a0,sp  *)
    | 0x1590 => 0x00854783 (* lbu a5,8(a0)  *)
    | 0x1594 => 0x00090993 (* mv s3,s2  *)
    | 0x1598 => 0x00190913 (* addi s2,s2,1  *)
    | 0x159c => 0x012a8a33 (* add s4,s5,s2  *)
    | 0x15a0 => 0x00040513 (* mv a0,s0  *)
    | 0x15a4 => 0x00048593 (* mv a1,s1  *)
    | 0x15a8 => 0xfefa0fa3 (* sb a5,-1(s4)  *)
    | 0x15ac => 0x00040b13 (* mv s6,s0  *)
    | 0x15b0 => 0x730000ef (* jal 1ce0 <__hidden___udivsi3>  *)
    | 0x15b4 => 0x00050413 (* mv s0,a0  *)
    | 0x15b8 => 0xfc9b74e3 (* bgeu s6,s1,1580 <__utoa+0x9c>  *)
    | 0x15bc => 0x000a0023 (* sb zero,0(s4)  *)
    | 0x15c0 => 0x02098a63 (* beqz s3,15f4 <__utoa+0x110>  *)
    | 0x15c4 => 0x000a8693 (* mv a3,s5  *)
    | 0x15c8 => 0x013a8733 (* add a4,s5,s3  *)
    | 0x15cc => 0x00000793 (* li a5,0  *)
    | 0x15d0 => 0x00074583 (* lbu a1,0(a4)  *)
    | 0x15d4 => 0x0006c603 (* lbu a2,0(a3)  *)
    | 0x15d8 => 0x00178793 (* addi a5,a5,1  *)
    | 0x15dc => 0x00b68023 (* sb a1,0(a3)  *)
    | 0x15e0 => 0x00c70023 (* sb a2,0(a4)  *)
    | 0x15e4 => 0x40f98633 (* sub a2,s3,a5  *)
    | 0x15e8 => 0x00168693 (* addi a3,a3,1  *)
    | 0x15ec => 0xfff70713 (* addi a4,a4,-1  *)
    | 0x15f0 => 0xfec7c0e3 (* blt a5,a2,15d0 <__utoa+0xec>  *)
    | 0x15f4 => 0x04812403 (* lw s0,72(sp)  *)
    | 0x15f8 => 0x04c12083 (* lw ra,76(sp)  *)
    | 0x15fc => 0x04412483 (* lw s1,68(sp)  *)
    | 0x1600 => 0x04012903 (* lw s2,64(sp)  *)
    | 0x1604 => 0x03c12983 (* lw s3,60(sp)  *)
    | 0x1608 => 0x03812a03 (* lw s4,56(sp)  *)
    | 0x160c => 0x03012b03 (* lw s6,48(sp)  *)
    | 0x1610 => 0x000a8513 (* mv a0,s5  *)
    | 0x1614 => 0x03412a83 (* lw s5,52(sp)  *)
    | 0x1618 => 0x05010113 (* addi sp,sp,80  *)
    | 0x161c => 0x00008067 (* ret  *)
    | 0x1620 => 0x00058023 (* sb zero,0(a1)  *)
    | 0x1624 => 0x04c12083 (* lw ra,76(sp)  *)
    | 0x1628 => 0x03412a83 (* lw s5,52(sp)  *)
    | 0x162c => 0x00000513 (* li a0,0  *)
    | 0x1630 => 0x05010113 (* addi sp,sp,80  *)
    | 0x1634 => 0x00008067 (* ret  *)
    (* <_sbrk_r> *)
    | 0x1638 => 0xff010113 (* addi sp,sp,-16  *)
    | 0x163c => 0x00812423 (* sw s0,8(sp)  *)
    | 0x1640 => 0x00050413 (* mv s0,a0  *)
    | 0x1644 => 0x00058513 (* mv a0,a1  *)
    | 0x1648 => 0x7ffff797 (* auipc a5,0x7ffff  *)
    | 0x164c => 0xf007a223 (* sw zero,-252(a5) # 8000054c <errno>  *)
    | 0x1650 => 0x00112623 (* sw ra,12(sp)  *)
    | 0x1654 => 0xec9fe0ef (* jal 51c <_sbrk>  *)
    | 0x1658 => 0xfff00793 (* li a5,-1  *)
    | 0x165c => 0x00f50a63 (* beq a0,a5,1670 <_sbrk_r+0x38>  *)
    | 0x1660 => 0x00c12083 (* lw ra,12(sp)  *)
    | 0x1664 => 0x00812403 (* lw s0,8(sp)  *)
    | 0x1668 => 0x01010113 (* addi sp,sp,16  *)
    | 0x166c => 0x00008067 (* ret  *)
    | 0x1670 => 0x00912223 (* sw s1,4(sp)  *)
    | 0x1674 => 0x7ffff497 (* auipc s1,0x7ffff  *)
    | 0x1678 => 0xed848493 (* addi s1,s1,-296 # 8000054c <errno>  *)
    | 0x167c => 0x0004a783 (* lw a5,0(s1)  *)
    | 0x1680 => 0x00078e63 (* beqz a5,169c <_sbrk_r+0x64>  *)
    | 0x1684 => 0x00c12083 (* lw ra,12(sp)  *)
    | 0x1688 => 0x00f42023 (* sw a5,0(s0)  *)
    | 0x168c => 0x00812403 (* lw s0,8(sp)  *)
    | 0x1690 => 0x00412483 (* lw s1,4(sp)  *)
    | 0x1694 => 0x01010113 (* addi sp,sp,16  *)
    | 0x1698 => 0x00008067 (* ret  *)
    | 0x169c => 0x00c12083 (* lw ra,12(sp)  *)
    | 0x16a0 => 0x00812403 (* lw s0,8(sp)  *)
    | 0x16a4 => 0x00412483 (* lw s1,4(sp)  *)
    | 0x16a8 => 0x01010113 (* addi sp,sp,16  *)
    | 0x16ac => 0x00008067 (* ret  *)
    (* <__retarget_lock_acquire_recursive> *)
    | 0x16b0 => 0x00008067 (* ret  *)
    (* <__retarget_lock_release_recursive> *)
    | 0x16b4 => 0x00008067 (* ret  *)
    (* <memcpy> *)
    | 0x16b8 => 0x00a5c7b3 (* xor a5,a1,a0  *)
    | 0x16bc => 0x0037f793 (* andi a5,a5,3  *)
    | 0x16c0 => 0x00c508b3 (* add a7,a0,a2  *)
    | 0x16c4 => 0x06079663 (* bnez a5,1730 <memcpy+0x78>  *)
    | 0x16c8 => 0x00300793 (* li a5,3  *)
    | 0x16cc => 0x06c7f263 (* bgeu a5,a2,1730 <memcpy+0x78>  *)
    | 0x16d0 => 0x00357793 (* andi a5,a0,3  *)
    | 0x16d4 => 0x00050713 (* mv a4,a0  *)
    | 0x16d8 => 0x0c079a63 (* bnez a5,17ac <memcpy+0xf4>  *)
    | 0x16dc => 0xffc8f613 (* andi a2,a7,-4  *)
    | 0x16e0 => 0x40e606b3 (* sub a3,a2,a4  *)
    | 0x16e4 => 0x02000793 (* li a5,32  *)
    | 0x16e8 => 0x06d7c463 (* blt a5,a3,1750 <memcpy+0x98>  *)
    | 0x16ec => 0x00058693 (* mv a3,a1  *)
    | 0x16f0 => 0x00070793 (* mv a5,a4  *)
    | 0x16f4 => 0x02c77a63 (* bgeu a4,a2,1728 <memcpy+0x70>  *)
    | 0x16f8 => 0x0006a803 (* lw a6,0(a3)  *)
    | 0x16fc => 0x00478793 (* addi a5,a5,4  *)
    | 0x1700 => 0x00468693 (* addi a3,a3,4  *)
    | 0x1704 => 0xff07ae23 (* sw a6,-4(a5)  *)
    | 0x1708 => 0xfec7e8e3 (* bltu a5,a2,16f8 <memcpy+0x40>  *)
    | 0x170c => 0xfff60613 (* addi a2,a2,-1  *)
    | 0x1710 => 0x40e60633 (* sub a2,a2,a4  *)
    | 0x1714 => 0xffc67613 (* andi a2,a2,-4  *)
    | 0x1718 => 0x00458593 (* addi a1,a1,4  *)
    | 0x171c => 0x00470713 (* addi a4,a4,4  *)
    | 0x1720 => 0x00c585b3 (* add a1,a1,a2  *)
    | 0x1724 => 0x00c70733 (* add a4,a4,a2  *)
    | 0x1728 => 0x01176863 (* bltu a4,a7,1738 <memcpy+0x80>  *)
    | 0x172c => 0x00008067 (* ret  *)
    | 0x1730 => 0x00050713 (* mv a4,a0  *)
    | 0x1734 => 0xff157ce3 (* bgeu a0,a7,172c <memcpy+0x74>  *)
    | 0x1738 => 0x0005c783 (* lbu a5,0(a1)  *)
    | 0x173c => 0x00170713 (* addi a4,a4,1  *)
    | 0x1740 => 0x00158593 (* addi a1,a1,1  *)
    | 0x1744 => 0xfef70fa3 (* sb a5,-1(a4)  *)
    | 0x1748 => 0xfee898e3 (* bne a7,a4,1738 <memcpy+0x80>  *)
    | 0x174c => 0x00008067 (* ret  *)
    | 0x1750 => 0x0205a683 (* lw a3,32(a1)  *)
    | 0x1754 => 0x0005a383 (* lw t2,0(a1)  *)
    | 0x1758 => 0x0045a283 (* lw t0,4(a1)  *)
    | 0x175c => 0x0085af83 (* lw t6,8(a1)  *)
    | 0x1760 => 0x00c5af03 (* lw t5,12(a1)  *)
    | 0x1764 => 0x0105ae83 (* lw t4,16(a1)  *)
    | 0x1768 => 0x0145ae03 (* lw t3,20(a1)  *)
    | 0x176c => 0x0185a303 (* lw t1,24(a1)  *)
    | 0x1770 => 0x01c5a803 (* lw a6,28(a1)  *)
    | 0x1774 => 0x02470713 (* addi a4,a4,36  *)
    | 0x1778 => 0xfed72e23 (* sw a3,-4(a4)  *)
    | 0x177c => 0xfc772e23 (* sw t2,-36(a4)  *)
    | 0x1780 => 0x40e606b3 (* sub a3,a2,a4  *)
    | 0x1784 => 0xfe572023 (* sw t0,-32(a4)  *)
    | 0x1788 => 0xfff72223 (* sw t6,-28(a4)  *)
    | 0x178c => 0xffe72423 (* sw t5,-24(a4)  *)
    | 0x1790 => 0xffd72623 (* sw t4,-20(a4)  *)
    | 0x1794 => 0xffc72823 (* sw t3,-16(a4)  *)
    | 0x1798 => 0xfe672a23 (* sw t1,-12(a4)  *)
    | 0x179c => 0xff072c23 (* sw a6,-8(a4)  *)
    | 0x17a0 => 0x02458593 (* addi a1,a1,36  *)
    | 0x17a4 => 0xfad7c6e3 (* blt a5,a3,1750 <memcpy+0x98>  *)
    | 0x17a8 => 0xf45ff06f (* j 16ec <memcpy+0x34>  *)
    | 0x17ac => 0x0005c683 (* lbu a3,0(a1)  *)
    | 0x17b0 => 0x00170713 (* addi a4,a4,1  *)
    | 0x17b4 => 0x00377793 (* andi a5,a4,3  *)
    | 0x17b8 => 0xfed70fa3 (* sb a3,-1(a4)  *)
    | 0x17bc => 0x00158593 (* addi a1,a1,1  *)
    | 0x17c0 => 0xf0078ee3 (* beqz a5,16dc <memcpy+0x24>  *)
    | 0x17c4 => 0x0005c683 (* lbu a3,0(a1)  *)
    | 0x17c8 => 0x00170713 (* addi a4,a4,1  *)
    | 0x17cc => 0x00377793 (* andi a5,a4,3  *)
    | 0x17d0 => 0xfed70fa3 (* sb a3,-1(a4)  *)
    | 0x17d4 => 0x00158593 (* addi a1,a1,1  *)
    | 0x17d8 => 0xfc079ae3 (* bnez a5,17ac <memcpy+0xf4>  *)
    | 0x17dc => 0xf01ff06f (* j 16dc <memcpy+0x24>  *)
    (* <_malloc_trim_r> *)
    | 0x17e0 => 0xfe010113 (* addi sp,sp,-32  *)
    | 0x17e4 => 0x00812c23 (* sw s0,24(sp)  *)
    | 0x17e8 => 0x00912a23 (* sw s1,20(sp)  *)
    | 0x17ec => 0x01212823 (* sw s2,16(sp)  *)
    | 0x17f0 => 0x01312623 (* sw s3,12(sp)  *)
    | 0x17f4 => 0x01412423 (* sw s4,8(sp)  *)
    | 0x17f8 => 0x00058993 (* mv s3,a1  *)
    | 0x17fc => 0x00112e23 (* sw ra,28(sp)  *)
    | 0x1800 => 0x00050913 (* mv s2,a0  *)
    | 0x1804 => 0x7fffea17 (* auipc s4,0x7fffe  *)
    | 0x1808 => 0x7fca0a13 (* addi s4,s4,2044 # 80000000 <__malloc_av_>  *)
    | 0x180c => 0xc51ff0ef (* jal 145c <__malloc_lock>  *)
    | 0x1810 => 0x008a2783 (* lw a5,8(s4)  *)
    | 0x1814 => 0x00001437 (* lui s0,0x1  *)
    | 0x1818 => 0xfef40413 (* addi s0,s0,-17 # fef <_malloc_r+0x3bf>  *)
    | 0x181c => 0x0047a483 (* lw s1,4(a5)  *)
    | 0x1820 => 0x000017b7 (* lui a5,0x1  *)
    | 0x1824 => 0xffc4f493 (* andi s1,s1,-4  *)
    | 0x1828 => 0x00848433 (* add s0,s1,s0  *)
    | 0x182c => 0x41340433 (* sub s0,s0,s3  *)
    | 0x1830 => 0x00c45413 (* srli s0,s0,0xc  *)
    | 0x1834 => 0xfff40413 (* addi s0,s0,-1  *)
    | 0x1838 => 0x00c41413 (* slli s0,s0,0xc  *)
    | 0x183c => 0x00f44e63 (* blt s0,a5,1858 <_malloc_trim_r+0x78>  *)
    | 0x1840 => 0x00000593 (* li a1,0  *)
    | 0x1844 => 0x00090513 (* mv a0,s2  *)
    | 0x1848 => 0xdf1ff0ef (* jal 1638 <_sbrk_r>  *)
    | 0x184c => 0x008a2783 (* lw a5,8(s4)  *)
    | 0x1850 => 0x009787b3 (* add a5,a5,s1  *)
    | 0x1854 => 0x02f50863 (* beq a0,a5,1884 <_malloc_trim_r+0xa4>  *)
    | 0x1858 => 0x00090513 (* mv a0,s2  *)
    | 0x185c => 0xc0dff0ef (* jal 1468 <__malloc_unlock>  *)
    | 0x1860 => 0x01c12083 (* lw ra,28(sp)  *)
    | 0x1864 => 0x01812403 (* lw s0,24(sp)  *)
    | 0x1868 => 0x01412483 (* lw s1,20(sp)  *)
    | 0x186c => 0x01012903 (* lw s2,16(sp)  *)
    | 0x1870 => 0x00c12983 (* lw s3,12(sp)  *)
    | 0x1874 => 0x00812a03 (* lw s4,8(sp)  *)
    | 0x1878 => 0x00000513 (* li a0,0  *)
    | 0x187c => 0x02010113 (* addi sp,sp,32  *)
    | 0x1880 => 0x00008067 (* ret  *)
    | 0x1884 => 0x408005b3 (* neg a1,s0  *)
    | 0x1888 => 0x00090513 (* mv a0,s2  *)
    | 0x188c => 0xdadff0ef (* jal 1638 <_sbrk_r>  *)
    | 0x1890 => 0xfff00793 (* li a5,-1  *)
    | 0x1894 => 0x04f50a63 (* beq a0,a5,18e8 <_malloc_trim_r+0x108>  *)
    | 0x1898 => 0x7ffff717 (* auipc a4,0x7ffff  *)
    | 0x189c => 0xdbc70713 (* addi a4,a4,-580 # 80000654 <__malloc_current_mallinfo>  *)
    | 0x18a0 => 0x008a2683 (* lw a3,8(s4)  *)
    | 0x18a4 => 0x00072783 (* lw a5,0(a4)  *)
    | 0x18a8 => 0x408484b3 (* sub s1,s1,s0  *)
    | 0x18ac => 0x0014e493 (* ori s1,s1,1  *)
    | 0x18b0 => 0x00090513 (* mv a0,s2  *)
    | 0x18b4 => 0x408787b3 (* sub a5,a5,s0  *)
    | 0x18b8 => 0x0096a223 (* sw s1,4(a3)  *)
    | 0x18bc => 0x00f72023 (* sw a5,0(a4)  *)
    | 0x18c0 => 0xba9ff0ef (* jal 1468 <__malloc_unlock>  *)
    | 0x18c4 => 0x01c12083 (* lw ra,28(sp)  *)
    | 0x18c8 => 0x01812403 (* lw s0,24(sp)  *)
    | 0x18cc => 0x01412483 (* lw s1,20(sp)  *)
    | 0x18d0 => 0x01012903 (* lw s2,16(sp)  *)
    | 0x18d4 => 0x00c12983 (* lw s3,12(sp)  *)
    | 0x18d8 => 0x00812a03 (* lw s4,8(sp)  *)
    | 0x18dc => 0x00100513 (* li a0,1  *)
    | 0x18e0 => 0x02010113 (* addi sp,sp,32  *)
    | 0x18e4 => 0x00008067 (* ret  *)
    | 0x18e8 => 0x00000593 (* li a1,0  *)
    | 0x18ec => 0x00090513 (* mv a0,s2  *)
    | 0x18f0 => 0xd49ff0ef (* jal 1638 <_sbrk_r>  *)
    | 0x18f4 => 0x008a2703 (* lw a4,8(s4)  *)
    | 0x18f8 => 0x00f00693 (* li a3,15  *)
    | 0x18fc => 0x40e507b3 (* sub a5,a0,a4  *)
    | 0x1900 => 0xf4f6dce3 (* bge a3,a5,1858 <_malloc_trim_r+0x78>  *)
    | 0x1904 => 0x7ffff697 (* auipc a3,0x7ffff  *)
    | 0x1908 => 0xc2c6a683 (* lw a3,-980(a3) # 80000530 <__malloc_sbrk_base>  *)
    | 0x190c => 0x0017e793 (* ori a5,a5,1  *)
    | 0x1910 => 0x00f72223 (* sw a5,4(a4)  *)
    | 0x1914 => 0x40d50533 (* sub a0,a0,a3  *)
    | 0x1918 => 0x7ffff797 (* auipc a5,0x7ffff  *)
    | 0x191c => 0xd2a7ae23 (* sw a0,-708(a5) # 80000654 <__malloc_current_mallinfo>  *)
    | 0x1920 => 0xf39ff06f (* j 1858 <_malloc_trim_r+0x78>  *)
    (* <_free_r> *)
    | 0x1924 => 0x12058663 (* beqz a1,1a50 <_free_r+0x12c>  *)
    | 0x1928 => 0xff010113 (* addi sp,sp,-16  *)
    | 0x192c => 0x00812423 (* sw s0,8(sp)  *)
    | 0x1930 => 0x00912223 (* sw s1,4(sp)  *)
    | 0x1934 => 0x00058413 (* mv s0,a1  *)
    | 0x1938 => 0x00050493 (* mv s1,a0  *)
    | 0x193c => 0x00112623 (* sw ra,12(sp)  *)
    | 0x1940 => 0xb1dff0ef (* jal 145c <__malloc_lock>  *)
    | 0x1944 => 0xffc42583 (* lw a1,-4(s0)  *)
    | 0x1948 => 0xff840713 (* addi a4,s0,-8  *)
    | 0x194c => 0x7fffe817 (* auipc a6,0x7fffe  *)
    | 0x1950 => 0x6b480813 (* addi a6,a6,1716 # 80000000 <__malloc_av_>  *)
    | 0x1954 => 0xffe5f793 (* andi a5,a1,-2  *)
    | 0x1958 => 0x00f70633 (* add a2,a4,a5  *)
    | 0x195c => 0x00462683 (* lw a3,4(a2)  *)
    | 0x1960 => 0x00882503 (* lw a0,8(a6)  *)
    | 0x1964 => 0x0015f893 (* andi a7,a1,1  *)
    | 0x1968 => 0xffc6f693 (* andi a3,a3,-4  *)
    | 0x196c => 0x18c50c63 (* beq a0,a2,1b04 <_free_r+0x1e0>  *)
    | 0x1970 => 0x00d62223 (* sw a3,4(a2)  *)
    | 0x1974 => 0x00d60533 (* add a0,a2,a3  *)
    | 0x1978 => 0x00452503 (* lw a0,4(a0)  *)
    | 0x197c => 0x00157513 (* andi a0,a0,1  *)
    | 0x1980 => 0x08089c63 (* bnez a7,1a18 <_free_r+0xf4>  *)
    | 0x1984 => 0xff842303 (* lw t1,-8(s0)  *)
    | 0x1988 => 0x7fffe897 (* auipc a7,0x7fffe  *)
    | 0x198c => 0x68088893 (* addi a7,a7,1664 # 80000008 <__malloc_av_+0x8>  *)
    | 0x1990 => 0x40670733 (* sub a4,a4,t1  *)
    | 0x1994 => 0x00872583 (* lw a1,8(a4)  *)
    | 0x1998 => 0x006787b3 (* add a5,a5,t1  *)
    | 0x199c => 0x13158e63 (* beq a1,a7,1ad8 <_free_r+0x1b4>  *)
    | 0x19a0 => 0x00c72303 (* lw t1,12(a4)  *)
    | 0x19a4 => 0x0065a623 (* sw t1,12(a1)  *)
    | 0x19a8 => 0x00b32423 (* sw a1,8(t1)  *)
    | 0x19ac => 0x1a050463 (* beqz a0,1b54 <_free_r+0x230>  *)
    | 0x19b0 => 0x0017e693 (* ori a3,a5,1  *)
    | 0x19b4 => 0x00d72223 (* sw a3,4(a4)  *)
    | 0x19b8 => 0x00f62023 (* sw a5,0(a2)  *)
    | 0x19bc => 0x1ff00693 (* li a3,511  *)
    | 0x19c0 => 0x0af6e463 (* bltu a3,a5,1a68 <_free_r+0x144>  *)
    | 0x19c4 => 0xff87f693 (* andi a3,a5,-8  *)
    | 0x19c8 => 0x00868693 (* addi a3,a3,8  *)
    | 0x19cc => 0x00482583 (* lw a1,4(a6)  *)
    | 0x19d0 => 0x00d806b3 (* add a3,a6,a3  *)
    | 0x19d4 => 0x0006a603 (* lw a2,0(a3)  *)
    | 0x19d8 => 0x0057d513 (* srli a0,a5,0x5  *)
    | 0x19dc => 0x00100793 (* li a5,1  *)
    | 0x19e0 => 0x00a797b3 (* sll a5,a5,a0  *)
    | 0x19e4 => 0x00b7e7b3 (* or a5,a5,a1  *)
    | 0x19e8 => 0xff868593 (* addi a1,a3,-8  *)
    | 0x19ec => 0x00c72423 (* sw a2,8(a4)  *)
    | 0x19f0 => 0x00b72623 (* sw a1,12(a4)  *)
    | 0x19f4 => 0x00f82223 (* sw a5,4(a6)  *)
    | 0x19f8 => 0x00e6a023 (* sw a4,0(a3)  *)
    | 0x19fc => 0x00e62623 (* sw a4,12(a2)  *)
    | 0x1a00 => 0x00812403 (* lw s0,8(sp)  *)
    | 0x1a04 => 0x00c12083 (* lw ra,12(sp)  *)
    | 0x1a08 => 0x00048513 (* mv a0,s1  *)
    | 0x1a0c => 0x00412483 (* lw s1,4(sp)  *)
    | 0x1a10 => 0x01010113 (* addi sp,sp,16  *)
    | 0x1a14 => 0xa55ff06f (* j 1468 <__malloc_unlock>  *)
    | 0x1a18 => 0x02051e63 (* bnez a0,1a54 <_free_r+0x130>  *)
    | 0x1a1c => 0x00d787b3 (* add a5,a5,a3  *)
    | 0x1a20 => 0x7fffe897 (* auipc a7,0x7fffe  *)
    | 0x1a24 => 0x5e888893 (* addi a7,a7,1512 # 80000008 <__malloc_av_+0x8>  *)
    | 0x1a28 => 0x00862683 (* lw a3,8(a2)  *)
    | 0x1a2c => 0x0017e513 (* ori a0,a5,1  *)
    | 0x1a30 => 0x00f705b3 (* add a1,a4,a5  *)
    | 0x1a34 => 0x17168663 (* beq a3,a7,1ba0 <_free_r+0x27c>  *)
    | 0x1a38 => 0x00c62603 (* lw a2,12(a2)  *)
    | 0x1a3c => 0x00c6a623 (* sw a2,12(a3)  *)
    | 0x1a40 => 0x00d62423 (* sw a3,8(a2)  *)
    | 0x1a44 => 0x00a72223 (* sw a0,4(a4)  *)
    | 0x1a48 => 0x00f5a023 (* sw a5,0(a1)  *)
    | 0x1a4c => 0xf71ff06f (* j 19bc <_free_r+0x98>  *)
    | 0x1a50 => 0x00008067 (* ret  *)
    | 0x1a54 => 0x0015e593 (* ori a1,a1,1  *)
    | 0x1a58 => 0xfeb42e23 (* sw a1,-4(s0)  *)
    | 0x1a5c => 0x00f62023 (* sw a5,0(a2)  *)
    | 0x1a60 => 0x1ff00693 (* li a3,511  *)
    | 0x1a64 => 0xf6f6f0e3 (* bgeu a3,a5,19c4 <_free_r+0xa0>  *)
    | 0x1a68 => 0x0097d693 (* srli a3,a5,0x9  *)
    | 0x1a6c => 0x00400613 (* li a2,4  *)
    | 0x1a70 => 0x0ed66663 (* bltu a2,a3,1b5c <_free_r+0x238>  *)
    | 0x1a74 => 0x0067d693 (* srli a3,a5,0x6  *)
    | 0x1a78 => 0x03968593 (* addi a1,a3,57  *)
    | 0x1a7c => 0x00359593 (* slli a1,a1,0x3  *)
    | 0x1a80 => 0x03868613 (* addi a2,a3,56  *)
    | 0x1a84 => 0x00b805b3 (* add a1,a6,a1  *)
    | 0x1a88 => 0x0005a683 (* lw a3,0(a1)  *)
    | 0x1a8c => 0xff858593 (* addi a1,a1,-8  *)
    | 0x1a90 => 0x00d59863 (* bne a1,a3,1aa0 <_free_r+0x17c>  *)
    | 0x1a94 => 0x1280006f (* j 1bbc <_free_r+0x298>  *)
    | 0x1a98 => 0x0086a683 (* lw a3,8(a3)  *)
    | 0x1a9c => 0x00d58863 (* beq a1,a3,1aac <_free_r+0x188>  *)
    | 0x1aa0 => 0x0046a603 (* lw a2,4(a3)  *)
    | 0x1aa4 => 0xffc67613 (* andi a2,a2,-4  *)
    | 0x1aa8 => 0xfec7e8e3 (* bltu a5,a2,1a98 <_free_r+0x174>  *)
    | 0x1aac => 0x00c6a583 (* lw a1,12(a3)  *)
    | 0x1ab0 => 0x00b72623 (* sw a1,12(a4)  *)
    | 0x1ab4 => 0x00d72423 (* sw a3,8(a4)  *)
    | 0x1ab8 => 0x00812403 (* lw s0,8(sp)  *)
    | 0x1abc => 0x00c12083 (* lw ra,12(sp)  *)
    | 0x1ac0 => 0x00e5a423 (* sw a4,8(a1)  *)
    | 0x1ac4 => 0x00048513 (* mv a0,s1  *)
    | 0x1ac8 => 0x00412483 (* lw s1,4(sp)  *)
    | 0x1acc => 0x00e6a623 (* sw a4,12(a3)  *)
    | 0x1ad0 => 0x01010113 (* addi sp,sp,16  *)
    | 0x1ad4 => 0x995ff06f (* j 1468 <__malloc_unlock>  *)
    | 0x1ad8 => 0x0a051463 (* bnez a0,1b80 <_free_r+0x25c>  *)
    | 0x1adc => 0x00c62583 (* lw a1,12(a2)  *)
    | 0x1ae0 => 0x00862603 (* lw a2,8(a2)  *)
    | 0x1ae4 => 0x00f686b3 (* add a3,a3,a5  *)
    | 0x1ae8 => 0x0016e793 (* ori a5,a3,1  *)
    | 0x1aec => 0x00b62623 (* sw a1,12(a2)  *)
    | 0x1af0 => 0x00c5a423 (* sw a2,8(a1)  *)
    | 0x1af4 => 0x00f72223 (* sw a5,4(a4)  *)
    | 0x1af8 => 0x00d70733 (* add a4,a4,a3  *)
    | 0x1afc => 0x00d72023 (* sw a3,0(a4)  *)
    | 0x1b00 => 0xf01ff06f (* j 1a00 <_free_r+0xdc>  *)
    | 0x1b04 => 0x00d786b3 (* add a3,a5,a3  *)
    | 0x1b08 => 0x02089063 (* bnez a7,1b28 <_free_r+0x204>  *)
    | 0x1b0c => 0xff842583 (* lw a1,-8(s0)  *)
    | 0x1b10 => 0x40b70733 (* sub a4,a4,a1  *)
    | 0x1b14 => 0x00c72783 (* lw a5,12(a4)  *)
    | 0x1b18 => 0x00872603 (* lw a2,8(a4)  *)
    | 0x1b1c => 0x00b686b3 (* add a3,a3,a1  *)
    | 0x1b20 => 0x00f62623 (* sw a5,12(a2)  *)
    | 0x1b24 => 0x00c7a423 (* sw a2,8(a5)  *)
    | 0x1b28 => 0x0016e613 (* ori a2,a3,1  *)
    | 0x1b2c => 0x7ffff797 (* auipc a5,0x7ffff  *)
    | 0x1b30 => 0xa087a783 (* lw a5,-1528(a5) # 80000534 <__malloc_trim_threshold>  *)
    | 0x1b34 => 0x00c72223 (* sw a2,4(a4)  *)
    | 0x1b38 => 0x00e82423 (* sw a4,8(a6)  *)
    | 0x1b3c => 0xecf6e2e3 (* bltu a3,a5,1a00 <_free_r+0xdc>  *)
    | 0x1b40 => 0x7ffff597 (* auipc a1,0x7ffff  *)
    | 0x1b44 => 0xa085a583 (* lw a1,-1528(a1) # 80000548 <__malloc_top_pad>  *)
    | 0x1b48 => 0x00048513 (* mv a0,s1  *)
    | 0x1b4c => 0xc95ff0ef (* jal 17e0 <_malloc_trim_r>  *)
    | 0x1b50 => 0xeb1ff06f (* j 1a00 <_free_r+0xdc>  *)
    | 0x1b54 => 0x00d787b3 (* add a5,a5,a3  *)
    | 0x1b58 => 0xed1ff06f (* j 1a28 <_free_r+0x104>  *)
    | 0x1b5c => 0x01400613 (* li a2,20  *)
    | 0x1b60 => 0x02d67863 (* bgeu a2,a3,1b90 <_free_r+0x26c>  *)
    | 0x1b64 => 0x05400613 (* li a2,84  *)
    | 0x1b68 => 0x06d66863 (* bltu a2,a3,1bd8 <_free_r+0x2b4>  *)
    | 0x1b6c => 0x00c7d693 (* srli a3,a5,0xc  *)
    | 0x1b70 => 0x06f68593 (* addi a1,a3,111  *)
    | 0x1b74 => 0x00359593 (* slli a1,a1,0x3  *)
    | 0x1b78 => 0x06e68613 (* addi a2,a3,110  *)
    | 0x1b7c => 0xf09ff06f (* j 1a84 <_free_r+0x160>  *)
    | 0x1b80 => 0x0017e693 (* ori a3,a5,1  *)
    | 0x1b84 => 0x00d72223 (* sw a3,4(a4)  *)
    | 0x1b88 => 0x00f62023 (* sw a5,0(a2)  *)
    | 0x1b8c => 0xe75ff06f (* j 1a00 <_free_r+0xdc>  *)
    | 0x1b90 => 0x05c68593 (* addi a1,a3,92  *)
    | 0x1b94 => 0x00359593 (* slli a1,a1,0x3  *)
    | 0x1b98 => 0x05b68613 (* addi a2,a3,91  *)
    | 0x1b9c => 0xee9ff06f (* j 1a84 <_free_r+0x160>  *)
    | 0x1ba0 => 0x00e82a23 (* sw a4,20(a6)  *)
    | 0x1ba4 => 0x00e82823 (* sw a4,16(a6)  *)
    | 0x1ba8 => 0x01172623 (* sw a7,12(a4)  *)
    | 0x1bac => 0x01172423 (* sw a7,8(a4)  *)
    | 0x1bb0 => 0x00a72223 (* sw a0,4(a4)  *)
    | 0x1bb4 => 0x00f5a023 (* sw a5,0(a1)  *)
    | 0x1bb8 => 0xe49ff06f (* j 1a00 <_free_r+0xdc>  *)
    | 0x1bbc => 0x00482503 (* lw a0,4(a6)  *)
    | 0x1bc0 => 0x40265613 (* srai a2,a2,0x2  *)
    | 0x1bc4 => 0x00100793 (* li a5,1  *)
    | 0x1bc8 => 0x00c797b3 (* sll a5,a5,a2  *)
    | 0x1bcc => 0x00a7e7b3 (* or a5,a5,a0  *)
    | 0x1bd0 => 0x00f82223 (* sw a5,4(a6)  *)
    | 0x1bd4 => 0xeddff06f (* j 1ab0 <_free_r+0x18c>  *)
    | 0x1bd8 => 0x15400613 (* li a2,340  *)
    | 0x1bdc => 0x00d66c63 (* bltu a2,a3,1bf4 <_free_r+0x2d0>  *)
    | 0x1be0 => 0x00f7d693 (* srli a3,a5,0xf  *)
    | 0x1be4 => 0x07868593 (* addi a1,a3,120  *)
    | 0x1be8 => 0x00359593 (* slli a1,a1,0x3  *)
    | 0x1bec => 0x07768613 (* addi a2,a3,119  *)
    | 0x1bf0 => 0xe95ff06f (* j 1a84 <_free_r+0x160>  *)
    | 0x1bf4 => 0x55400613 (* li a2,1364  *)
    | 0x1bf8 => 0x00d66c63 (* bltu a2,a3,1c10 <_free_r+0x2ec>  *)
    | 0x1bfc => 0x0127d693 (* srli a3,a5,0x12  *)
    | 0x1c00 => 0x07d68593 (* addi a1,a3,125  *)
    | 0x1c04 => 0x00359593 (* slli a1,a1,0x3  *)
    | 0x1c08 => 0x07c68613 (* addi a2,a3,124  *)
    | 0x1c0c => 0xe79ff06f (* j 1a84 <_free_r+0x160>  *)
    | 0x1c10 => 0x3f800593 (* li a1,1016  *)
    | 0x1c14 => 0x07e00613 (* li a2,126  *)
    | 0x1c18 => 0xe6dff06f (* j 1a84 <_free_r+0x160>  *)
    (* <__mulsi3> *)
    | 0x1c1c => 0x00050613 (* mv a2,a0  *)
    | 0x1c20 => 0x00000513 (* li a0,0  *)
    | 0x1c24 => 0x0015f693 (* andi a3,a1,1  *)
    | 0x1c28 => 0x00068463 (* beqz a3,1c30 <__mulsi3+0x14>  *)
    | 0x1c2c => 0x00c50533 (* add a0,a0,a2  *)
    | 0x1c30 => 0x0015d593 (* srli a1,a1,0x1  *)
    | 0x1c34 => 0x00161613 (* slli a2,a2,0x1  *)
    | 0x1c38 => 0xfe0596e3 (* bnez a1,1c24 <__mulsi3+0x8>  *)
    | 0x1c3c => 0x00008067 (* ret  *)
    (* <__muldi3> *)
    | 0x1c40 => 0xff010113 (* addi sp,sp,-16  *)
    | 0x1c44 => 0x00812423 (* sw s0,8(sp)  *)
    | 0x1c48 => 0x00050413 (* mv s0,a0  *)
    | 0x1c4c => 0x00112623 (* sw ra,12(sp)  *)
    | 0x1c50 => 0x00060513 (* mv a0,a2  *)
    | 0x1c54 => 0x00068393 (* mv t2,a3  *)
    | 0x1c58 => 0x00040713 (* mv a4,s0  *)
    | 0x1c5c => 0x00060813 (* mv a6,a2  *)
    | 0x1c60 => 0x00000793 (* li a5,0  *)
    | 0x1c64 => 0x00000313 (* li t1,0  *)
    | 0x1c68 => 0x00000f13 (* li t5,0  *)
    | 0x1c6c => 0x01e708b3 (* add a7,a4,t5  *)
    | 0x1c70 => 0x00187e93 (* andi t4,a6,1  *)
    | 0x1c74 => 0x00f30fb3 (* add t6,t1,a5  *)
    | 0x1c78 => 0x01f75e13 (* srli t3,a4,0x1f  *)
    | 0x1c7c => 0x00185813 (* srli a6,a6,0x1  *)
    | 0x1c80 => 0x00e8b2b3 (* sltu t0,a7,a4  *)
    | 0x1c84 => 0x00179793 (* slli a5,a5,0x1  *)
    | 0x1c88 => 0x000e8663 (* beqz t4,1c94 <__muldi3+0x54>  *)
    | 0x1c8c => 0x00088f13 (* mv t5,a7  *)
    | 0x1c90 => 0x01f28333 (* add t1,t0,t6  *)
    | 0x1c94 => 0x00171713 (* slli a4,a4,0x1  *)
    | 0x1c98 => 0x01c7e7b3 (* or a5,a5,t3  *)
    | 0x1c9c => 0xfc0818e3 (* bnez a6,1c6c <__muldi3+0x2c>  *)
    | 0x1ca0 => 0x00058663 (* beqz a1,1cac <__muldi3+0x6c>  *)
    | 0x1ca4 => 0xf79ff0ef (* jal 1c1c <__mulsi3>  *)
    | 0x1ca8 => 0x00650333 (* add t1,a0,t1  *)
    | 0x1cac => 0x00038a63 (* beqz t2,1cc0 <__muldi3+0x80>  *)
    | 0x1cb0 => 0x00040513 (* mv a0,s0  *)
    | 0x1cb4 => 0x00038593 (* mv a1,t2  *)
    | 0x1cb8 => 0xf65ff0ef (* jal 1c1c <__mulsi3>  *)
    | 0x1cbc => 0x00650333 (* add t1,a0,t1  *)
    | 0x1cc0 => 0x00c12083 (* lw ra,12(sp)  *)
    | 0x1cc4 => 0x00812403 (* lw s0,8(sp)  *)
    | 0x1cc8 => 0x000f0513 (* mv a0,t5  *)
    | 0x1ccc => 0x00030593 (* mv a1,t1  *)
    | 0x1cd0 => 0x01010113 (* addi sp,sp,16  *)
    | 0x1cd4 => 0x00008067 (* ret  *)
    (* <__divsi3> *)
    | 0x1cd8 => 0x06054063 (* bltz a0,1d38 <__umodsi3+0x10>  *)
    | 0x1cdc => 0x0605c663 (* bltz a1,1d48 <__umodsi3+0x20>  *)
    (* <__hidden___udivsi3> *)
    | 0x1ce0 => 0x00058613 (* mv a2,a1  *)
    | 0x1ce4 => 0x00050593 (* mv a1,a0  *)
    | 0x1ce8 => 0xfff00513 (* li a0,-1  *)
    | 0x1cec => 0x02060c63 (* beqz a2,1d24 <__hidden___udivsi3+0x44>  *)
    | 0x1cf0 => 0x00100693 (* li a3,1  *)
    | 0x1cf4 => 0x00b67a63 (* bgeu a2,a1,1d08 <__hidden___udivsi3+0x28>  *)
    | 0x1cf8 => 0x00c05863 (* blez a2,1d08 <__hidden___udivsi3+0x28>  *)
    | 0x1cfc => 0x00161613 (* slli a2,a2,0x1  *)
    | 0x1d00 => 0x00169693 (* slli a3,a3,0x1  *)
    | 0x1d04 => 0xfeb66ae3 (* bltu a2,a1,1cf8 <__hidden___udivsi3+0x18>  *)
    | 0x1d08 => 0x00000513 (* li a0,0  *)
    | 0x1d0c => 0x00c5e663 (* bltu a1,a2,1d18 <__hidden___udivsi3+0x38>  *)
    | 0x1d10 => 0x40c585b3 (* sub a1,a1,a2  *)
    | 0x1d14 => 0x00d56533 (* or a0,a0,a3  *)
    | 0x1d18 => 0x0016d693 (* srli a3,a3,0x1  *)
    | 0x1d1c => 0x00165613 (* srli a2,a2,0x1  *)
    | 0x1d20 => 0xfe0696e3 (* bnez a3,1d0c <__hidden___udivsi3+0x2c>  *)
    | 0x1d24 => 0x00008067 (* ret  *)
    (* <__umodsi3> *)
    | 0x1d28 => 0x00008293 (* mv t0,ra  *)
    | 0x1d2c => 0xfb5ff0ef (* jal 1ce0 <__hidden___udivsi3>  *)
    | 0x1d30 => 0x00058513 (* mv a0,a1  *)
    | 0x1d34 => 0x00028067 (* jr t0  *)
    | 0x1d38 => 0x40a00533 (* neg a0,a0  *)
    | 0x1d3c => 0x00b04863 (* bgtz a1,1d4c <__umodsi3+0x24>  *)
    | 0x1d40 => 0x40b005b3 (* neg a1,a1  *)
    | 0x1d44 => 0xf9dff06f (* j 1ce0 <__hidden___udivsi3>  *)
    | 0x1d48 => 0x40b005b3 (* neg a1,a1  *)
    | 0x1d4c => 0x00008293 (* mv t0,ra  *)
    | 0x1d50 => 0xf91ff0ef (* jal 1ce0 <__hidden___udivsi3>  *)
    | 0x1d54 => 0x40a00533 (* neg a0,a0  *)
    | 0x1d58 => 0x00028067 (* jr t0  *)
    (* <__modsi3> *)
    | 0x1d5c => 0x00008293 (* mv t0,ra  *)
    | 0x1d60 => 0x0005ca63 (* bltz a1,1d74 <__modsi3+0x18>  *)
    | 0x1d64 => 0x00054c63 (* bltz a0,1d7c <__modsi3+0x20>  *)
    | 0x1d68 => 0xf79ff0ef (* jal 1ce0 <__hidden___udivsi3>  *)
    | 0x1d6c => 0x00058513 (* mv a0,a1  *)
    | 0x1d70 => 0x00028067 (* jr t0  *)
    | 0x1d74 => 0x40b005b3 (* neg a1,a1  *)
    | 0x1d78 => 0xfe0558e3 (* bgez a0,1d68 <__modsi3+0xc>  *)
    | 0x1d7c => 0x40a00533 (* neg a0,a0  *)
    | 0x1d80 => 0xf61ff0ef (* jal 1ce0 <__hidden___udivsi3>  *)
    | 0x1d84 => 0x40b00533 (* neg a0,a1  *)
    | 0x1d88 => 0x00028067 (* jr t0  *)
    | _ => 0
    end.

Definition start_union_find_bin : N := 0x0.
Definition end_union_find_bin : N := 0x1d88.
