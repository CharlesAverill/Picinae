Require Import Picinae_riscv.
Require Import NArith.

Definition ct_swap (a : addr) : N :=
    match a with
    (* <__crt0_entry> *)
    | 0x0 => 0xf14020f3 (* csrrs ra,mhartid,zero  *)
    | 0x4 => 0x80002217 (* auipc tp,0x80002  *)
    | 0x8 => 0xffb20213 (* addi tp,tp,-5 # 80001fff <__crt0_ram_last>  *)
    | 0xc => 0xff027113 (* andi sp,tp,-16  *)
    | 0x10 => 0x80000197 (* auipc gp,0x80000  *)
    | 0x14 => 0x7f018193 (* addi gp,gp,2032 # 80000800 <__global_pointer>  *)
    | 0x18 => 0x000022b7 (* lui t0,0x2  *)
    | 0x1c => 0x80028293 (* addi t0,t0,-2048 # 1800 <__fini_array_end+0x15ac>  *)
    | 0x20 => 0x30029073 (* csrrw zero,mstatus,t0  *)
    | 0x24 => 0x00000317 (* auipc t1,0x0  *)
    | 0x28 => 0x18030313 (* addi t1,t1,384 # 1a4 <__crt0_trap>  *)
    | 0x2c => 0x30531073 (* csrrw zero,mtvec,t1  *)
    | 0x30 => 0x30401073 (* csrrw zero,mie,zero  *)
    | 0x34 => 0x00000397 (* auipc t2,0x0  *)
    | 0x38 => 0x22038393 (* addi t2,t2,544 # 254 <__fini_array_end>  *)
    | 0x3c => 0x80000417 (* auipc s0,0x80000  *)
    | 0x40 => 0xfc440413 (* addi s0,s0,-60 # 80000000 <__crt0_bss_end>  *)
    | 0x44 => 0x80000497 (* auipc s1,0x80000  *)
    | 0x48 => 0xfbc48493 (* addi s1,s1,-68 # 80000000 <__crt0_bss_end>  *)
    | 0x4c => 0x80000517 (* auipc a0,0x80000  *)
    | 0x50 => 0xfb450513 (* addi a0,a0,-76 # 80000000 <__crt0_bss_end>  *)
    | 0x54 => 0x80000597 (* auipc a1,0x80000  *)
    | 0x58 => 0xfac58593 (* addi a1,a1,-84 # 80000000 <__crt0_bss_end>  *)
    | 0x5c => 0x00000613 (* addi a2,zero,0  *)
    | 0x60 => 0x00000693 (* addi a3,zero,0  *)
    | 0x64 => 0x00000713 (* addi a4,zero,0  *)
    | 0x68 => 0x00000793 (* addi a5,zero,0  *)
    | 0x6c => 0x00000813 (* addi a6,zero,0  *)
    | 0x70 => 0x00000893 (* addi a7,zero,0  *)
    | 0x74 => 0x00000913 (* addi s2,zero,0  *)
    | 0x78 => 0x00000993 (* addi s3,zero,0  *)
    | 0x7c => 0x00000a13 (* addi s4,zero,0  *)
    | 0x80 => 0x00000a93 (* addi s5,zero,0  *)
    | 0x84 => 0x00000b13 (* addi s6,zero,0  *)
    | 0x88 => 0x00000b93 (* addi s7,zero,0  *)
    | 0x8c => 0x00000c13 (* addi s8,zero,0  *)
    | 0x90 => 0x00000c93 (* addi s9,zero,0  *)
    | 0x94 => 0x00000d13 (* addi s10,zero,0  *)
    | 0x98 => 0x00000d93 (* addi s11,zero,0  *)
    | 0x9c => 0x00000e13 (* addi t3,zero,0  *)
    | 0xa0 => 0x00000e93 (* addi t4,zero,0  *)
    | 0xa4 => 0x00000f13 (* addi t5,zero,0  *)
    | 0xa8 => 0x00000f93 (* addi t6,zero,0  *)
    (* <__crt0_smp_check> *)
    | 0xac => 0x02008a63 (* beq ra,zero,e0 <__crt0_smp_primary>  *)
    | 0xb0 => 0x00000797 (* auipc a5,0x0  *)
    | 0xb4 => 0x01878793 (* addi a5,a5,24 # c8 <__crt0_smp_wakeup>  *)
    | 0xb8 => 0x30579073 (* csrrw zero,mtvec,a5  *)
    | 0xbc => 0x30446073 (* csrrsi zero,mie,8  *)
    | 0xc0 => 0x30046073 (* csrrsi zero,mstatus,8  *)
    | 0xc4 => 0x0d80006f (* jal zero,19c <__crt0_sleep>  *)
    (* <__crt0_smp_wakeup> *)
    | 0xc8 => 0xfff44737 (* lui a4,0xfff44  *)
    | 0xcc => 0x00872103 (* lw sp,8(a4) # fff44008 <__crt0_ram_last+0x7ff42009>  *)
    | 0xd0 => 0x00c72603 (* lw a2,12(a4)  *)
    | 0xd4 => 0xfff40737 (* lui a4,0xfff40  *)
    | 0xd8 => 0x00072223 (* sw zero,4(a4) # fff40004 <__crt0_ram_last+0x7ff3e005>  *)
    | 0xdc => 0x05c0006f (* jal zero,138 <__crt0_main_entry>  *)
    (* <__crt0_smp_primary> *)
    | 0xe0 => 0x00838e63 (* beq t2,s0,fc <__crt0_bss_clear>  *)
    (* <__crt0_data_copy> *)
    | 0xe4 => 0x00945c63 (* bge s0,s1,fc <__crt0_bss_clear>  *)
    | 0xe8 => 0x0003a783 (* lw a5,0(t2)  *)
    | 0xec => 0x00f42023 (* sw a5,0(s0)  *)
    | 0xf0 => 0x00438393 (* addi t2,t2,4  *)
    | 0xf4 => 0x00440413 (* addi s0,s0,4  *)
    | 0xf8 => 0xfedff06f (* jal zero,e4 <__crt0_data_copy>  *)
    (* <__crt0_bss_clear> *)
    | 0xfc => 0x00b55863 (* bge a0,a1,10c <__crt0_bss_clear_end>  *)
    | 0x100 => 0x00052023 (* sw zero,0(a0)  *)
    | 0x104 => 0x00450513 (* addi a0,a0,4  *)
    | 0x108 => 0xff5ff06f (* jal zero,fc <__crt0_bss_clear>  *)
    (* <__crt0_bss_clear_end> *)
    | 0x10c => 0x00000417 (* auipc s0,0x0  *)
    | 0x110 => 0x14840413 (* addi s0,s0,328 # 254 <__fini_array_end>  *)
    | 0x114 => 0x00000497 (* auipc s1,0x0  *)
    | 0x118 => 0x14048493 (* addi s1,s1,320 # 254 <__fini_array_end>  *)
    (* <__crt0_constructors> *)
    | 0x11c => 0x00945a63 (* bge s0,s1,130 <__crt0_constructors_end>  *)
    | 0x120 => 0x00042083 (* lw ra,0(s0)  *)
    | 0x124 => 0x000080e7 (* jalr ra,0(ra)  *)
    | 0x128 => 0x00440413 (* addi s0,s0,4  *)
    | 0x12c => 0xff1ff06f (* jal zero,11c <__crt0_constructors>  *)
    (* <__crt0_constructors_end> *)
    | 0x130 => 0x00000617 (* auipc a2,0x0  *)
    | 0x134 => 0x0f860613 (* addi a2,a2,248 # 228 <main>  *)
    (* <__crt0_main_entry> *)
    | 0x138 => 0x80000197 (* auipc gp,0x80000  *)
    | 0x13c => 0x6c818193 (* addi gp,gp,1736 # 80000800 <__global_pointer>  *)
    | 0x140 => 0x0ff0000f (* fence iorw,iorw  *)
    | 0x144 => 0x0000100f (* fence.i  *)
    | 0x148 => 0x30029073 (* csrrw zero,mstatus,t0  *)
    | 0x14c => 0x00000513 (* addi a0,zero,0  *)
    | 0x150 => 0x00000593 (* addi a1,zero,0  *)
    | 0x154 => 0x000600e7 (* jalr ra,0(a2)  *)
    (* <__crt0_main_exit> *)
    | 0x158 => 0x30401073 (* csrrw zero,mie,zero  *)
    | 0x15c => 0x34051073 (* csrrw zero,mscratch,a0  *)
    | 0x160 => 0x00000517 (* auipc a0,0x0  *)
    | 0x164 => 0x04450513 (* addi a0,a0,68 # 1a4 <__crt0_trap>  *)
    | 0x168 => 0x30551073 (* csrrw zero,mtvec,a0  *)
    | 0x16c => 0xf1402473 (* csrrs s0,mhartid,zero  *)
    | 0x170 => 0x02041463 (* bne s0,zero,198 <__crt0_destructors_end>  *)
    | 0x174 => 0x00000417 (* auipc s0,0x0  *)
    | 0x178 => 0x0e040413 (* addi s0,s0,224 # 254 <__fini_array_end>  *)
    | 0x17c => 0x00000497 (* auipc s1,0x0  *)
    | 0x180 => 0x0d848493 (* addi s1,s1,216 # 254 <__fini_array_end>  *)
    (* <__crt0_destructors> *)
    | 0x184 => 0x00945a63 (* bge s0,s1,198 <__crt0_destructors_end>  *)
    | 0x188 => 0x00042083 (* lw ra,0(s0)  *)
    | 0x18c => 0x000080e7 (* jalr ra,0(ra)  *)
    | 0x190 => 0x00440413 (* addi s0,s0,4  *)
    | 0x194 => 0xff1ff06f (* jal zero,184 <__crt0_destructors>  *)
    (* <__crt0_destructors_end> *)
    | 0x198 => 0x00100073 (* ebreak  *)
    (* <__crt0_sleep> *)
    | 0x19c => 0x10500073 (* wfi  *)
    | 0x1a0 => 0xffdff06f (* jal zero,19c <__crt0_sleep>  *)
    (* <__crt0_trap> *)
    | 0x1a4 => 0x34041073 (* csrrw zero,mscratch,s0  *)
    | 0x1a8 => 0x34202473 (* csrrs s0,mcause,zero  *)
    | 0x1ac => 0x01f45413 (* srli s0,s0,0x1f  *)
    | 0x1b0 => 0x02041663 (* bne s0,zero,1dc <__crt0_trap_end>  *)
    | 0x1b4 => 0x34102473 (* csrrs s0,mepc,zero  *)
    | 0x1b8 => 0x00440413 (* addi s0,s0,4  *)
    | 0x1bc => 0x34141073 (* csrrw zero,mepc,s0  *)
    | 0x1c0 => 0x34a02473 (* csrrs s0,0x34a,zero  *)
    | 0x1c4 => 0x00347413 (* andi s0,s0,3  *)
    | 0x1c8 => 0xffd40413 (* addi s0,s0,-3  *)
    | 0x1cc => 0x00040863 (* beq s0,zero,1dc <__crt0_trap_end>  *)
    | 0x1d0 => 0x34102473 (* csrrs s0,mepc,zero  *)
    | 0x1d4 => 0xffe40413 (* addi s0,s0,-2  *)
    | 0x1d8 => 0x34141073 (* csrrw zero,mepc,s0  *)
    (* <__crt0_trap_end> *)
    | 0x1dc => 0x34002473 (* csrrs s0,mscratch,zero  *)
    | 0x1e0 => 0x30200073 (* mret  *)
    (* <ct_swap> *)
    | 0x1e4 => 0x00269693 (* slli a3,a3,0x2  *)
    | 0x1e8 => 0x40a00533 (* sub a0,zero,a0  *)
    | 0x1ec => 0x00d606b3 (* add a3,a2,a3  *)
    | 0x1f0 => 0x00d61463 (* bne a2,a3,1f8 <ct_swap+0x14>  *)
    | 0x1f4 => 0x00008067 (* jalr zero,0(ra)  *)
    | 0x1f8 => 0x0005a703 (* lw a4,0(a1)  *)
    | 0x1fc => 0x00062783 (* lw a5,0(a2)  *)
    | 0x200 => 0x00458593 (* addi a1,a1,4  *)
    | 0x204 => 0x00460613 (* addi a2,a2,4  *)
    | 0x208 => 0x00f747b3 (* xor a5,a4,a5  *)
    | 0x20c => 0x00a7f7b3 (* and a5,a5,a0  *)
    | 0x210 => 0x00f74733 (* xor a4,a4,a5  *)
    | 0x214 => 0xfee5ae23 (* sw a4,-4(a1)  *)
    | 0x218 => 0xffc62703 (* lw a4,-4(a2)  *)
    | 0x21c => 0x00f747b3 (* xor a5,a4,a5  *)
    | 0x220 => 0xfef62e23 (* sw a5,-4(a2)  *)
    | 0x224 => 0xfcdff06f (* jal zero,1f0 <ct_swap+0xc>  *)
    (* <main> *)
    | 0x228 => 0xff010113 (* addi sp,sp,-16  *)
    | 0x22c => 0x00000513 (* addi a0,zero,0  *)
    | 0x230 => 0x00000693 (* addi a3,zero,0  *)
    | 0x234 => 0x00000613 (* addi a2,zero,0  *)
    | 0x238 => 0x00000593 (* addi a1,zero,0  *)
    | 0x23c => 0x00112623 (* sw ra,12(sp)  *)
    | 0x240 => 0xfa5ff0ef (* jal ra,1e4 <ct_swap>  *)
    | 0x244 => 0x00c12083 (* lw ra,12(sp)  *)
    | 0x248 => 0x00000513 (* addi a0,zero,0  *)
    | 0x24c => 0x01010113 (* addi sp,sp,16  *)
    | 0x250 => 0x00008067 (* jalr zero,0(ra)  *)
    | _ => 0
    end.

Definition start_ct_swap : N := 0x0.
Definition end_ct_swap : N := 0x250.
